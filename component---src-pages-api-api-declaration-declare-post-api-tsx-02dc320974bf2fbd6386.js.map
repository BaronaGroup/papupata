{"version":3,"sources":["webpack://papupata-docs/./src/components/DeclareAPIPage.tsx","webpack://papupata-docs/./src/components/IncludeAvailableFromContext.tsx","webpack://papupata-docs/./src/components/api-components.tsx","webpack://papupata-docs/./src/components/guides.tsx","webpack://papupata-docs/./src/components/links.tsx","webpack://papupata-docs/./src/components/members-table.tsx","webpack://papupata-docs/./src/pages/api/APIDeclaration/declarePostAPI.tsx","webpack://papupata-docs/./src/utils.ts"],"names":["NestedTitle","styled","DeclareAPIPage","method","availableFrom","ucFirst","version","toUpperCase","name","dataType","to","href","id","context","IncludeAvailableFromContext","React","Section","SectionHeading","SubHeading","ExampleCommonContainer","Purpose","children","AvailableFrom","Usage","Parameters","includeAvailableFrom","label","value","Parameter","MethodReturnType","Caveats","Examples","Example","language","ExampleCommon","TypeParameters","Row","NameColumn","DefaultValueColumn","DescriptionColumn","AvailableFromColumn","TypeParameter","defaultValue","Overview","Level0","Level1","GuideContent","content","map","child","style","marginLeft","level","key","anchor","heading","Heading","FixedFont","IncompleteApiDeclarationLink","DeclaredAPILink","NameColumnBase","TypeColumn","DataTypeColumn","RequiredColumnStyles","RequiredColumn","includeRequiredColumn","useContext","MemberContext","Error","createContext","Members","Provider","MethodMember","required","displayName","PropertyMember","link","ExposedTypeMember","declarePostAPI","s","substr","toLowerCase"],"mappings":"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","file":"component---src-pages-api-api-declaration-declare-post-api-tsx-02dc320974bf2fbd6386.js","sourcesContent":["import React from 'react'\nimport { ucFirst } from '../utils'\nimport IndexLayout from '../layouts'\nimport Page from './Page'\nimport Container from './Container'\nimport { Purpose, Usage, Parameters, MethodReturnType, Parameter, Examples, Example, AvailableFrom } from './api-components'\nimport { IncompleteApiDeclarationLink } from './links'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { Members, PropertyMember } from './members-table'\nimport { FixedFont } from './guides'\n\nconst NestedTitle = styled.h5`\n  font-size: 1rem;\n`\n\ntype Props = { method: string; availableFrom?: '1.5.0' }\nexport default function DeclareAPIPage({ method, availableFrom }: Props) {\n  return (\n    <IndexLayout>\n      <Page>\n        <Container>\n          <h1>API Reference</h1>\n          <h2>class APIDeclaration</h2>\n          <h3>method declare{ucFirst(method)}API</h3>\n        </Container>\n        {availableFrom && <AvailableFrom version={availableFrom} />}\n        <Purpose>Used for declaring an API using the HTTP {method.toUpperCase()} method</Purpose>\n        <Usage>APIs can be declared at any time.</Usage>\n        <Parameters>\n          <Parameter name=\"path\" dataType=\"string\">\n            Path to the API under the base URL of the APIDeclaration.\n            <p>\n              Version 1.8.0 onwards: If you wish to declare different APIs on the same path but different query parameters, see{' '}\n              <Link to=\"/guides/declaring/query-based-variants\">Query-based variants</Link> for more information.\n            </p>\n          </Parameter>\n          <Parameter name=\"routeOptions\" dataType=\"varies\">\n            Options to the route. Type type is specified by the RouteOptions type parameter of the API declaration. They have no inherent\n            meaning in papupata, they are simply stored to be used by the application.\n          </Parameter>\n          <Parameter name=\"papupataOptions\" availableFrom=\"2.0.0\" dataType={<a href=\"#papupataRouteOptions\">PapupataRouteOptions</a>}>\n            Route-specific options papupata is aware of.\n          </Parameter>\n        </Parameters>\n        <MethodReturnType>\n          <IncompleteApiDeclarationLink />\n        </MethodReturnType>\n        <NestedTitle id=\"papupataRouteOptions\">PapupataRouteOptions</NestedTitle>\n        <Members context=\"DeclareAPI\">\n          <PropertyMember name=\"disableAutoImplement\" dataType=\"boolean\">\n            Prevents automatic implementation of this route (as producing 501) even when the configuration option{' '}\n            <FixedFont>autoImplementAllAPIs</FixedFont> is set to true (which is its default value in papupata 2.x). This is can be useful\n            when there are a few routes that must be implemented in other ways for whatever reason.\n          </PropertyMember>\n          <PropertyMember name=\"validationBehavior\" dataType=\"ValidationBehavior\">\n            <p>\n              Can be used to override the validation behavior configured to be the default for all APIs. Papupata's own default is to throw\n              upon validation failure, though an API declaration can be configured with a different default as well. A route-specific\n              behavior can be used with this field.\n            </p>\n            <p>\n              The valid values are <FixedFont>ValidationBehavior.THROW</FixedFont> (which is the default descibed above) and{' '}\n              <FixedFont>ValidationBehavior.REROUTE</FixedFont> which simply ignores the route if the parameters are not valid.\n            </p>\n            <p>ValidationBehavior can be imported from papupata/config</p>\n          </PropertyMember>\n        </Members>\n        <Examples>\n          <Example>\n            {`\n            import {APIDeclaration} from 'papupata'\n            const api = new APIDeclaration()\n\n            const MyAPI = api.declare${ucFirst(method)}API('/api/person')\n              .response<string>()\n          `}\n          </Example>\n        </Examples>\n      </Page>\n    </IndexLayout>\n  )\n}\n","import * as React from 'react'\n\nexport const IncludeAvailableFromContext = React.createContext(false)\n","import styled from 'styled-components'\nimport React, { ReactNode } from 'react'\nimport { Code } from './Code'\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\n\nexport const Section = styled.section``\nexport const SectionHeading = styled.h4``\nexport const SubHeading = styled.h5``\nexport const ExampleCommonContainer = styled.section`\n  padding: 15px 30px;\n  background: lightyellow;\n`\n\nexport const Purpose: React.FC = ({ children }) => (\n    <Section>\n      <SectionHeading>Purpose</SectionHeading>\n      {children}\n    </Section>\n  )\n\nexport type ValidVersions = '1.1.0' | '1.2.0' | '1.5.0' | '1.8.0' | '2.0.0'\nexport const AvailableFrom = ({ version }: { version: ValidVersions }) => (\n    <Section>\n      <SectionHeading>Availability</SectionHeading>\n      This functionality is available from papupata version {version} onwards.\n    </Section>\n  )\n\nexport const Usage: React.FC = ({ children }) => (\n    <Section>\n      <SectionHeading>Usage</SectionHeading>\n      {children}\n    </Section>\n  )\nexport const Parameters: React.FC<{ includeAvailableFrom?: boolean; label?: string }> = ({ children, includeAvailableFrom, label }) => (\n    <Section>\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n        <SectionHeading>Parameters{label && `: ${label}`}</SectionHeading>\n        {children ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Description</th>\n                {includeAvailableFrom && <th>Introduced in</th>}\n              </tr>\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        ) : (\n          <p>There are no parameters.</p>\n        )}\n      </IncludeAvailableFromContext.Provider>\n    </Section>\n  )\n\nexport const Parameter: React.FC<{ name: string; dataType: any; availableFrom?: ValidVersions }> = ({\n  children,\n  name,\n  dataType,\n  availableFrom = '1.0.0'\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{dataType}</td>\n      <td>{children}</td>\n      {includeAvailableFrom && <td>{availableFrom}</td>}\n    </tr>\n  )\n}\n\nexport const MethodReturnType: React.FC = ({ children }) => (\n    <Section>\n      <SectionHeading>Returns</SectionHeading>\n      {children}\n    </Section>\n  )\n\nexport const Caveats: React.FC = ({ children }) => (\n    <Section>\n      <SectionHeading>Caveats</SectionHeading>\n      {children}\n    </Section>\n  )\nexport const Examples: React.FC<{ children: any }> = ({ children }) => (\n    <Section>\n      <SectionHeading>Examples</SectionHeading>\n      {children}\n    </Section>\n  )\n\nexport const Example: React.FC<{ label?: string; children: string }> = ({ children, label }) => (\n    <>\n      {label && <SubHeading>{label}</SubHeading>}\n      <Code language={'typescript'}>{children}</Code>\n    </>\n  )\n\nexport const ExampleCommon: React.FC<{ children: any }> = ({ children }) => (\n    <ExampleCommonContainer>\n      <SubHeading>Common to examples below:</SubHeading>\n      {children}\n    </ExampleCommonContainer>\n  )\n\nexport const TypeParameters: React.FC<{ children: ReactNode; includeAvailableFrom?: boolean }> = ({ children, includeAvailableFrom }) => (\n    <Section>\n      <SectionHeading>Type parameeters</SectionHeading>\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n        <SectionHeading>Parameters</SectionHeading>\n        {children ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Default value</th>\n                <th>Description</th>\n                {includeAvailableFrom ? <th>Introduced in</th> : ''}\n              </tr>\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        ) : (\n          <p>There are no parameters.</p>\n        )}\n      </IncludeAvailableFromContext.Provider>\n    </Section>\n  )\n\nconst Row = styled.tr``\nconst NameColumn = styled.td``\nconst DefaultValueColumn = styled.td``\nconst DescriptionColumn = styled.td``\nconst AvailableFromColumn = styled.td``\n\nexport const TypeParameter: React.FC<{ name: string; defaultValue?: string; availableFrom?: string }> = ({\n  children,\n  name,\n  defaultValue,\n  availableFrom = 'none'\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <Row>\n      <NameColumn>{name}</NameColumn>\n      <DefaultValueColumn>{defaultValue}</DefaultValueColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport { Section, SectionHeading } from './api-components'\nimport styled from 'styled-components'\n\nexport function Overview({ children }: { children: ReactNode }) {\n  return (\n    <Section>\n      <SectionHeading>Overview</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\ninterface GuidePart {\n  heading: ReactNode\n  anchor: string\n  content: ReactNode\n  level?: number\n}\n\nconst Level0 = styled.h4``\nconst Level1 = styled.h5`\n  font-size: 1.1em;\n`\n\nexport function GuideContent({ content }: { content: GuidePart[] }) {\n  return (\n    <div>\n      <Section>\n        <SectionHeading>Table of contents</SectionHeading>\n        <ul>\n          {content.map((child) => (\n            <li style={{ marginLeft: 18 * (child.level || 0) }} key={child.anchor}>\n              <a href={`#${child.anchor}`}>{child.heading}</a>\n            </li>\n          ))}\n        </ul>\n      </Section>\n      {content.map((child) => {\n        const Heading = !child.level ? Level0 : Level1\n        return (\n          <Section id={child.anchor} key={child.anchor}>\n            <Heading>{child.heading}</Heading>\n            {child.content}\n          </Section>\n        )\n      })}\n    </div>\n  )\n}\n\nexport const FixedFont = styled.span`\n  font-family: 'Consolas', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nexport function IncompleteApiDeclarationLink() {\n  return <Link to=\"/api/PartiallyDeclaredAPI\">PartiallyDeclaredAPI</Link>\n}\n\nexport function DeclaredAPILink() {\n  return <Link to=\"/api/DeclaredAPI\">DeclaredAPI</Link>\n}\n","import { Section, SectionHeading } from './api-components'\nimport React, { createContext, ReactNode, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\n\nconst Row = styled.tr``\nconst NameColumnBase = styled.td``\nconst TypeColumn = styled.td``\nconst DataTypeColumn = styled.td``\nconst DescriptionColumn = styled.td``\nconst RequiredColumnStyles = styled.td``\nconst AvailableFromColumn = styled.td``\n\nfunction RequiredColumn({ children }: { children: ReactNode }) {\n  const { includeRequiredColumn } = useContext(MemberContext)\n  if (!includeRequiredColumn && children) throw new Error('Being asked to show required cell, yet it does not exist')\n  return includeRequiredColumn ? <RequiredColumnStyles>{children}</RequiredColumnStyles> : null\n}\n\nconst MemberContext = createContext({ context: '', includeRequiredColumn: false })\n\nconst NameColumn: React.FC<{ name: ReactNode }> = ({ name, children }) => {\n  const { context } = useContext(MemberContext)\n  return (\n    <NameColumnBase>\n      <Link to={`/api/${context}/${name}`}>{children || name}</Link>\n    </NameColumnBase>\n  )\n}\n\nexport const Members: React.FC<{ context: string; includeRequiredColumn?: boolean; includeAvailableFrom?: boolean }> = ({\n  children,\n  context,\n  includeRequiredColumn,\n  includeAvailableFrom\n}) => (\n    <Section>\n      <MemberContext.Provider value={{ context, includeRequiredColumn: !!includeRequiredColumn }}>\n        <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n          <SectionHeading>Members</SectionHeading>\n          <table>\n            <thead>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Data type/return type</th>\n              <th>Description</th>\n              {includeRequiredColumn && <th>Required</th>}\n              {includeAvailableFrom && <th>Introduced in</th>}\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        </IncludeAvailableFromContext.Provider>\n      </MemberContext.Provider>\n    </Section>\n  )\nexport const MethodMember: React.FC<{ name: string; dataType: any; required?: any; displayName?: any; availableFrom?: string }> = ({\n  children,\n  name,\n  dataType,\n  required,\n  displayName,\n  availableFrom\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <Row>\n      <NameColumn name={name}>{displayName}</NameColumn>\n      <TypeColumn>method</TypeColumn>\n      <DataTypeColumn>{dataType}</DataTypeColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n\nexport const PropertyMember: React.FC<{ name: ReactNode; dataType: any; required?: any; availableFrom?: string; link?: boolean }> = ({\n  children,\n  name,\n  dataType,\n  required,\n  availableFrom,\n  link\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n\n  return (\n    <Row>\n      {link ? <NameColumn name={name}>{name}</NameColumn> : <NameColumnBase>{name}</NameColumnBase>}\n      <TypeColumn>property</TypeColumn>\n      <DataTypeColumn>{dataType}</DataTypeColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n\nexport const ExposedTypeMember: React.FC<{ name: string }> = ({ children, name }) => (\n    <Row>\n      <NameColumnBase>{name}</NameColumnBase>\n      <TypeColumn>property</TypeColumn>\n      <DataTypeColumn>n/a</DataTypeColumn>\n      <DescriptionColumn>{children}. Type type itself must be accessed using the typeof operator.</DescriptionColumn>\n    </Row>\n  )\n","import React from 'react'\nimport '../../../prepare'\nimport DeclareAPIPage from '../../../components/DeclareAPIPage'\n\nexport default function declarePostAPI() {\n  return <DeclareAPIPage method=\"post\" />\n}\n","export function ucFirst(s: string) {\n  return s[0].toUpperCase() + s.substr(1).toLowerCase()\n}\n"],"sourceRoot":""}