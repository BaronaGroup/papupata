{"version":3,"sources":["webpack:///./src/pages/api/DeclaredAPI/getURL.tsx"],"names":["GetURL","name","dataType","label"],"mappings":"2FAAA,8FAKe,SAASA,IACtB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,uCACA,2CACA,wCAEF,YAAC,IAAD,gCACA,YAAC,IAAD,KACE,2FAEA,yKAIA,wEAEF,YAAC,IAAD,KACE,YAAC,IAAD,CAAWC,KAAK,qBAAqBC,SAAS,UAA9C,0FAIF,YAAC,IAAD,eACA,YAAC,IAAD,KACE,YAAC,IAAD,CAASC,MAAM,aAAf,0bAaA,YAAC,IAAD,CAASA,MAAM,kCAAf,meAaW,IACX,YAAC,IAAD,CAASA,MAAM,kCAAf","file":"component---src-pages-api-declared-api-get-url-tsx-5c52cb3a5ddafd015e00.js","sourcesContent":["import IndexLayout from '../../../layouts'\r\nimport Page from '../../../components/Page'\r\nimport Container from '../../../components/Container'\r\nimport { Purpose, Usage, Parameter, Parameters, MethodReturnType, Examples, Example } from '../../../components/api-components'\r\n\r\nexport default function GetURL() {\r\n  return (\r\n    <IndexLayout>\r\n      <Page>\r\n        <Container>\r\n          <h1>API Reference</h1>\r\n          <h2>class DeclaredAPI</h2>\r\n          <h3>method getURL</h3>\r\n        </Container>\r\n        <Purpose>Get the URL for the API</Purpose>\r\n        <Usage>\r\n          <p>This function requires base URL to be configured in order to work.</p>\r\n\r\n          <p>\r\n            As path parameters are considered to be a part of the URL, their values must be provided to the getAPI call and they are\r\n            injected in to the URL.\r\n          </p>\r\n          <p>Query parameters are optionally included, too.</p>\r\n        </Usage>\r\n        <Parameters>\r\n          <Parameter name=\"pathAndQueryParams\" dataType=\"Object\">\r\n            Path parameters value for the API, or combination of path and query parameter values.\r\n          </Parameter>\r\n        </Parameters>\r\n        <MethodReturnType>string</MethodReturnType>\r\n        <Examples>\r\n          <Example label=\"Path only\">\r\n            {`\r\n            import { APIDeclaration } from 'papupata'\r\n            const api = new APIDeclaration()\r\n            api.configure({baseURL: 'https://example.com'})\r\n            const myAPI = api.declarePostAPI('/do-stuff/:param')\r\n              .params(['param'] as const)\r\n              .response<string>()\r\n\r\n            const URL = myAPI.getURL({param: 'value'})\r\n            // URL is now https://example.com/do-stuff/value\r\n          `}\r\n          </Example>\r\n          <Example label=\"Path and query (query omitted)\">\r\n            {`\r\n            import { APIDeclaration } from 'papupata'\r\n            const api = new APIDeclaration()\r\n            api.configure({baseURL: 'https://example.com'})\r\n            const myAPI = api.declarePostAPI('/do-stuff/:param')\r\n              .params(['param'] as const)\r\n              .query(['qval'] as const)\r\n              .response<string>()\r\n\r\n            const URL = myAPI.getURL({param: 'value'})\r\n            // URL is now https://example.com/do-stuff/value\r\n          `}\r\n          </Example>{' '}\r\n          <Example label=\"Path and query (query present)\">\r\n            {`\r\n            import { APIDeclaration } from 'papupata'\r\n            const api = new APIDeclaration()\r\n            api.configure({baseURL: 'https://example.com'})\r\n            const myAPI = api.declarePostAPI('/do-stuff/:param')\r\n              .params(['param'] as const)\r\n              .query(['qval'] as const)\r\n              .response<string>()\r\n\r\n            const URL = myAPI.getURL({param: 'value', qval: 'hello'})\r\n            // URL is now https://example.com/do-stuff/value?qval=hello\r\n          `}\r\n          </Example>\r\n        </Examples>\r\n      </Page>\r\n    </IndexLayout>\r\n  )\r\n}\r\n"],"sourceRoot":""}