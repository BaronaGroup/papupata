{"version":3,"sources":["webpack:///./src/components/IncludeAvailableFromContext.tsx","webpack:///./src/pages/api/APIDeclaration.tsx","webpack:///./src/components/api-components.tsx","webpack:///./src/utils.ts","webpack:///./src/components/links.tsx","webpack:///./src/components/members-table.tsx"],"names":["IncludeAvailableFromContext","React","DeclareAPI","method","availableFrom","name","ucFirst","dataType","toUpperCase","APIDeclaration","to","defaultValue","context","includeAvailableFrom","Section","styled","section","SectionHeading","h4","SubHeading","h5","ExampleCommonContainer","Purpose","children","AvailableFrom","version","Usage","Parameters","label","Provider","value","Parameter","useContext","MethodReturnType","Caveats","Examples","Example","language","ExampleCommon","TypeParameters","Row","tr","NameColumn","td","DefaultValueColumn","DescriptionColumn","AvailableFromColumn","TypeParameter","s","substr","toLowerCase","IncompleteApiDeclarationLink","DeclaredAPILink","NameColumnBase","TypeColumn","DataTypeColumn","RequiredColumnStyles","RequiredColumn","includeRequiredColumn","MemberContext","Error","createContext","Members","MethodMember","required","displayName","PropertyMember","link","ExposedTypeMember"],"mappings":"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","file":"component---src-pages-api-api-declaration-tsx-e46a850798fbe5e4359e.js","sourcesContent":["import * as React from 'react'\n\nexport const IncludeAvailableFromContext = React.createContext(false)\n","import React from 'react'\r\nimport IndexLayout from '../../layouts'\r\nimport Page from '../../components/Page'\r\nimport Container from '../../components/Container'\r\nimport { Link } from 'gatsby'\r\nimport { Example, Purpose, TypeParameter, TypeParameters, Usage } from '../../components/api-components'\r\nimport { MethodMember, Members } from '../../components/members-table'\r\nimport { IncompleteApiDeclarationLink } from '../../components/links'\r\nimport { ucFirst } from '../../utils'\r\n\r\nconst DeclareAPI: React.FC<{ method: string, availableFrom?: '1.5.0' }> = ({ method, availableFrom }) => (\r\n  <MethodMember name={`declare${ucFirst(method)}API`} dataType={<IncompleteApiDeclarationLink />} availableFrom={availableFrom}>\r\n    Declares an API using the {method.toUpperCase()} HTTP method.\r\n  </MethodMember>\r\n)\r\n\r\nexport default function APIDeclaration() {\r\n  return (\r\n    <IndexLayout>\r\n      <Page>\r\n        <Container>\r\n          <h1>API Reference</h1>\r\n          <h2>class APIDeclaration</h2>\r\n        </Container>\r\n        <Example>{`import {APIDeclaration} from 'papupata'`}</Example>\r\n        <Purpose>Used for declaring, implementing and calling APIs</Purpose>\r\n        <Usage>\r\n          <p>\r\n            Once created, APIs can be declared using most of the methods. Before implemting or calling the APIs the object must be\r\n            configured using its <Link to=\"/api/APIDeclaration/configure\">configure method.</Link>\r\n          </p>\r\n          <p>\r\n            APIDeclaration has an expicit type parameter, which can be used to override the type of the request used in the API\r\n            implementations. It defaults to express request.\r\n          </p>\r\n        </Usage>\r\n        <TypeParameters>\r\n          <TypeParameter name=\"RequestType\" defaultValue=\"Request (express)\" availableFrom=\"Always\">\r\n            This type parameter is used to set up the type for the request object for implementing the routes with express. The default\r\n            value should be fine for simple cases, but if you have a custom request type you can use it instead.\r\n          </TypeParameter>\r\n          <TypeParameter name=\"RouteOptions\" defaultValue=\"void\" availableFrom=\"1.3.0\">\r\n            If you want to pass options to your route definitions, then this type defines the type for them.\r\n          </TypeParameter>\r\n          <TypeParameter name=\"RequestOptions\" defaultValue=\"void\" availableFrom=\"1.3.0\">\r\n            If you want to pass options when making requests, then this type defines the type for them.\r\n          </TypeParameter>\r\n        </TypeParameters>\r\n        <Members context=\"APIDeclaration\" includeAvailableFrom={true}>\r\n          <MethodMember name=\"configure\" dataType=\"void\">\r\n            Configures papupata to allow implementing and/or calling the declared APIs.\r\n          </MethodMember>\r\n          <DeclareAPI method=\"delete\" />\r\n          <DeclareAPI method=\"get\" />\r\n          <DeclareAPI method=\"patch\" availableFrom='1.5.0' />\r\n          <DeclareAPI method=\"post\" />\r\n          <DeclareAPI method=\"put\" />\r\n          <MethodMember name={'unmockAll'} dataType={'void'} availableFrom={'1.1.0'}>\r\n            Undoes all mocks on the APIs of this API declaration\r\n          </MethodMember>\r\n          <MethodMember name={'getDeclaredAPIs'} dataType={'DeclaredAPI[]'} availableFrom={'1.4.0'}>\r\n            Returns an array of all APIs declared on this API declaration.\r\n          </MethodMember>\r\n        </Members>\r\n      </Page>\r\n    </IndexLayout>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport React, { ReactNode } from 'react'\r\nimport { Code } from './Code'\r\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\r\n\r\nexport const Section = styled.section``\r\nexport const SectionHeading = styled.h4``\r\nexport const SubHeading = styled.h5``\r\nexport const ExampleCommonContainer = styled.section`\r\n  padding: 15px 30px;\r\n  background: lightyellow;\r\n`\r\n\r\nexport const Purpose: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Purpose</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport type ValidVersions = '1.1.0' | '1.2.0' | '1.5.0' | '1.8.0'\r\nexport const AvailableFrom = ({ version }: { version: ValidVersions }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Availability</SectionHeading>\r\n      This functionality is available from papupata version {version} onwards.\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Usage: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Usage</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\nexport const Parameters: React.FC<{ includeAvailableFrom?: boolean; label?: string }> = ({ children, includeAvailableFrom, label }) => {\r\n  return (\r\n    <Section>\r\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\r\n        <SectionHeading>Parameters{label && `: ${label}`}</SectionHeading>\r\n        {children ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n                {includeAvailableFrom && <th>Introduced in</th>}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{children}</tbody>\r\n          </table>\r\n        ) : (\r\n          <p>There are no parameters.</p>\r\n        )}\r\n      </IncludeAvailableFromContext.Provider>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Parameter: React.FC<{ name: string; dataType: any; availableFrom?: ValidVersions }> = ({\r\n  children,\r\n  name,\r\n  dataType,\r\n  availableFrom = '1.0.0'\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n  return (\r\n    <tr>\r\n      <td>{name}</td>\r\n      <td>{dataType}</td>\r\n      <td>{children}</td>\r\n      {includeAvailableFrom && <td>{availableFrom}</td>}\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const MethodReturnType: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Returns</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Caveats: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Caveats</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\nexport const Examples: React.FC<{ children: any }> = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Examples</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Example: React.FC<{ label?: string; children: string }> = ({ children, label }) => {\r\n  return (\r\n    <>\r\n      {label && <SubHeading>{label}</SubHeading>}\r\n      <Code language={'typescript'}>{children}</Code>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const ExampleCommon: React.FC<{ children: any }> = ({ children }) => {\r\n  return (\r\n    <ExampleCommonContainer>\r\n      <SubHeading>Common to examples below:</SubHeading>\r\n      {children}\r\n    </ExampleCommonContainer>\r\n  )\r\n}\r\n\r\nexport const TypeParameters: React.FC<{ children: ReactNode; includeAvailableFrom?: boolean }> = ({ children, includeAvailableFrom }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Type parameeters</SectionHeading>\r\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\r\n        <SectionHeading>Parameters</SectionHeading>\r\n        {children ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Default value</th>\r\n                <th>Description</th>\r\n                {includeAvailableFrom ? <th>Introduced in</th> : ''}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{children}</tbody>\r\n          </table>\r\n        ) : (\r\n          <p>There are no parameters.</p>\r\n        )}\r\n      </IncludeAvailableFromContext.Provider>\r\n    </Section>\r\n  )\r\n}\r\n\r\nconst Row = styled.tr``\r\nconst NameColumn = styled.td``\r\nconst DefaultValueColumn = styled.td``\r\nconst DescriptionColumn = styled.td``\r\nconst AvailableFromColumn = styled.td``\r\n\r\nexport const TypeParameter: React.FC<{ name: string; defaultValue?: string; availableFrom?: string }> = ({\r\n  children,\r\n  name,\r\n  defaultValue,\r\n  availableFrom = 'none'\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n  return (\r\n    <Row>\r\n      <NameColumn>{name}</NameColumn>\r\n      <DefaultValueColumn>{defaultValue}</DefaultValueColumn>\r\n      <DescriptionColumn>{children}</DescriptionColumn>\r\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\r\n    </Row>\r\n  )\r\n}\r\n","\r\nexport function ucFirst(s: string) {\r\n  return s[0].toUpperCase() + s.substr(1).toLowerCase()\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nexport function IncompleteApiDeclarationLink() {\r\n  return <Link to=\"/api/PartiallyDeclaredAPI\">PartiallyDeclaredAPI</Link>\r\n}\r\n\r\nexport function DeclaredAPILink() {\r\n  return <Link to=\"/api/DeclaredAPI\">DeclaredAPI</Link>\r\n}\r\n","import { Section, SectionHeading } from './api-components'\r\nimport React, { createContext, ReactNode, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\r\n\r\nconst Row = styled.tr``\r\nconst NameColumnBase = styled.td``\r\nconst TypeColumn = styled.td``\r\nconst DataTypeColumn = styled.td``\r\nconst DescriptionColumn = styled.td``\r\nconst RequiredColumnStyles = styled.td``\r\nconst AvailableFromColumn = styled.td``\r\n\r\nfunction RequiredColumn({ children }: { children: ReactNode }) {\r\n  const { includeRequiredColumn } = useContext(MemberContext)\r\n  if (!includeRequiredColumn && children) throw new Error('Being asked to show required cell, yet it does not exist')\r\n  return includeRequiredColumn ? <RequiredColumnStyles>{children}</RequiredColumnStyles> : null\r\n}\r\n\r\nconst MemberContext = createContext({ context: '', includeRequiredColumn: false })\r\n\r\nconst NameColumn: React.FC<{ name: string }> = ({ name, children }) => {\r\n  const { context } = useContext(MemberContext)\r\n  return (\r\n    <NameColumnBase>\r\n      <Link to={`/api/${context}/${name}`}>{children || name}</Link>\r\n    </NameColumnBase>\r\n  )\r\n}\r\n\r\nexport const Members: React.FC<{ context: string; includeRequiredColumn?: boolean; includeAvailableFrom?: boolean }> = ({\r\n  children,\r\n  context,\r\n  includeRequiredColumn,\r\n  includeAvailableFrom\r\n}) => {\r\n  return (\r\n    <Section>\r\n      <MemberContext.Provider value={{ context, includeRequiredColumn: !!includeRequiredColumn }}>\r\n        <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\r\n          <SectionHeading>Members</SectionHeading>\r\n          <table>\r\n            <thead>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Data type/return type</th>\r\n              <th>Description</th>\r\n              {includeRequiredColumn && <th>Required</th>}\r\n              {includeAvailableFrom && <th>Introduced in</th>}\r\n            </thead>\r\n            <tbody>{children}</tbody>\r\n          </table>\r\n        </IncludeAvailableFromContext.Provider>\r\n      </MemberContext.Provider>\r\n    </Section>\r\n  )\r\n}\r\nexport const MethodMember: React.FC<{ name: string; dataType: any; required?: any; displayName?: any; availableFrom?: string }> = ({\r\n  children,\r\n  name,\r\n  dataType,\r\n  required,\r\n  displayName,\r\n  availableFrom\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n  return (\r\n    <Row>\r\n      <NameColumn name={name}>{displayName}</NameColumn>\r\n      <TypeColumn>method</TypeColumn>\r\n      <DataTypeColumn>{dataType}</DataTypeColumn>\r\n      <DescriptionColumn>{children}</DescriptionColumn>\r\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\r\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport const PropertyMember: React.FC<{ name: string; dataType: any; required?: any; availableFrom?: string; link?: boolean }> = ({\r\n  children,\r\n  name,\r\n  dataType,\r\n  required,\r\n  availableFrom,\r\n  link\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n\r\n  return (\r\n    <Row>\r\n      {link ? <NameColumn name={name}>{name}</NameColumn> : <NameColumnBase>{name}</NameColumnBase>}\r\n      <TypeColumn>property</TypeColumn>\r\n      <DataTypeColumn>{dataType}</DataTypeColumn>\r\n      <DescriptionColumn>{children}</DescriptionColumn>\r\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\r\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport const ExposedTypeMember: React.FC<{ name: string }> = ({ children, name }) => {\r\n  return (\r\n    <Row>\r\n      <NameColumnBase>{name}</NameColumnBase>\r\n      <TypeColumn>property</TypeColumn>\r\n      <DataTypeColumn>n/a</DataTypeColumn>\r\n      <DescriptionColumn>{children}. Type type itself must be accessed using the typeof operator.</DescriptionColumn>\r\n    </Row>\r\n  )\r\n}\r\n"],"sourceRoot":""}