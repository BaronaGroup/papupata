{"version":3,"sources":["webpack:///./src/components/IncludeAvailableFromContext.tsx","webpack:///./src/pages/api/DeclaredAPI.tsx","webpack:///./src/components/api-components.tsx","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./src/components/members-table.tsx"],"names":["IncludeAvailableFromContext","React","DeclaredAPI","context","name","displayName","dataType","availableFrom","link","label","Section","styled","section","SectionHeading","h4","SubHeading","h5","ExampleCommonContainer","Purpose","children","AvailableFrom","version","Usage","Parameters","includeAvailableFrom","Provider","value","Parameter","useContext","MethodReturnType","Caveats","Examples","Example","language","ExampleCommon","TypeParameters","Row","tr","NameColumn","td","DefaultValueColumn","DescriptionColumn","AvailableFromColumn","TypeParameter","defaultValue","createHTML","url","this","NameColumnBase","TypeColumn","DataTypeColumn","RequiredColumnStyles","RequiredColumn","includeRequiredColumn","MemberContext","Error","createContext","to","Members","MethodMember","required","PropertyMember","ExposedTypeMember"],"mappings":"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","file":"component---src-pages-api-declared-api-tsx-ca70477ba0556cf1bc07.js","sourcesContent":["import * as React from 'react'\n\nexport const IncludeAvailableFromContext = React.createContext(false)\n","import React from 'react'\r\nimport IndexLayout from '../../layouts'\r\nimport Page from '../../components/Page'\r\nimport Container from '../../components/Container'\r\nimport { Purpose, Usage, Examples, Example } from '../../components/api-components'\r\nimport { MethodMember, Members, ExposedTypeMember, PropertyMember } from '../../components/members-table'\r\n\r\nexport default function DeclaredAPI() {\r\n  return (\r\n    <IndexLayout>\r\n      <Page>\r\n        <Container>\r\n          <h1>API Reference</h1>\r\n          <h2>interface DeclaredAPI</h2>\r\n        </Container>\r\n        <Purpose>Represents a declared API and allow interacting with it.</Purpose>\r\n        <Usage>\r\n          <p>\r\n            Technically there is nothing called \"DeclaredAPI\" in the code base. This is simply a representation of what is returned when an\r\n            API has been declared.\r\n          </p>\r\n          <p>\r\n            Some of the types used for the API are exposed in an unusual fashion. In the future we might look into adding some wrapper types\r\n            that allow for more conventional means for accessing them.\r\n          </p>\r\n        </Usage>\r\n        <Members context=\"DeclaredAPI\">\r\n          <MethodMember name=\"invoke\" displayName=\"()\" dataType={'Promise<ResponseType>'}>\r\n            DeclaredAPI itself is a function, which can be called to call the API itself. The response is returned wrapped in a promise.\r\n            Error handling is dependant on the adapter being used.\r\n          </MethodMember>\r\n          <MethodMember name=\"getURL\" dataType=\"string\">\r\n            Returns URL to the API.\r\n          </MethodMember>\r\n          <MethodMember name=\"implement\" dataType=\"void\">\r\n            Implement an API.\r\n          </MethodMember>\r\n          <MethodMember name=\"implementWithMiddleware\" dataType=\"void\">\r\n            Implement an API, providing additional middleware for it.\r\n          </MethodMember>\r\n\r\n          <PropertyMember name=\"implementation\" dataType=\"Function\" availableFrom=\"1.5.0\">\r\n            The current implementation for the API\r\n          </PropertyMember>\r\n\r\n          <PropertyMember name=\"implementationMiddleware\" dataType=\"object\" availableFrom=\"1.5.0\">\r\n            Middleware for the current implementation\r\n          </PropertyMember>\r\n\r\n          <PropertyMember name=\"method\" dataType=\"string\" availableFrom=\"1.5.0\">\r\n            The method of the api\r\n          </PropertyMember>\r\n\r\n          <PropertyMember name=\"apiDeclaration\" dataType=\"APIDeclaration\" availableFrom=\"1.5.0\">\r\n            The API declaration on which this API was declared.\r\n          </PropertyMember>\r\n\r\n          <PropertyMember name=\"implementation\" dataType=\"Function\" availableFrom=\"1.5.0\">\r\n            The current implementation for the API\r\n          </PropertyMember>\r\n\r\n          <PropertyMember name=\"apiUrlParameters\" dataType=\"object\" availableFrom=\"1.5.0\" link={true}>\r\n            Exposes the path and query parameters of the API.\r\n          </PropertyMember>\r\n          <PropertyMember name=\"path\" dataType={'string'} availableFrom={'1.5.0'}>\r\n            The path of the API, with path parameters left as placeholders. If you want a full URL, use the getURL method.\r\n          </PropertyMember>\r\n          <ExposedTypeMember name=\"ResponseType\">The type of the response.</ExposedTypeMember>\r\n          <ExposedTypeMember name=\"ServerResponseType\">The type of the response as the server returns it.</ExposedTypeMember>\r\n          <ExposedTypeMember name=\"CallArgsType\">The type of the parameter object passed to invoke the API.</ExposedTypeMember>\r\n          <ExposedTypeMember name=\"RequestType\">\r\n            The type of the modified express request passed to the impementing function.\r\n          </ExposedTypeMember>\r\n        </Members>\r\n        <Examples>\r\n          <Example label=\"Using the exposed types\">{`\r\n            import { APIDeclaration } from 'papupata'\r\n            const api = new APIDeclaration()\r\n            const myAPI = api.declarePostAPI('/do-stuff/:pathParam')\r\n              .response<string>()\r\n\r\n            type RespType = typeof myAPI['ResponseType']\r\n            // RespType is now string\r\n          `}</Example>\r\n        </Examples>\r\n      </Page>\r\n    </IndexLayout>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport React, { ReactNode } from 'react'\r\nimport { Code } from './Code'\r\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\r\n\r\nexport const Section = styled.section``\r\nexport const SectionHeading = styled.h4``\r\nexport const SubHeading = styled.h5``\r\nexport const ExampleCommonContainer = styled.section`\r\n  padding: 15px 30px;\r\n  background: lightyellow;\r\n`\r\n\r\nexport const Purpose: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Purpose</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport type ValidVersions = '1.1.0' | '1.2.0' | '1.5.0'\r\nexport const AvailableFrom = ({ version }: { version: ValidVersions }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Availability</SectionHeading>\r\n      This functionality is available from papupata version {version} onwards.\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Usage: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Usage</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\nexport const Parameters: React.FC<{ includeAvailableFrom?: boolean; label?: string }> = ({ children, includeAvailableFrom, label }) => {\r\n  return (\r\n    <Section>\r\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\r\n        <SectionHeading>Parameters{label && `: ${label}`}</SectionHeading>\r\n        {children ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n                {includeAvailableFrom && <th>Introduced in</th>}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{children}</tbody>\r\n          </table>\r\n        ) : (\r\n          <p>There are no parameters.</p>\r\n        )}\r\n      </IncludeAvailableFromContext.Provider>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Parameter: React.FC<{ name: string; dataType: any; availableFrom?: ValidVersions }> = ({\r\n  children,\r\n  name,\r\n  dataType,\r\n  availableFrom = '1.0.0'\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n  return (\r\n    <tr>\r\n      <td>{name}</td>\r\n      <td>{dataType}</td>\r\n      <td>{children}</td>\r\n      {includeAvailableFrom && <td>{availableFrom}</td>}\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const MethodReturnType: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Returns</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Caveats: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Caveats</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\nexport const Examples: React.FC<{ children: any }> = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Examples</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Example: React.FC<{ label?: string; children: string }> = ({ children, label }) => {\r\n  return (\r\n    <>\r\n      {label && <SubHeading>{label}</SubHeading>}\r\n      <Code language={'typescript'}>{children}</Code>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const ExampleCommon: React.FC<{ children: any }> = ({ children }) => {\r\n  return (\r\n    <ExampleCommonContainer>\r\n      <SubHeading>Common to examples below:</SubHeading>\r\n      {children}\r\n    </ExampleCommonContainer>\r\n  )\r\n}\r\n\r\nexport const TypeParameters: React.FC<{ children: ReactNode; includeAvailableFrom?: boolean }> = ({ children, includeAvailableFrom }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Type parameeters</SectionHeading>\r\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\r\n        <SectionHeading>Parameters</SectionHeading>\r\n        {children ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Default value</th>\r\n                <th>Description</th>\r\n                {includeAvailableFrom ? <th>Introduced in</th> : ''}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{children}</tbody>\r\n          </table>\r\n        ) : (\r\n          <p>There are no parameters.</p>\r\n        )}\r\n      </IncludeAvailableFromContext.Provider>\r\n    </Section>\r\n  )\r\n}\r\n\r\nconst Row = styled.tr``\r\nconst NameColumn = styled.td``\r\nconst DefaultValueColumn = styled.td``\r\nconst DescriptionColumn = styled.td``\r\nconst AvailableFromColumn = styled.td``\r\n\r\nexport const TypeParameter: React.FC<{ name: string; defaultValue?: string; availableFrom?: string }> = ({\r\n  children,\r\n  name,\r\n  defaultValue,\r\n  availableFrom = 'none'\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n  return (\r\n    <Row>\r\n      <NameColumn>{name}</NameColumn>\r\n      <DefaultValueColumn>{defaultValue}</DefaultValueColumn>\r\n      <DescriptionColumn>{children}</DescriptionColumn>\r\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\r\n    </Row>\r\n  )\r\n}\r\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","import { Section, SectionHeading } from './api-components'\r\nimport React, { createContext, ReactNode, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\r\n\r\nconst Row = styled.tr``\r\nconst NameColumnBase = styled.td``\r\nconst TypeColumn = styled.td``\r\nconst DataTypeColumn = styled.td``\r\nconst DescriptionColumn = styled.td``\r\nconst RequiredColumnStyles = styled.td``\r\nconst AvailableFromColumn = styled.td``\r\n\r\nfunction RequiredColumn({ children }: { children: ReactNode }) {\r\n  const { includeRequiredColumn } = useContext(MemberContext)\r\n  if (!includeRequiredColumn && children) throw new Error('Being asked to show required cell, yet it does not exist')\r\n  return includeRequiredColumn ? <RequiredColumnStyles>{children}</RequiredColumnStyles> : null\r\n}\r\n\r\nconst MemberContext = createContext({ context: '', includeRequiredColumn: false })\r\n\r\nconst NameColumn: React.FC<{ name: string }> = ({ name, children }) => {\r\n  const { context } = useContext(MemberContext)\r\n  return (\r\n    <NameColumnBase>\r\n      <Link to={`/api/${context}/${name}`}>{children || name}</Link>\r\n    </NameColumnBase>\r\n  )\r\n}\r\n\r\nexport const Members: React.FC<{ context: string; includeRequiredColumn?: boolean; includeAvailableFrom?: boolean }> = ({\r\n  children,\r\n  context,\r\n  includeRequiredColumn,\r\n  includeAvailableFrom\r\n}) => {\r\n  return (\r\n    <Section>\r\n      <MemberContext.Provider value={{ context, includeRequiredColumn: !!includeRequiredColumn }}>\r\n        <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\r\n          <SectionHeading>Members</SectionHeading>\r\n          <table>\r\n            <thead>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Data type/return type</th>\r\n              <th>Description</th>\r\n              {includeRequiredColumn && <th>Required</th>}\r\n              {includeAvailableFrom && <th>Introduced in</th>}\r\n            </thead>\r\n            <tbody>{children}</tbody>\r\n          </table>\r\n        </IncludeAvailableFromContext.Provider>\r\n      </MemberContext.Provider>\r\n    </Section>\r\n  )\r\n}\r\nexport const MethodMember: React.FC<{ name: string; dataType: any; required?: any; displayName?: any; availableFrom?: string }> = ({\r\n  children,\r\n  name,\r\n  dataType,\r\n  required,\r\n  displayName,\r\n  availableFrom\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n  return (\r\n    <Row>\r\n      <NameColumn name={name}>{displayName}</NameColumn>\r\n      <TypeColumn>method</TypeColumn>\r\n      <DataTypeColumn>{dataType}</DataTypeColumn>\r\n      <DescriptionColumn>{children}</DescriptionColumn>\r\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\r\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport const PropertyMember: React.FC<{ name: string; dataType: any; required?: any; availableFrom?: string; link?: boolean }> = ({\r\n  children,\r\n  name,\r\n  dataType,\r\n  required,\r\n  availableFrom,\r\n  link\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n\r\n  return (\r\n    <Row>\r\n      {link ? <NameColumn name={name}>{name}</NameColumn> : <NameColumnBase>{name}</NameColumnBase>}\r\n      <TypeColumn>property</TypeColumn>\r\n      <DataTypeColumn>{dataType}</DataTypeColumn>\r\n      <DescriptionColumn>{children}</DescriptionColumn>\r\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\r\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport const ExposedTypeMember: React.FC<{ name: string }> = ({ children, name }) => {\r\n  return (\r\n    <Row>\r\n      <NameColumnBase>{name}</NameColumnBase>\r\n      <TypeColumn>property</TypeColumn>\r\n      <DataTypeColumn>n/a</DataTypeColumn>\r\n      <DescriptionColumn>{children}. Type type itself must be accessed using the typeof operator.</DescriptionColumn>\r\n    </Row>\r\n  )\r\n}\r\n"],"sourceRoot":""}