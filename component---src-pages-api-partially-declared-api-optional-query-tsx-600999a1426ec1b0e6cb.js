(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{480:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return i}));var a=t(441),r=t(440),l=t(135),u=t(439),c=t(511),o=t(0);function i(){return Object(o.d)(a.a,null,Object(o.d)(r.a,null,Object(o.d)(l.a,null,Object(o.d)("h1",null,"API Reference"),Object(o.d)("h2",null,"class IncompleteAPIDeclaration"),Object(o.d)("h3",null,"method optionalQuery")),Object(o.d)(u.i,null,"Declares optional string query parameters for an API"),Object(o.d)(u.n,null,Object(o.d)("p",null,"Only path params and required string query parameters may be defined before query.")),Object(o.d)(u.h,null,Object(o.d)(u.g,{name:"optionalQueryParams",dataType:"Const string array"},Object(o.d)("p",null,"Names of the query parameters. See the example below for the recommended way to set up the const string array."),Object(o.d)("p",null,"At typescript level a regular string array is not treated as an error at declaration time, but using is NOT correct. Unfortunately we have not come up with a way to prevent this kind of usage."))),Object(o.d)(u.f,null,Object(o.d)(c.b,null)),Object(o.d)(u.e,null,Object(o.d)(u.c,{label:"Declaration"},"\n            import { APIDeclaration } from 'papupata'\n            const api = new APIDeclaration()\n            const myAPI = api.declarePostAPI('/do-stuff')\n              .optionalQuery(['query1', 'query2'] as const)\n              .response<string>()\n          "),Object(o.d)(u.c,{label:"Usage in invocation"},"\n            await myAPI({query1: 'abc'})\n            // Invokes URL /do-stuff?query1=abd\n          "),Object(o.d)(u.c,{label:"Usage in implementation"},"\n            myAPI.implement(req => {\n              const {query1, query2} = req.query\n              return query1 + query2 // would return abcundefined in the example\n            })            \n          "))))}},511:function(e,n,t){"use strict";t.d(n,"b",(function(){return l})),t.d(n,"a",(function(){return u}));t(1);var a=t(47),r=t(0);function l(){return Object(r.d)(a.a,{to:"/api/PartiallyDeclaredAPI"},"PartiallyDeclaredAPI")}function u(){return Object(r.d)(a.a,{to:"/api/DeclaredAPI"},"DeclaredAPI")}}}]);
//# sourceMappingURL=component---src-pages-api-partially-declared-api-optional-query-tsx-600999a1426ec1b0e6cb.js.map