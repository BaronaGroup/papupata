{"version":3,"sources":["webpack:///./src/components/IncludeAvailableFromContext.tsx","webpack:///./src/components/api-components.tsx","webpack:///./node_modules/core-js/modules/es6.string.anchor.js","webpack:///./src/components/guides.tsx","webpack:///./src/pages/concepts.tsx"],"names":["IncludeAvailableFromContext","React","Section","styled","section","SectionHeading","h4","SubHeading","h5","ExampleCommonContainer","Purpose","children","AvailableFrom","version","Usage","Parameters","includeAvailableFrom","label","Provider","value","Parameter","name","dataType","availableFrom","useContext","MethodReturnType","Caveats","Examples","Example","language","ExampleCommon","TypeParameters","Row","tr","NameColumn","td","DefaultValueColumn","DescriptionColumn","AvailableFromColumn","TypeParameter","defaultValue","createHTML","this","Overview","Level0","Level1","GuideContent","content","map","child","style","marginLeft","level","key","anchor","href","heading","Heading","id","FixedFont","span","Concept","ConceptsPage"],"mappings":"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","file":"component---src-pages-concepts-tsx-340c19bf05fc3f35ff01.js","sourcesContent":["import * as React from 'react'\n\nexport const IncludeAvailableFromContext = React.createContext(false)\n","import styled from 'styled-components'\r\nimport React, { ReactNode } from 'react'\r\nimport { Code } from './Code'\r\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\r\n\r\nexport const Section = styled.section``\r\nexport const SectionHeading = styled.h4``\r\nexport const SubHeading = styled.h5``\r\nexport const ExampleCommonContainer = styled.section`\r\n  padding: 15px 30px;\r\n  background: lightyellow;\r\n`\r\n\r\nexport const Purpose: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Purpose</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport type ValidVersions = '1.1.0' | '1.2.0' | '1.5.0'\r\nexport const AvailableFrom = ({ version }: { version: ValidVersions }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Availability</SectionHeading>\r\n      This functionality is available from papupata version {version} onwards.\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Usage: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Usage</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\nexport const Parameters: React.FC<{ includeAvailableFrom?: boolean; label?: string }> = ({ children, includeAvailableFrom, label }) => {\r\n  return (\r\n    <Section>\r\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\r\n        <SectionHeading>Parameters{label && `: ${label}`}</SectionHeading>\r\n        {children ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n                {includeAvailableFrom && <th>Introduced in</th>}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{children}</tbody>\r\n          </table>\r\n        ) : (\r\n          <p>There are no parameters.</p>\r\n        )}\r\n      </IncludeAvailableFromContext.Provider>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Parameter: React.FC<{ name: string; dataType: any; availableFrom?: ValidVersions }> = ({\r\n  children,\r\n  name,\r\n  dataType,\r\n  availableFrom = '1.0.0'\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n  return (\r\n    <tr>\r\n      <td>{name}</td>\r\n      <td>{dataType}</td>\r\n      <td>{children}</td>\r\n      {includeAvailableFrom && <td>{availableFrom}</td>}\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const MethodReturnType: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Returns</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Caveats: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Caveats</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\nexport const Examples: React.FC<{ children: any }> = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Examples</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Example: React.FC<{ label?: string; children: string }> = ({ children, label }) => {\r\n  return (\r\n    <>\r\n      {label && <SubHeading>{label}</SubHeading>}\r\n      <Code language={'typescript'}>{children}</Code>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const ExampleCommon: React.FC<{ children: any }> = ({ children }) => {\r\n  return (\r\n    <ExampleCommonContainer>\r\n      <SubHeading>Common to examples below:</SubHeading>\r\n      {children}\r\n    </ExampleCommonContainer>\r\n  )\r\n}\r\n\r\nexport const TypeParameters: React.FC<{ children: ReactNode; includeAvailableFrom?: boolean }> = ({ children, includeAvailableFrom }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Type parameeters</SectionHeading>\r\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\r\n        <SectionHeading>Parameters</SectionHeading>\r\n        {children ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Default value</th>\r\n                <th>Description</th>\r\n                {includeAvailableFrom ? <th>Introduced in</th> : ''}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{children}</tbody>\r\n          </table>\r\n        ) : (\r\n          <p>There are no parameters.</p>\r\n        )}\r\n      </IncludeAvailableFromContext.Provider>\r\n    </Section>\r\n  )\r\n}\r\n\r\nconst Row = styled.tr``\r\nconst NameColumn = styled.td``\r\nconst DefaultValueColumn = styled.td``\r\nconst DescriptionColumn = styled.td``\r\nconst AvailableFromColumn = styled.td``\r\n\r\nexport const TypeParameter: React.FC<{ name: string; defaultValue?: string; availableFrom?: string }> = ({\r\n  children,\r\n  name,\r\n  defaultValue,\r\n  availableFrom = 'none'\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n  return (\r\n    <Row>\r\n      <NameColumn>{name}</NameColumn>\r\n      <DefaultValueColumn>{defaultValue}</DefaultValueColumn>\r\n      <DescriptionColumn>{children}</DescriptionColumn>\r\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\r\n    </Row>\r\n  )\r\n}\r\n","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n","import React, { ReactNode } from 'react'\nimport { Section, SectionHeading } from './api-components'\nimport styled from 'styled-components'\n\nexport function Overview({ children }: { children: ReactNode }) {\n  return (\n    <Section>\n      <SectionHeading>Overview</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\ninterface GuidePart {\n  heading: ReactNode\n  anchor: string\n  content: ReactNode\n  level?: number\n}\n\nconst Level0 = styled.h4``\nconst Level1= styled.h5`\n  font-size: 1.1em;\n`\n\nexport function GuideContent({ content }: { content: GuidePart[] }) {\n  return (\n    <div>\n      <Section>\n        <SectionHeading>Table of contents</SectionHeading>\n        <ul>\n          {content.map(child => (\n            <li style={{ marginLeft: 18 * (child.level || 0) }} key={child.anchor}>\n              <a href={`#${child.anchor}`}>{child.heading}</a>\n            </li>\n          ))}\n        </ul>\n      </Section>\n      {content.map(child => {\n        const Heading = !child.level ? Level0 : Level1\n        return (\n          <Section id={child.anchor} key={child.anchor}>\n            <Heading>{child.heading}</Heading>\n            {child.content}\n          </Section>\n        )\n      })}\n    </div>\n  )\n}\n\nexport const FixedFont = styled.span`\n  font-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace\n`\n","import * as React from 'react'\r\nimport { Example, Section, SectionHeading } from '../components/api-components'\r\nimport Container from '../components/Container'\r\nimport { FixedFont } from '../components/guides'\r\nimport Page from '../components/Page'\r\nimport IndexLayout from '../layouts'\r\n\r\nconst Concept: React.FC<{ children: React.ReactNode; label: React.ReactNode }> = ({ children, label }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>{label}</SectionHeading>\r\n      <div>{children}</div>\r\n    </Section>\r\n  )\r\n}\r\n\r\nconst ConceptsPage = () => (\r\n  <IndexLayout>\r\n    <Page>\r\n      <Container>\r\n        <h1>Concepts and terms</h1>\r\n        <p>This document covers terminology used throughout the rest of the documentation.</p>\r\n        <Concept label=\"API\">An HTTP endpoint.</Concept>\r\n        <Concept label=\"API Declaration\">\r\n          <p>An API declaration describes an HTTP endpoint, along with its payload and expected response.</p>\r\n          <p>\r\n            The <FixedFont>APIDeclaration</FixedFont> class in papupata allows for declaring APIs on the same host so that they share\r\n            configuration.\r\n          </p>\r\n        </Concept>\r\n        <Concept label=\"Middleware\">\r\n          One or more layers of code between and HTTP server and the business logic. Typically used for things like authentication,\r\n          authorization, logging and error handling.\r\n        </Concept>\r\n        <Concept label=\"Calling/invoking APIs\">The act of making an HTTP request, sending a payload and receiving response.</Concept>\r\n        <Concept label=\"Implementing APIs\">\r\n          The act of providing business logic connected to an HTTP server to process the inputs of an API to produce any necessary side\r\n          effects and a response.\r\n        </Concept>\r\n        <Concept label=\"Client\">\r\n          Any party that uses papupata to make HTTP requests. It is not necessarily a browser -- it is not uncommon for node processes to\r\n          make requests to external systems, in which case they are clients as well.\r\n        </Concept>\r\n        <Concept label=\"Server\">A HTTP (or HTTPs) server that forwards requests for papupata to handle.</Concept>\r\n        <Concept label=\"Request\">A call to an API. Initialized from the client and processed on the server.</Concept>\r\n\r\n        <Concept label=\"Mocking\">\r\n          Substituting production code and logic with another, typically simpler one for the purpose of testing.\r\n        </Concept>\r\n        <Concept label=\"express\">\r\n          A node.js library for implementing http server. See <a href=\"https://expressjs.com/\">https://expressjs.com/</a>. At this time\r\n          papupata natively supports only express as the http server for implementing APIs.\r\n        </Concept>\r\n        <Concept label=\"body, query parameter\">\r\n          Parts of an HTTP request. They along with path parameters are the payload for a request.\r\n        </Concept>\r\n        <Concept label=\"path parameter\">\r\n          <p>A parametrized part of the path in URLs. For example, in</p>\r\n          <Example>{`\r\n            API.declareGetAPI('/get/document/:id')/*...*/\r\n          `}</Example>\r\n          <p>\r\n            the <FixedFont>:id</FixedFont> signifies a path parameter, and is replaced with the value for the parameter when invoking the\r\n            API.\r\n          </p>\r\n        </Concept>\r\n      </Container>\r\n    </Page>\r\n  </IndexLayout>\r\n)\r\n\r\nexport default ConceptsPage\r\n"],"sourceRoot":""}