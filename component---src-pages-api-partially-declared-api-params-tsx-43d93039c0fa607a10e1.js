(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{476:function(e,a,t){"use strict";t.r(a),t.d(a,"default",(function(){return d}));var n=t(436),r=t(435),l=t(130),c=t(434),o=t(506),p=t(0);function d(){return Object(p.d)(n.a,null,Object(p.d)(r.a,null,Object(p.d)(l.a,null,Object(p.d)("h1",null,"API Reference"),Object(p.d)("h2",null,"class IncompleteAPIDeclaration"),Object(p.d)("h3",null,"method params")),Object(p.d)(c.i,null,"Declares url/path parameters for an API"),Object(p.d)(c.n,null,Object(p.d)("p",null,"If used, params must be declared before anything else."),Object(p.d)("p",null,"The corresponding parameters have to defined in the API path, with express you'd use :varName syntax for it. Optional path parameters are not supported at this time.")),Object(p.d)(c.h,null,Object(p.d)(c.g,{name:"params",dataType:"Const string array"},Object(p.d)("p",null,"Names of the path parameters. See the example below for the recommended way to set up the const string array."),Object(p.d)("p",null,"At typescript level a regular string array is not treated as an error at declaration time, but using is NOT correct. Unfortunately we have not come up with a way to prevent this kind of usage."))),Object(p.d)(c.f,null,Object(p.d)(o.b,null)),Object(p.d)(c.e,null,Object(p.d)(c.c,{label:"Declaration"},"\n            import { APIDeclaration } from 'papupata'\n            const api = new APIDeclaration()\n            const myAPI = api.declarePostAPI('/do-stuff/:param1/:param2')\n              .params(['param1', 'param2'] as const)             \n          "),Object(p.d)(c.c,{label:"Usage in invocation"},"\n            await myAPI({param1: 'abc', param2: 'def'})\n            // Invokes URL /do-stuff/abc/def\n          "),Object(p.d)(c.c,{label:"Usage in implementation"},"\n            myAPI.implement(req => {\n              const {param1, param1} = req.params\n              return param1 + param1 // would return abcdef in the example\n            })            \n          "))))}},506:function(e,a,t){"use strict";t.d(a,"b",(function(){return l})),t.d(a,"a",(function(){return c}));t(1);var n=t(48),r=t(0);function l(){return Object(r.d)(n.a,{to:"/api/PartiallyDeclaredAPI"},"PartiallyDeclaredAPI")}function c(){return Object(r.d)(n.a,{to:"/api/DeclaredAPI"},"DeclaredAPI")}}}]);
//# sourceMappingURL=component---src-pages-api-partially-declared-api-params-tsx-43d93039c0fa607a10e1.js.map