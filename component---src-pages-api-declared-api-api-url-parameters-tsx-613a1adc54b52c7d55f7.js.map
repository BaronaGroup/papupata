{"version":3,"sources":["webpack:///./src/components/IncludeAvailableFromContext.tsx","webpack:///./src/pages/api/DeclaredAPI/apiUrlParameters.tsx","webpack:///./src/components/api-components.tsx","webpack:///./src/components/members-table.tsx"],"names":["IncludeAvailableFromContext","React","ApiUrlParameters","version","context","includeRequiredColumn","dataType","name","required","Section","styled","section","SectionHeading","h4","SubHeading","h5","ExampleCommonContainer","Purpose","children","AvailableFrom","Usage","Parameters","includeAvailableFrom","label","Provider","value","Parameter","availableFrom","useContext","MethodReturnType","Caveats","Examples","Example","language","ExampleCommon","TypeParameters","Row","tr","NameColumn","td","DefaultValueColumn","DescriptionColumn","AvailableFromColumn","TypeParameter","defaultValue","NameColumnBase","TypeColumn","DataTypeColumn","RequiredColumnStyles","RequiredColumn","MemberContext","Error","createContext","to","Members","MethodMember","displayName","PropertyMember","link","ExposedTypeMember"],"mappings":"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","file":"component---src-pages-api-declared-api-api-url-parameters-tsx-613a1adc54b52c7d55f7.js","sourcesContent":["import * as React from 'react'\n\nexport const IncludeAvailableFromContext = React.createContext(false)\n","import { AvailableFrom, Purpose } from '../../../components/api-components'\nimport Container from '../../../components/Container'\nimport { Members, PropertyMember } from '../../../components/members-table'\nimport Page from '../../../components/Page'\nimport IndexLayout from '../../../layouts'\n\nexport default function ApiUrlParameters() {\n  return (\n    <IndexLayout>\n      <Page>\n        <Container>\n          <h1>API Reference</h1>\n          <h2>class DeclaredAPI</h2>\n          <h3>property apiUrlParameters</h3>\n        </Container>\n        <AvailableFrom version=\"1.5.0\" />\n        <Purpose>Exposes the path and query parameters of the api</Purpose>\n        <Members context=\"DeclaredAPI/apiUrlParameters\" includeRequiredColumn={true}>\n          <PropertyMember dataType={'string[]'} name=\"params\" required=\"false\">\n            Path parameters of the API\n          </PropertyMember>\n          <PropertyMember dataType={'string[]'} name=\"query\" required=\"false\">\n            Regular query parameters of the API\n          </PropertyMember>\n          <PropertyMember dataType={'string[]'} name=\"optionalQuery\" required=\"false\">\n            Optional query parameters of the API\n          </PropertyMember>\n          <PropertyMember dataType={'string[]'} name=\"boolQuery\" required=\"false\">\n            Boolean query parameters of the API\n          </PropertyMember>\n        </Members>\n      </Page>\n    </IndexLayout>\n  )\n}\n","import styled from 'styled-components'\nimport React, { ReactNode } from 'react'\nimport { Code } from './Code'\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\n\nexport const Section = styled.section``\nexport const SectionHeading = styled.h4``\nexport const SubHeading = styled.h5``\nexport const ExampleCommonContainer = styled.section`\n  padding: 15px 30px;\n  background: lightyellow;\n`\n\nexport const Purpose: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Purpose</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\nexport type ValidVersions = '1.1.0' | '1.2.0' | '1.5.0' | '1.8.0'\nexport const AvailableFrom = ({ version }: { version: ValidVersions }) => {\n  return (\n    <Section>\n      <SectionHeading>Availability</SectionHeading>\n      This functionality is available from papupata version {version} onwards.\n    </Section>\n  )\n}\n\nexport const Usage: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Usage</SectionHeading>\n      {children}\n    </Section>\n  )\n}\nexport const Parameters: React.FC<{ includeAvailableFrom?: boolean; label?: string }> = ({ children, includeAvailableFrom, label }) => {\n  return (\n    <Section>\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n        <SectionHeading>Parameters{label && `: ${label}`}</SectionHeading>\n        {children ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Description</th>\n                {includeAvailableFrom && <th>Introduced in</th>}\n              </tr>\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        ) : (\n          <p>There are no parameters.</p>\n        )}\n      </IncludeAvailableFromContext.Provider>\n    </Section>\n  )\n}\n\nexport const Parameter: React.FC<{ name: string; dataType: any; availableFrom?: ValidVersions }> = ({\n  children,\n  name,\n  dataType,\n  availableFrom = '1.0.0'\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{dataType}</td>\n      <td>{children}</td>\n      {includeAvailableFrom && <td>{availableFrom}</td>}\n    </tr>\n  )\n}\n\nexport const MethodReturnType: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Returns</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\nexport const Caveats: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Caveats</SectionHeading>\n      {children}\n    </Section>\n  )\n}\nexport const Examples: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Examples</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\nexport const Example: React.FC<{ label?: string; children: string }> = ({ children, label }) => {\n  return (\n    <>\n      {label && <SubHeading>{label}</SubHeading>}\n      <Code language={'typescript'}>{children}</Code>\n    </>\n  )\n}\n\nexport const ExampleCommon: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <ExampleCommonContainer>\n      <SubHeading>Common to examples below:</SubHeading>\n      {children}\n    </ExampleCommonContainer>\n  )\n}\n\nexport const TypeParameters: React.FC<{ children: ReactNode; includeAvailableFrom?: boolean }> = ({ children, includeAvailableFrom }) => {\n  return (\n    <Section>\n      <SectionHeading>Type parameeters</SectionHeading>\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n        <SectionHeading>Parameters</SectionHeading>\n        {children ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Default value</th>\n                <th>Description</th>\n                {includeAvailableFrom ? <th>Introduced in</th> : ''}\n              </tr>\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        ) : (\n          <p>There are no parameters.</p>\n        )}\n      </IncludeAvailableFromContext.Provider>\n    </Section>\n  )\n}\n\nconst Row = styled.tr``\nconst NameColumn = styled.td``\nconst DefaultValueColumn = styled.td``\nconst DescriptionColumn = styled.td``\nconst AvailableFromColumn = styled.td``\n\nexport const TypeParameter: React.FC<{ name: string; defaultValue?: string; availableFrom?: string }> = ({\n  children,\n  name,\n  defaultValue,\n  availableFrom = 'none'\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <Row>\n      <NameColumn>{name}</NameColumn>\n      <DefaultValueColumn>{defaultValue}</DefaultValueColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n","import { Section, SectionHeading } from './api-components'\nimport React, { createContext, ReactNode, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\n\nconst Row = styled.tr``\nconst NameColumnBase = styled.td``\nconst TypeColumn = styled.td``\nconst DataTypeColumn = styled.td``\nconst DescriptionColumn = styled.td``\nconst RequiredColumnStyles = styled.td``\nconst AvailableFromColumn = styled.td``\n\nfunction RequiredColumn({ children }: { children: ReactNode }) {\n  const { includeRequiredColumn } = useContext(MemberContext)\n  if (!includeRequiredColumn && children) throw new Error('Being asked to show required cell, yet it does not exist')\n  return includeRequiredColumn ? <RequiredColumnStyles>{children}</RequiredColumnStyles> : null\n}\n\nconst MemberContext = createContext({ context: '', includeRequiredColumn: false })\n\nconst NameColumn: React.FC<{ name: string }> = ({ name, children }) => {\n  const { context } = useContext(MemberContext)\n  return (\n    <NameColumnBase>\n      <Link to={`/api/${context}/${name}`}>{children || name}</Link>\n    </NameColumnBase>\n  )\n}\n\nexport const Members: React.FC<{ context: string; includeRequiredColumn?: boolean; includeAvailableFrom?: boolean }> = ({\n  children,\n  context,\n  includeRequiredColumn,\n  includeAvailableFrom\n}) => {\n  return (\n    <Section>\n      <MemberContext.Provider value={{ context, includeRequiredColumn: !!includeRequiredColumn }}>\n        <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n          <SectionHeading>Members</SectionHeading>\n          <table>\n            <thead>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Data type/return type</th>\n              <th>Description</th>\n              {includeRequiredColumn && <th>Required</th>}\n              {includeAvailableFrom && <th>Introduced in</th>}\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        </IncludeAvailableFromContext.Provider>\n      </MemberContext.Provider>\n    </Section>\n  )\n}\nexport const MethodMember: React.FC<{ name: string; dataType: any; required?: any; displayName?: any; availableFrom?: string }> = ({\n  children,\n  name,\n  dataType,\n  required,\n  displayName,\n  availableFrom\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <Row>\n      <NameColumn name={name}>{displayName}</NameColumn>\n      <TypeColumn>method</TypeColumn>\n      <DataTypeColumn>{dataType}</DataTypeColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n\nexport const PropertyMember: React.FC<{ name: string; dataType: any; required?: any; availableFrom?: string; link?: boolean }> = ({\n  children,\n  name,\n  dataType,\n  required,\n  availableFrom,\n  link\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n\n  return (\n    <Row>\n      {link ? <NameColumn name={name}>{name}</NameColumn> : <NameColumnBase>{name}</NameColumnBase>}\n      <TypeColumn>property</TypeColumn>\n      <DataTypeColumn>{dataType}</DataTypeColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n\nexport const ExposedTypeMember: React.FC<{ name: string }> = ({ children, name }) => {\n  return (\n    <Row>\n      <NameColumnBase>{name}</NameColumnBase>\n      <TypeColumn>property</TypeColumn>\n      <DataTypeColumn>n/a</DataTypeColumn>\n      <DescriptionColumn>{children}. Type type itself must be accessed using the typeof operator.</DescriptionColumn>\n    </Row>\n  )\n}\n"],"sourceRoot":""}