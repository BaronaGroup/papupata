(self.webpackChunkpapupata_docs=self.webpackChunkpapupata_docs||[]).push([[642],{1040:function(n,t,e){"use strict";e.d(t,{P:function(){return r}});var r=e(7294).createContext(!1)},1724:function(n,t,e){"use strict";e.d(t,{$0:function(){return v},OT:function(){return P},ag:function(){return q},cY:function(){return I},l1:function(){return T},aE:function(){return A},d2:function(){return w},pR:function(){return D},by:function(){return C},yV:function(){return k},en:function(){return x},iT:function(){return U},Vo:function(){return F},lS:function(){return $}});var r,l,u,a,o,i,c,Z,s,d=e(6848),f=e(366),p=e(7294),h=e(1808),m=e(1040),y=e(3431),v=f.ZP.section(r||(r=(0,d.Z)([""]))),P=f.ZP.h4(l||(l=(0,d.Z)([""]))),b=f.ZP.h5(u||(u=(0,d.Z)([""]))),g=f.ZP.section(a||(a=(0,d.Z)(["\n  padding: 15px 30px;\n  background: lightyellow;\n"]))),q=function(n){var t=n.children;return(0,y.tZ)(v,null,(0,y.tZ)(P,null,"Purpose"),t)},I=function(n){var t=n.version;return(0,y.tZ)(v,null,(0,y.tZ)(P,null,"Availability"),"This functionality is available from papupata version ",t," onwards.")},T=function(n){var t=n.children;return(0,y.tZ)(v,null,(0,y.tZ)(P,null,"Usage"),t)},A=function(n){var t=n.children,e=n.includeAvailableFrom,r=n.label;return(0,y.tZ)(v,null,(0,y.tZ)(m.P.Provider,{value:!!e},(0,y.tZ)(P,null,"Parameters",r&&": "+r),t?(0,y.tZ)("table",null,(0,y.tZ)("thead",null,(0,y.tZ)("tr",null,(0,y.tZ)("th",null,"Name"),(0,y.tZ)("th",null,"Type"),(0,y.tZ)("th",null,"Description"),e&&(0,y.tZ)("th",null,"Introduced in"))),(0,y.tZ)("tbody",null,t)):(0,y.tZ)("p",null,"There are no parameters.")))},w=function(n){var t=n.children,e=n.name,r=n.dataType,l=n.availableFrom,u=void 0===l?"1.0.0":l,a=p.useContext(m.P);return(0,y.tZ)("tr",null,(0,y.tZ)("td",null,e),(0,y.tZ)("td",null,r),(0,y.tZ)("td",null,t),a&&(0,y.tZ)("td",null,u))},D=function(n){var t=n.children;return(0,y.tZ)(v,null,(0,y.tZ)(P,null,"Returns"),t)},C=function(n){var t=n.children;return(0,y.tZ)(v,null,(0,y.tZ)(P,null,"Caveats"),t)},k=function(n){var t=n.children;return(0,y.tZ)(v,null,(0,y.tZ)(P,null,"Examples"),t)},x=function(n){var t=n.children,e=n.label;return(0,y.tZ)(p.Fragment,null,e&&(0,y.tZ)(b,null,e),(0,y.tZ)(h.E,{language:"typescript"},t))},U=function(n){var t=n.children;return(0,y.tZ)(g,null,(0,y.tZ)(b,null,"Common to examples below:"),t)},F=function(n){var t=n.children,e=n.includeAvailableFrom;return(0,y.tZ)(v,null,(0,y.tZ)(P,null,"Type parameeters"),(0,y.tZ)(m.P.Provider,{value:!!e},(0,y.tZ)(P,null,"Parameters"),t?(0,y.tZ)("table",null,(0,y.tZ)("thead",null,(0,y.tZ)("tr",null,(0,y.tZ)("th",null,"Name"),(0,y.tZ)("th",null,"Default value"),(0,y.tZ)("th",null,"Description"),e?(0,y.tZ)("th",null,"Introduced in"):"")),(0,y.tZ)("tbody",null,t)):(0,y.tZ)("p",null,"There are no parameters.")))},N=f.ZP.tr(o||(o=(0,d.Z)([""]))),O=f.ZP.td(i||(i=(0,d.Z)([""]))),R=f.ZP.td(c||(c=(0,d.Z)([""]))),V=f.ZP.td(Z||(Z=(0,d.Z)([""]))),E=f.ZP.td(s||(s=(0,d.Z)([""]))),$=function(n){var t=n.children,e=n.name,r=n.defaultValue,l=n.availableFrom,u=void 0===l?"none":l,a=p.useContext(m.P);return(0,y.tZ)(N,null,(0,y.tZ)(O,null,e),(0,y.tZ)(R,null,r),(0,y.tZ)(V,null,t),a?(0,y.tZ)(E,null,u):"")}},5361:function(n,t,e){"use strict";e.d(t,{g2:function(){return Z},eC:function(){return f},If:function(){return p}});var r,l,u,a=e(6848),o=(e(7294),e(1724)),i=e(366),c=e(3431);function Z(n){var t=n.children;return(0,c.tZ)(o.$0,null,(0,c.tZ)(o.OT,null,"Overview"),t)}var s=i.ZP.h4(r||(r=(0,a.Z)([""]))),d=i.ZP.h5(l||(l=(0,a.Z)(["\n  font-size: 1.1em;\n"])));function f(n){var t=n.content;return(0,c.tZ)("div",null,(0,c.tZ)(o.$0,null,(0,c.tZ)(o.OT,null,"Table of contents"),(0,c.tZ)("ul",null,t.map((function(n){return(0,c.tZ)("li",{style:{marginLeft:18*(n.level||0)},key:n.anchor},(0,c.tZ)("a",{href:"#"+n.anchor},n.heading))})))),t.map((function(n){var t=n.level?d:s;return(0,c.tZ)(o.$0,{id:n.anchor,key:n.anchor},(0,c.tZ)(t,null,n.heading),n.content)})))}var p=i.ZP.span(u||(u=(0,a.Z)(["\n  font-family: 'Consolas', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\n"])))},1683:function(n,t,e){"use strict";e.d(t,{K:function(){return u},e:function(){return a}});e(7294);var r=e(5444),l=e(3431);function u(){return(0,l.tZ)(r.rU,{to:"/api/PartiallyDeclaredAPI"},"PartiallyDeclaredAPI")}function a(){return(0,l.tZ)(r.rU,{to:"/api/DeclaredAPI"},"DeclaredAPI")}},3286:function(n,t,e){"use strict";e.r(t),e.d(t,{default:function(){return Z}});e(1879);var r=e(1724),l=e(832),u=e(5361),a=e(1683),o=e(7614),i=e(387),c=e(3431);function Z(){return(0,c.tZ)(i.Z,null,(0,c.tZ)(o.Z,null,(0,c.tZ)(l.Z,null,(0,c.tZ)("h1",null,"API Reference"),(0,c.tZ)("h2",null,"class IncompleteAPIDeclaration"),(0,c.tZ)("h3",null,"method queryBool")),(0,c.tZ)("h5",null,"Deprecated"),(0,c.tZ)("p",null,"This method has been deprecated as of 2.0.0. The suggested alternative is to just use ",(0,c.tZ)(u.If,null,"query")," and declare the type of a parameter to be a boolean."),(0,c.tZ)(r.ag,null,"Declares boolean query parameters for an API"),(0,c.tZ)(r.l1,null,(0,c.tZ)("p",null,"Path params and other query parameters may be defined before query.")),(0,c.tZ)(r.aE,null,(0,c.tZ)(r.d2,{name:"booleanQueryParams",dataType:"Const string array"},(0,c.tZ)("p",null,"Names of the query parameters. See the example below for the recommended way to set up the const string array."),(0,c.tZ)("p",null,"At typescript level a regular string array is not treated as an error at declaration time, but using is NOT correct. Unfortunately we have not come up with a way to prevent this kind of usage."))),(0,c.tZ)(r.pR,null,(0,c.tZ)(a.K,null)),(0,c.tZ)(r.by,null,'This feature is intented mainly to be used for papupata-to-papupata communications. The string "true" stands for true values on the server, all other values stand for false.'),(0,c.tZ)(r.yV,null,(0,c.tZ)(r.en,{label:"Declaration"},"\n            import { APIDeclaration } from 'papupata'\n            const api = new APIDeclaration()\n            const myAPI = api.declarePostAPI('/do-stuff')\n              .queryBool(['query1', 'query2'] as const)\n              .response<string>()\n          "),(0,c.tZ)(r.en,{label:"Usage in invocation"},"\n            await myAPI({query1: true, query2: false})\n            // Invokes URL /do-stuff?query1=true&query2=false\n          "),(0,c.tZ)(r.en,{label:"Usage in implementation"},"\n            myAPI.implement(req => {\n              const {query1, query2} = req.query\n              return query1 + query2 // would return truefalse in the example. They come in as booleans, not strings.\n            })\n          "))))}}}]);
//# sourceMappingURL=component---src-pages-api-partially-declared-api-query-bool-tsx-61f8b46da371a83b23a5.js.map