{"version":3,"sources":["webpack:///./src/components/IncludeAvailableFromContext.tsx","webpack:///./src/components/api-components.tsx","webpack:///./src/components/guides.tsx","webpack:///./src/pages/api/invokeImplementationAdapter.tsx","webpack:///./src/components/members-table.tsx"],"names":["IncludeAvailableFromContext","React","Section","styled","section","SectionHeading","h4","SubHeading","h5","ExampleCommonContainer","Purpose","children","AvailableFrom","version","Usage","Parameters","includeAvailableFrom","label","Provider","value","Parameter","name","dataType","availableFrom","useContext","MethodReturnType","Caveats","Examples","Example","language","ExampleCommon","TypeParameters","Row","tr","NameColumn","td","DefaultValueColumn","DescriptionColumn","AvailableFromColumn","TypeParameter","defaultValue","Overview","Level0","Level1","GuideContent","content","map","child","style","marginLeft","level","key","anchor","href","heading","Heading","id","FixedFont","span","Mock","OptionsTable","context","includeRequiredColumn","required","NameColumnBase","TypeColumn","DataTypeColumn","RequiredColumnStyles","RequiredColumn","MemberContext","Error","createContext","to","Members","MethodMember","displayName","PropertyMember","link","ExposedTypeMember"],"mappings":"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","file":"component---src-pages-api-invoke-implementation-adapter-tsx-c8a83e216b611f4d4dfc.js","sourcesContent":["import * as React from 'react'\n\nexport const IncludeAvailableFromContext = React.createContext(false)\n","import styled from 'styled-components'\nimport React, { ReactNode } from 'react'\nimport { Code } from './Code'\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\n\nexport const Section = styled.section``\nexport const SectionHeading = styled.h4``\nexport const SubHeading = styled.h5``\nexport const ExampleCommonContainer = styled.section`\n  padding: 15px 30px;\n  background: lightyellow;\n`\n\nexport const Purpose: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Purpose</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\nexport type ValidVersions = '1.1.0' | '1.2.0' | '1.5.0' | '1.8.0'\nexport const AvailableFrom = ({ version }: { version: ValidVersions }) => {\n  return (\n    <Section>\n      <SectionHeading>Availability</SectionHeading>\n      This functionality is available from papupata version {version} onwards.\n    </Section>\n  )\n}\n\nexport const Usage: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Usage</SectionHeading>\n      {children}\n    </Section>\n  )\n}\nexport const Parameters: React.FC<{ includeAvailableFrom?: boolean; label?: string }> = ({ children, includeAvailableFrom, label }) => {\n  return (\n    <Section>\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n        <SectionHeading>Parameters{label && `: ${label}`}</SectionHeading>\n        {children ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Description</th>\n                {includeAvailableFrom && <th>Introduced in</th>}\n              </tr>\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        ) : (\n          <p>There are no parameters.</p>\n        )}\n      </IncludeAvailableFromContext.Provider>\n    </Section>\n  )\n}\n\nexport const Parameter: React.FC<{ name: string; dataType: any; availableFrom?: ValidVersions }> = ({\n  children,\n  name,\n  dataType,\n  availableFrom = '1.0.0'\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{dataType}</td>\n      <td>{children}</td>\n      {includeAvailableFrom && <td>{availableFrom}</td>}\n    </tr>\n  )\n}\n\nexport const MethodReturnType: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Returns</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\nexport const Caveats: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Caveats</SectionHeading>\n      {children}\n    </Section>\n  )\n}\nexport const Examples: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Examples</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\nexport const Example: React.FC<{ label?: string; children: string }> = ({ children, label }) => {\n  return (\n    <>\n      {label && <SubHeading>{label}</SubHeading>}\n      <Code language={'typescript'}>{children}</Code>\n    </>\n  )\n}\n\nexport const ExampleCommon: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <ExampleCommonContainer>\n      <SubHeading>Common to examples below:</SubHeading>\n      {children}\n    </ExampleCommonContainer>\n  )\n}\n\nexport const TypeParameters: React.FC<{ children: ReactNode; includeAvailableFrom?: boolean }> = ({ children, includeAvailableFrom }) => {\n  return (\n    <Section>\n      <SectionHeading>Type parameeters</SectionHeading>\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n        <SectionHeading>Parameters</SectionHeading>\n        {children ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Default value</th>\n                <th>Description</th>\n                {includeAvailableFrom ? <th>Introduced in</th> : ''}\n              </tr>\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        ) : (\n          <p>There are no parameters.</p>\n        )}\n      </IncludeAvailableFromContext.Provider>\n    </Section>\n  )\n}\n\nconst Row = styled.tr``\nconst NameColumn = styled.td``\nconst DefaultValueColumn = styled.td``\nconst DescriptionColumn = styled.td``\nconst AvailableFromColumn = styled.td``\n\nexport const TypeParameter: React.FC<{ name: string; defaultValue?: string; availableFrom?: string }> = ({\n  children,\n  name,\n  defaultValue,\n  availableFrom = 'none'\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <Row>\n      <NameColumn>{name}</NameColumn>\n      <DefaultValueColumn>{defaultValue}</DefaultValueColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n","import React, { ReactNode } from 'react'\nimport { Section, SectionHeading } from './api-components'\nimport styled from 'styled-components'\n\nexport function Overview({ children }: { children: ReactNode }) {\n  return (\n    <Section>\n      <SectionHeading>Overview</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\ninterface GuidePart {\n  heading: ReactNode\n  anchor: string\n  content: ReactNode\n  level?: number\n}\n\nconst Level0 = styled.h4``\nconst Level1 = styled.h5`\n  font-size: 1.1em;\n`\n\nexport function GuideContent({ content }: { content: GuidePart[] }) {\n  return (\n    <div>\n      <Section>\n        <SectionHeading>Table of contents</SectionHeading>\n        <ul>\n          {content.map((child) => (\n            <li style={{ marginLeft: 18 * (child.level || 0) }} key={child.anchor}>\n              <a href={`#${child.anchor}`}>{child.heading}</a>\n            </li>\n          ))}\n        </ul>\n      </Section>\n      {content.map((child) => {\n        const Heading = !child.level ? Level0 : Level1\n        return (\n          <Section id={child.anchor} key={child.anchor}>\n            <Heading>{child.heading}</Heading>\n            {child.content}\n          </Section>\n        )\n      })}\n    </div>\n  )\n}\n\nexport const FixedFont = styled.span`\n  font-family: 'Consolas', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\n`\n","import * as React from 'react'\nimport { AvailableFrom, Example, Examples, MethodReturnType, Parameter, Parameters, Purpose, Usage } from '../../components/api-components'\nimport Container from '../../components/Container'\nimport { FixedFont } from '../../components/guides'\nimport { Members, MethodMember, PropertyMember } from '../../components/members-table'\nimport Page from '../../components/Page'\nimport IndexLayout from '../../layouts'\n\nexport default function Mock() {\n  return (\n    <IndexLayout>\n      <Page>\n        <Container>\n          <h1>API Reference</h1>\n          <h2>module invokeImplementationAdapter</h2>\n          <h3>Default export createInvokeImplementationAdapter</h3>\n        </Container>\n        <Purpose>This module allows you to use invoke implemented APIs with no express server. This is primarily used for testing.</Purpose>\n        <AvailableFrom version={'1.5.0'} />\n        <Usage>\n          <Example>{`\n            import createInvokeImplementationAdapter from 'papupata/dist/main/invokeImplementationAdapter'\n          `}</Example>\n          <p>\n            Call the function with any options you wish and use the returned value as the <FixedFont>makeRequest</FixedFont> of the\n            APIDeclaration. As always, a base url needs to be set up to make calls, but its value is ultimately irrelevant when using this\n            adapter.\n          </p>\n        </Usage>\n        <Parameters>\n          <Parameter name=\"options\" dataType=\"Object?\">\n            <OptionsTable />\n          </Parameter>\n        </Parameters>\n        <MethodReturnType>Papupata MakeRequestAdapter</MethodReturnType>\n        <Examples>\n          <Example>{`\n            import { APIDeclaration } from 'papupata'\n            import createInvokeImplementationAdapter from 'papupata/dist/main/invokeImplementationAdapter'\n            import express from 'express'\n            \n            const app = express()\n            const request = supertest(app)\n            const API = new APIDeclaration()\n            API.configure({\n              app,\n              baseURL: '',\n              makeRequest: createInvokeImplementationAdapter()\n            })\n\n          `}</Example>\n        </Examples>\n      </Page>\n    </IndexLayout>\n  )\n}\n\nexport function OptionsTable() {\n  return (\n    <Members context=\"options\" includeRequiredColumn={true}>\n      <MethodMember name=\"createRequest\" dataType=\"(requestBase) => Request\" required={false}>\n        <p>\n          This function is used to create the request passed to the API as if it was the express request. Its sole parameter is a very\n          minimal version of the request, which you may use as a template.\n        </p>\n        <p>This method can be used to add any necessary fields to the request.</p>\n        <Example>{`\n           const createRequest = base => ({...base, headers: { 'content-type': 'text/html' }})\n       `}</Example>\n      </MethodMember>\n      <MethodMember name=\"assertResponse\" dataType=\"(response) => void\" required={false}>\n        <p>\n          This function is called once the response is complete. It is passed a mock express response, allowing for making assertions to\n          whatever it may contain.\n        </p>\n        <Example>{`\n           const assertResponse = res => expect(res.statusCode).toEqual(400)\n       `}</Example>\n      </MethodMember>\n      <PropertyMember name=\"withMiddleware\" dataType=\"boolean\" required={false}>\n        <p>By default, and if explicitly set to false only the API implementation is called and all middleware is ignored.</p>\n        <p>If set to true, any express and papupata middleware on the route is run as normal for the requests.</p>\n      </PropertyMember>\n    </Members>\n  )\n}\n","import { Section, SectionHeading } from './api-components'\nimport React, { createContext, ReactNode, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\n\nconst Row = styled.tr``\nconst NameColumnBase = styled.td``\nconst TypeColumn = styled.td``\nconst DataTypeColumn = styled.td``\nconst DescriptionColumn = styled.td``\nconst RequiredColumnStyles = styled.td``\nconst AvailableFromColumn = styled.td``\n\nfunction RequiredColumn({ children }: { children: ReactNode }) {\n  const { includeRequiredColumn } = useContext(MemberContext)\n  if (!includeRequiredColumn && children) throw new Error('Being asked to show required cell, yet it does not exist')\n  return includeRequiredColumn ? <RequiredColumnStyles>{children}</RequiredColumnStyles> : null\n}\n\nconst MemberContext = createContext({ context: '', includeRequiredColumn: false })\n\nconst NameColumn: React.FC<{ name: string }> = ({ name, children }) => {\n  const { context } = useContext(MemberContext)\n  return (\n    <NameColumnBase>\n      <Link to={`/api/${context}/${name}`}>{children || name}</Link>\n    </NameColumnBase>\n  )\n}\n\nexport const Members: React.FC<{ context: string; includeRequiredColumn?: boolean; includeAvailableFrom?: boolean }> = ({\n  children,\n  context,\n  includeRequiredColumn,\n  includeAvailableFrom\n}) => {\n  return (\n    <Section>\n      <MemberContext.Provider value={{ context, includeRequiredColumn: !!includeRequiredColumn }}>\n        <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n          <SectionHeading>Members</SectionHeading>\n          <table>\n            <thead>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Data type/return type</th>\n              <th>Description</th>\n              {includeRequiredColumn && <th>Required</th>}\n              {includeAvailableFrom && <th>Introduced in</th>}\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        </IncludeAvailableFromContext.Provider>\n      </MemberContext.Provider>\n    </Section>\n  )\n}\nexport const MethodMember: React.FC<{ name: string; dataType: any; required?: any; displayName?: any; availableFrom?: string }> = ({\n  children,\n  name,\n  dataType,\n  required,\n  displayName,\n  availableFrom\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <Row>\n      <NameColumn name={name}>{displayName}</NameColumn>\n      <TypeColumn>method</TypeColumn>\n      <DataTypeColumn>{dataType}</DataTypeColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n\nexport const PropertyMember: React.FC<{ name: string; dataType: any; required?: any; availableFrom?: string; link?: boolean }> = ({\n  children,\n  name,\n  dataType,\n  required,\n  availableFrom,\n  link\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n\n  return (\n    <Row>\n      {link ? <NameColumn name={name}>{name}</NameColumn> : <NameColumnBase>{name}</NameColumnBase>}\n      <TypeColumn>property</TypeColumn>\n      <DataTypeColumn>{dataType}</DataTypeColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n\nexport const ExposedTypeMember: React.FC<{ name: string }> = ({ children, name }) => {\n  return (\n    <Row>\n      <NameColumnBase>{name}</NameColumnBase>\n      <TypeColumn>property</TypeColumn>\n      <DataTypeColumn>n/a</DataTypeColumn>\n      <DescriptionColumn>{children}. Type type itself must be accessed using the typeof operator.</DescriptionColumn>\n    </Row>\n  )\n}\n"],"sourceRoot":""}