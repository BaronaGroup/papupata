(self.webpackChunkpapupata_docs=self.webpackChunkpapupata_docs||[]).push([[4391],{1040:function(n,t,e){"use strict";e.d(t,{P:function(){return a}});var a=e(7294).createContext(!1)},2275:function(n,t,e){"use strict";e.d(t,{Z:function(){return c}});var a,l,r=e(5761),u=e(7294),o=e(3583),i=e(3431),s=o.ZP.div(a||(a=(0,r.Z)(["\n  border-left: 4px solid #663399;\n  padding: 5px 0 5px 10px;\n"]))),p=o.ZP.div(l||(l=(0,r.Z)(["\n  display: inline-block;\n  margin-left: 10px;\n  font-size: 0.9em;\n"])));function c(n){var t=n.variants,e=n.isRecommendation,a=(0,u.useState)("2.x"),l=a[0],r=a[1],o=(0,u.useCallback)((function(n){r(n.target.value)}),[]);return(0,i.tZ)(s,null,(0,i.tZ)("select",{value:l,onChange:o},(0,i.tZ)("option",{value:"1.x"},"Papupata 1.x"),(0,i.tZ)("option",{value:"2.x"},"Papupata 2.x")),e&&(0,i.tZ)(p,null,"Older styles are still supported in later versions, just not preferred."),Object.keys(t).filter((function(n){return function(n,t){return"*"===t||t===n}(l,n)})).map((function(n){return(0,i.tZ)("div",{key:n},t[n])})))}},1724:function(n,t,e){"use strict";e.d(t,{$0:function(){return v},OT:function(){return y},ag:function(){return b},cY:function(){return I},l1:function(){return R},aE:function(){return x},d2:function(){return U},pR:function(){return L},by:function(){return q},yV:function(){return w},en:function(){return D},iT:function(){return k},Vo:function(){return T},lS:function(){return O}});var a,l,r,u,o,i,s,p,c,m=e(5761),Z=e(3583),d=e(7294),f=e(1808),P=e(1040),h=e(3431),v=Z.ZP.section(a||(a=(0,m.Z)([""]))),y=Z.ZP.h4(l||(l=(0,m.Z)([""]))),g=Z.ZP.h5(r||(r=(0,m.Z)([""]))),A=Z.ZP.section(u||(u=(0,m.Z)(["\n  padding: 15px 30px;\n  background: lightyellow;\n"]))),b=function(n){var t=n.children;return(0,h.tZ)(v,null,(0,h.tZ)(y,null,"Purpose"),t)},I=function(n){var t=n.version;return(0,h.tZ)(v,null,(0,h.tZ)(y,null,"Availability"),"This functionality is available from papupata version ",t," onwards.")},R=function(n){var t=n.children;return(0,h.tZ)(v,null,(0,h.tZ)(y,null,"Usage"),t)},x=function(n){var t=n.children,e=n.includeAvailableFrom,a=n.label;return(0,h.tZ)(v,null,(0,h.tZ)(P.P.Provider,{value:!!e},(0,h.tZ)(y,null,"Parameters",a&&": "+a),t?(0,h.tZ)("table",null,(0,h.tZ)("thead",null,(0,h.tZ)("tr",null,(0,h.tZ)("th",null,"Name"),(0,h.tZ)("th",null,"Type"),(0,h.tZ)("th",null,"Description"),e&&(0,h.tZ)("th",null,"Introduced in"))),(0,h.tZ)("tbody",null,t)):(0,h.tZ)("p",null,"There are no parameters.")))},U=function(n){var t=n.children,e=n.name,a=n.dataType,l=n.availableFrom,r=void 0===l?"1.0.0":l,u=d.useContext(P.P);return(0,h.tZ)("tr",null,(0,h.tZ)("td",null,e),(0,h.tZ)("td",null,a),(0,h.tZ)("td",null,t),u&&(0,h.tZ)("td",null,r))},L=function(n){var t=n.children;return(0,h.tZ)(v,null,(0,h.tZ)(y,null,"Returns"),t)},q=function(n){var t=n.children;return(0,h.tZ)(v,null,(0,h.tZ)(y,null,"Caveats"),t)},w=function(n){var t=n.children;return(0,h.tZ)(v,null,(0,h.tZ)(y,null,"Examples"),t)},D=function(n){var t=n.children,e=n.label;return(0,h.tZ)(d.Fragment,null,e&&(0,h.tZ)(g,null,e),(0,h.tZ)(f.E,{language:"typescript"},t))},k=function(n){var t=n.children;return(0,h.tZ)(A,null,(0,h.tZ)(g,null,"Common to examples below:"),t)},T=function(n){var t=n.children,e=n.includeAvailableFrom;return(0,h.tZ)(v,null,(0,h.tZ)(y,null,"Type parameeters"),(0,h.tZ)(P.P.Provider,{value:!!e},(0,h.tZ)(y,null,"Parameters"),t?(0,h.tZ)("table",null,(0,h.tZ)("thead",null,(0,h.tZ)("tr",null,(0,h.tZ)("th",null,"Name"),(0,h.tZ)("th",null,"Default value"),(0,h.tZ)("th",null,"Description"),e?(0,h.tZ)("th",null,"Introduced in"):"")),(0,h.tZ)("tbody",null,t)):(0,h.tZ)("p",null,"There are no parameters.")))},C=Z.ZP.tr(o||(o=(0,m.Z)([""]))),F=Z.ZP.td(i||(i=(0,m.Z)([""]))),S=Z.ZP.td(s||(s=(0,m.Z)([""]))),j=Z.ZP.td(p||(p=(0,m.Z)([""]))),E=Z.ZP.td(c||(c=(0,m.Z)([""]))),O=function(n){var t=n.children,e=n.name,a=n.defaultValue,l=n.availableFrom,r=void 0===l?"none":l,u=d.useContext(P.P);return(0,h.tZ)(C,null,(0,h.tZ)(F,null,e),(0,h.tZ)(S,null,a),(0,h.tZ)(j,null,t),u?(0,h.tZ)(E,null,r):"")}},184:function(n,t,e){"use strict";e.r(t),e.d(t,{default:function(){return p}});e(1879);var a=e(7100),l=e(7614),r=e(832),u=e(1724),o=e(7294),i=e(2275),s=e(3431);function p(){return(0,s.tZ)(a.Z,null,(0,s.tZ)(l.Z,null,(0,s.tZ)(r.Z,null,(0,s.tZ)("h1",null,"API Reference"),(0,s.tZ)("h2",null,"class DeclaredAPI"),(0,s.tZ)("h3",null,"method getURL")),(0,s.tZ)(u.ag,null,"Get the URL for the API"),(0,s.tZ)(u.l1,null,(0,s.tZ)("p",null,"This function requires base URL to be configured in order to work."),(0,s.tZ)("p",null,"As path parameters are considered to be a part of the URL, their values must be provided to the getAPI call and they are injected in to the URL."),(0,s.tZ)("p",null,"Query parameters are optionally included, too.")),(0,s.tZ)(u.aE,null,(0,s.tZ)(u.d2,{name:"pathAndQueryParams",dataType:"Object"},"Path parameters value for the API, or combination of path and query parameter values.")),(0,s.tZ)(u.pR,null,"string"),(0,s.tZ)(u.yV,null,(0,s.tZ)(i.Z,{isRecommendation:!0,variants:{"1.x":(0,s.tZ)(o.Fragment,null,(0,s.tZ)(u.en,{label:"Path only"},"\n                      import { APIDeclaration } from 'papupata'\n                      const api = new APIDeclaration()\n                      api.configure({baseURL: 'https://example.com'})\n                      const myAPI = api.declarePostAPI('/do-stuff/:param')\n                        .params(['param'] as const)\n                        .response<string>()\n\n                      const URL = myAPI.getURL({param: 'value'})\n                      // URL is now https://example.com/do-stuff/value\n                    "),(0,s.tZ)(u.en,{label:"Path and query (query omitted)"},"\n                      import { APIDeclaration } from 'papupata'\n                      const api = new APIDeclaration()\n                      api.configure({baseURL: 'https://example.com'})\n                      const myAPI = api.declarePostAPI('/do-stuff/:param')\n                        .params(['param'] as const)\n                        .query(['qval'] as const)\n                        .response<string>()\n\n                      const URL = myAPI.getURL({param: 'value'})\n                      // URL is now https://example.com/do-stuff/value\n                    ")," ",(0,s.tZ)(u.en,{label:"Path and query (query present)"},"\n                      import { APIDeclaration } from 'papupata'\n                      const api = new APIDeclaration()\n                      api.configure({baseURL: 'https://example.com'})\n                      const myAPI = api.declarePostAPI('/do-stuff/:param')\n                        .params(['param'] as const)\n                        .query(['qval'] as const)\n                        .response<string>()\n\n                      const URL = myAPI.getURL({param: 'value', qval: 'hello'})\n                      // URL is now https://example.com/do-stuff/value?qval=hello\n                    ")),"2.x":(0,s.tZ)(o.Fragment,null,(0,s.tZ)(u.en,{label:"Path only"},"\n                  import { APIDeclaration } from 'papupata'\n                  const api = new APIDeclaration()\n                  api.configure({baseURL: 'https://example.com'})\n                  const myAPI = api.declarePostAPI('/do-stuff/:param')\n                    .params({param: String})\n                    .response<string>()\n\n                  const URL = myAPI.getURL({param: 'value'})\n                  // URL is now https://example.com/do-stuff/value\n                "),(0,s.tZ)(u.en,{label:"Path and query (query omitted)"},"\n                  import { APIDeclaration } from 'papupata'\n                  const api = new APIDeclaration()\n                  api.configure({baseURL: 'https://example.com'})\n                  const myAPI = api.declarePostAPI('/do-stuff/:param')\n                    .params({param: String})\n                    .query({qval: String})\n                    .response<string>()\n\n                  const URL = myAPI.getURL({param: 'value'})\n                  // URL is now https://example.com/do-stuff/value\n                ")," ",(0,s.tZ)(u.en,{label:"Path and query (query present)"},"\n                  import { APIDeclaration } from 'papupata'\n                  const api = new APIDeclaration()\n                  api.configure({baseURL: 'https://example.com'})\n                  const myAPI = api.declarePostAPI('/do-stuff/:param')\n                    .params({param: String})\n                    .query({qval: String})\n                    .response<string>()\n\n                  const URL = myAPI.getURL({param: 'value', qval: 'hello'})\n                  // URL is now https://example.com/do-stuff/value?qval=hello\n                "))}}))))}},1879:function(n,t,e){"use strict";e(7614),e(832),e(7100)}}]);
//# sourceMappingURL=component---src-pages-api-declared-api-get-url-tsx-423d79c6b119ae12f979.js.map