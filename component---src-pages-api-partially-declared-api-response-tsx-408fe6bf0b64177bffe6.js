(self.webpackChunkpapupata_docs=self.webpackChunkpapupata_docs||[]).push([[2917],{1040:function(e,t,n){"use strict";n.d(t,{P:function(){return l}});var l=n(7294).createContext(!1)},1724:function(e,t,n){"use strict";n.d(t,{$0:function(){return y},OT:function(){return P},ag:function(){return A},cY:function(){return g},l1:function(){return T},aE:function(){return D},d2:function(){return w},pR:function(){return x},by:function(){return R},yV:function(){return E},en:function(){return C},iT:function(){return U},Vo:function(){return k},lS:function(){return H}});var l,r,a,u,i,o,s,c,Z,p=n(6848),d=n(366),h=n(7294),f=n(1808),m=n(1040),v=n(3431),y=d.ZP.section(l||(l=(0,p.Z)([""]))),P=d.ZP.h4(r||(r=(0,p.Z)([""]))),b=d.ZP.h5(a||(a=(0,p.Z)([""]))),I=d.ZP.section(u||(u=(0,p.Z)(["\n  padding: 15px 30px;\n  background: lightyellow;\n"]))),A=function(e){var t=e.children;return(0,v.tZ)(y,null,(0,v.tZ)(P,null,"Purpose"),t)},g=function(e){var t=e.version;return(0,v.tZ)(y,null,(0,v.tZ)(P,null,"Availability"),"This functionality is available from papupata version ",t," onwards.")},T=function(e){var t=e.children;return(0,v.tZ)(y,null,(0,v.tZ)(P,null,"Usage"),t)},D=function(e){var t=e.children,n=e.includeAvailableFrom,l=e.label;return(0,v.tZ)(y,null,(0,v.tZ)(m.P.Provider,{value:!!n},(0,v.tZ)(P,null,"Parameters",l&&": "+l),t?(0,v.tZ)("table",null,(0,v.tZ)("thead",null,(0,v.tZ)("tr",null,(0,v.tZ)("th",null,"Name"),(0,v.tZ)("th",null,"Type"),(0,v.tZ)("th",null,"Description"),n&&(0,v.tZ)("th",null,"Introduced in"))),(0,v.tZ)("tbody",null,t)):(0,v.tZ)("p",null,"There are no parameters.")))},w=function(e){var t=e.children,n=e.name,l=e.dataType,r=e.availableFrom,a=void 0===r?"1.0.0":r,u=h.useContext(m.P);return(0,v.tZ)("tr",null,(0,v.tZ)("td",null,n),(0,v.tZ)("td",null,l),(0,v.tZ)("td",null,t),u&&(0,v.tZ)("td",null,a))},x=function(e){var t=e.children;return(0,v.tZ)(y,null,(0,v.tZ)(P,null,"Returns"),t)},R=function(e){var t=e.children;return(0,v.tZ)(y,null,(0,v.tZ)(P,null,"Caveats"),t)},E=function(e){var t=e.children;return(0,v.tZ)(y,null,(0,v.tZ)(P,null,"Examples"),t)},C=function(e){var t=e.children,n=e.label;return(0,v.tZ)(h.Fragment,null,n&&(0,v.tZ)(b,null,n),(0,v.tZ)(f.E,{language:"typescript"},t))},U=function(e){var t=e.children;return(0,v.tZ)(I,null,(0,v.tZ)(b,null,"Common to examples below:"),t)},k=function(e){var t=e.children,n=e.includeAvailableFrom;return(0,v.tZ)(y,null,(0,v.tZ)(P,null,"Type parameeters"),(0,v.tZ)(m.P.Provider,{value:!!n},(0,v.tZ)(P,null,"Parameters"),t?(0,v.tZ)("table",null,(0,v.tZ)("thead",null,(0,v.tZ)("tr",null,(0,v.tZ)("th",null,"Name"),(0,v.tZ)("th",null,"Default value"),(0,v.tZ)("th",null,"Description"),n?(0,v.tZ)("th",null,"Introduced in"):"")),(0,v.tZ)("tbody",null,t)):(0,v.tZ)("p",null,"There are no parameters.")))},F=d.ZP.tr(i||(i=(0,p.Z)([""]))),V=d.ZP.td(o||(o=(0,p.Z)([""]))),q=d.ZP.td(s||(s=(0,p.Z)([""]))),S=d.ZP.td(c||(c=(0,p.Z)([""]))),j=d.ZP.td(Z||(Z=(0,p.Z)([""]))),H=function(e){var t=e.children,n=e.name,l=e.defaultValue,r=e.availableFrom,a=void 0===r?"none":r,u=h.useContext(m.P);return(0,v.tZ)(F,null,(0,v.tZ)(V,null,n),(0,v.tZ)(q,null,l),(0,v.tZ)(S,null,t),u?(0,v.tZ)(j,null,a):"")}},1683:function(e,t,n){"use strict";n.d(t,{K:function(){return a},e:function(){return u}});n(7294);var l=n(5444),r=n(3431);function a(){return(0,r.tZ)(l.rU,{to:"/api/PartiallyDeclaredAPI"},"PartiallyDeclaredAPI")}function u(){return(0,r.tZ)(l.rU,{to:"/api/DeclaredAPI"},"DeclaredAPI")}},1603:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return s}});n(1879);var l=n(387),r=n(7614),a=n(832),u=n(1724),i=n(1683),o=n(3431);function s(){return(0,o.tZ)(l.Z,null,(0,o.tZ)(r.Z,null,(0,o.tZ)(a.Z,null,(0,o.tZ)("h1",null,"API Reference"),(0,o.tZ)("h2",null,"class IncompleteAPIDeclaration"),(0,o.tZ)("h3",null,"method response")),(0,o.tZ)(u.ag,null,"Declares the response type or types for an API and concludes the declaration."),(0,o.tZ)(u.l1,null,(0,o.tZ)("p",null,"The response type is declared as a type parameter."),(0,o.tZ)("p",null,"In some cases you might be in a situation where the types returned from the implementation don't quite match what clients receive. An example of this would be with dates -- you could have a Date object on the server, but when it gets to the browser it's just a string. To deal with this another type parameter exists, allowing you to specify another type to be returned from the implementation.")),(0,o.tZ)(u.aE,null,(0,o.tZ)(u.d2,{name:"<ResponseType>",dataType:"Interface"},"The response type as seen on the client side."),(0,o.tZ)(u.d2,{name:"<ServerResponseType>",dataType:"Interface"},"The response type as seen on the server side. Default to the value of ResponseType.")),(0,o.tZ)(u.pR,null,(0,o.tZ)(i.e,null)),(0,o.tZ)(u.by,null,(0,o.tZ)("ul",null,(0,o.tZ)("li",null,"There is no client side validation for the data types. Only typescript itself validates the response on server side"),(0,o.tZ)("li",null,"It's up to the developer to ensure that the ResponseType is really resulting from returning a ServerResponseType."))),(0,o.tZ)(u.yV,null,(0,o.tZ)(u.en,{label:"Example 1 Declaration"},"\n            import { APIDeclaration } from 'papupata'\n            const api = new APIDeclaration()\n            const myAPI = api.declarePostAPI('/do-stuff')\n              .response<string>()\n          "),(0,o.tZ)(u.en,{label:"Example 1 Usage in implementation"},'\n            myAPI.implement(req => {\n              return "Hello"\n            })\n          '),(0,o.tZ)(u.en,{label:"Example 1 Usage in invocation"},'\n            await myAPI({}) // Returns a promise that resolves to "Hello"\n          '),(0,o.tZ)(u.en,{label:"Example 2, differing types; Declaration"},"\n            import { APIDeclaration } from 'papupata'\n            const api = new APIDeclaration()\n            const myAPI = api.declarePostAPI('/do-stuff')\n              .response<{date: string}, {date: Date}}>()\n          "),(0,o.tZ)(u.en,{label:"Example 2 Usage in implementation"},"\n            myAPI.implement(req => {\n              return { date: new Date('2019-01-01T12:12:12.000Z') }\n            })\n          "),(0,o.tZ)(u.en,{label:"Example 2 Usage in invocation"},"\n            await myAPI({}) // Returns a promise that resolves to '2019-01-01T12:12:12.000Z'\n          "))))}}}]);
//# sourceMappingURL=component---src-pages-api-partially-declared-api-response-tsx-408fe6bf0b64177bffe6.js.map