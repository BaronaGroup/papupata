{"version":3,"sources":["webpack:///./src/components/IncludeAvailableFromContext.tsx","webpack:///./src/pages/api/DeclaredAPI/CallArgsType.tsx","webpack:///./src/components/api-components.tsx"],"names":["IncludeAvailableFromContext","React","CallArgsType","label","Section","styled","section","SectionHeading","h4","SubHeading","h5","ExampleCommonContainer","Purpose","children","AvailableFrom","version","Usage","Parameters","includeAvailableFrom","Provider","value","Parameter","name","dataType","availableFrom","useContext","MethodReturnType","Caveats","Examples","Example","language","ExampleCommon","TypeParameters","Row","tr","NameColumn","td","DefaultValueColumn","DescriptionColumn","AvailableFromColumn","TypeParameter","defaultValue"],"mappings":"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","file":"component---src-pages-api-declared-api-call-args-type-tsx-25507f6d711e5230cf75.js","sourcesContent":["import * as React from 'react'\n\nexport const IncludeAvailableFromContext = React.createContext(false)\n","import IndexLayout from '../../../layouts'\nimport Page from '../../../components/Page'\nimport Container from '../../../components/Container'\nimport { Purpose, Usage, Examples, Example } from '../../../components/api-components'\n\nexport default function CallArgsType() {\n  return (\n    <IndexLayout>\n      <Page>\n        <Container>\n          <h1>API Reference</h1>\n          <h2>class DeclaredAPI</h2>\n          <h3>exposed type CallArgsType</h3>\n        </Container>\n        <Purpose>\n          Represents the type of arguments to API invocation. This exists to help you create functions that return parts or all of a\n          requests's parameters.\n        </Purpose>\n        <Usage>\n          <p>The exposed types are used with the typeof operator. See the example below for details.</p>\n          <p>Although the types are presented as fields on the API, they have no runtime value.</p>\n        </Usage>\n        <Examples>\n          <Example label=\"Basic usage\">\n            {`\n            import { APIDeclaration } from 'papupata'\n            const api = new APIDeclaration()\n            const myAPI = api.declarePostAPI('/do-stuff')\n              .query(['q'] as const)\n              .body<{key: string}>\n              .response<string>()\n\n            type CallArgsType = typeof myAPI['CallArgsType']\n            // CallArgsType is now {key: string, q: string}            \n          `}\n          </Example>\n          <Example label=\"Practical usage\">{`\n            await myAPI(getRequestParams())\n\n            function getRequestParams(): typeof myAPI['CallArgsType']  {\n              // Now typescript will complain because we do not return everything it needs\n            }\n          `}</Example>\n        </Examples>\n      </Page>\n    </IndexLayout>\n  )\n}\n","import styled from 'styled-components'\nimport React, { ReactNode } from 'react'\nimport { Code } from './Code'\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\n\nexport const Section = styled.section``\nexport const SectionHeading = styled.h4``\nexport const SubHeading = styled.h5``\nexport const ExampleCommonContainer = styled.section`\n  padding: 15px 30px;\n  background: lightyellow;\n`\n\nexport const Purpose: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Purpose</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\nexport type ValidVersions = '1.1.0' | '1.2.0' | '1.5.0' | '1.8.0'\nexport const AvailableFrom = ({ version }: { version: ValidVersions }) => {\n  return (\n    <Section>\n      <SectionHeading>Availability</SectionHeading>\n      This functionality is available from papupata version {version} onwards.\n    </Section>\n  )\n}\n\nexport const Usage: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Usage</SectionHeading>\n      {children}\n    </Section>\n  )\n}\nexport const Parameters: React.FC<{ includeAvailableFrom?: boolean; label?: string }> = ({ children, includeAvailableFrom, label }) => {\n  return (\n    <Section>\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n        <SectionHeading>Parameters{label && `: ${label}`}</SectionHeading>\n        {children ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Description</th>\n                {includeAvailableFrom && <th>Introduced in</th>}\n              </tr>\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        ) : (\n          <p>There are no parameters.</p>\n        )}\n      </IncludeAvailableFromContext.Provider>\n    </Section>\n  )\n}\n\nexport const Parameter: React.FC<{ name: string; dataType: any; availableFrom?: ValidVersions }> = ({\n  children,\n  name,\n  dataType,\n  availableFrom = '1.0.0'\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{dataType}</td>\n      <td>{children}</td>\n      {includeAvailableFrom && <td>{availableFrom}</td>}\n    </tr>\n  )\n}\n\nexport const MethodReturnType: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Returns</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\nexport const Caveats: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Caveats</SectionHeading>\n      {children}\n    </Section>\n  )\n}\nexport const Examples: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Examples</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\nexport const Example: React.FC<{ label?: string; children: string }> = ({ children, label }) => {\n  return (\n    <>\n      {label && <SubHeading>{label}</SubHeading>}\n      <Code language={'typescript'}>{children}</Code>\n    </>\n  )\n}\n\nexport const ExampleCommon: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <ExampleCommonContainer>\n      <SubHeading>Common to examples below:</SubHeading>\n      {children}\n    </ExampleCommonContainer>\n  )\n}\n\nexport const TypeParameters: React.FC<{ children: ReactNode; includeAvailableFrom?: boolean }> = ({ children, includeAvailableFrom }) => {\n  return (\n    <Section>\n      <SectionHeading>Type parameeters</SectionHeading>\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n        <SectionHeading>Parameters</SectionHeading>\n        {children ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Default value</th>\n                <th>Description</th>\n                {includeAvailableFrom ? <th>Introduced in</th> : ''}\n              </tr>\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        ) : (\n          <p>There are no parameters.</p>\n        )}\n      </IncludeAvailableFromContext.Provider>\n    </Section>\n  )\n}\n\nconst Row = styled.tr``\nconst NameColumn = styled.td``\nconst DefaultValueColumn = styled.td``\nconst DescriptionColumn = styled.td``\nconst AvailableFromColumn = styled.td``\n\nexport const TypeParameter: React.FC<{ name: string; defaultValue?: string; availableFrom?: string }> = ({\n  children,\n  name,\n  defaultValue,\n  availableFrom = 'none'\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <Row>\n      <NameColumn>{name}</NameColumn>\n      <DefaultValueColumn>{defaultValue}</DefaultValueColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n"],"sourceRoot":""}