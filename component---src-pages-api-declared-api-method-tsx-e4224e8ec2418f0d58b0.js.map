{"version":3,"sources":["webpack://papupata-docs/./src/components/IncludeAvailableFromContext.tsx","webpack://papupata-docs/./src/components/api-components.tsx","webpack://papupata-docs/./src/pages/api/DeclaredAPI/method.tsx"],"names":["IncludeAvailableFromContext","React","Section","styled","SectionHeading","SubHeading","ExampleCommonContainer","Purpose","children","AvailableFrom","version","Usage","Parameters","includeAvailableFrom","label","value","Parameter","name","dataType","availableFrom","MethodReturnType","Caveats","Examples","Example","language","ExampleCommon","TypeParameters","Row","NameColumn","DefaultValueColumn","DescriptionColumn","AvailableFromColumn","TypeParameter","defaultValue","Method"],"mappings":"wJAEaA,E,QAA8BC,eAAoB,I,4cCGlDC,EAAUC,aAAH,sBACPC,EAAiBD,QAAH,sBACdE,EAAaF,QAAH,sBACVG,EAAyBH,aAAH,2EAKtBI,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC7B,QAACN,EAAD,MACE,QAACE,EAAD,gBACCI,IAKMC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,QAACR,EAAD,MACE,QAACE,EAAD,qBADF,yDAEyDM,EAFzD,cAMSC,EAAkB,SAAC,GAAD,IAAGH,EAAH,EAAGA,SAAH,OAC3B,QAACN,EAAD,MACE,QAACE,EAAD,cACCI,IAGMI,EAA2E,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAUK,EAAb,EAAaA,qBAAsBC,EAAnC,EAAmCA,MAAnC,OACpF,QAACZ,EAAD,MACE,QAAC,aAAD,CAAsCa,QAASF,IAC7C,QAACT,EAAD,kBAA2BU,GAAK,KAASA,GACxCN,GACC,sBACE,sBACE,mBACE,2BACA,2BACA,iCACCK,IAAwB,sCAG7B,qBAAQL,KAGV,gDAMGQ,EAAsF,SAAC,GAK7F,IAJLR,EAII,EAJJA,SACAS,EAGI,EAHJA,KACAC,EAEI,EAFJA,SAEI,IADJC,qBACI,MADY,QACZ,EACEN,EAAuBZ,aAAiBD,KAC9C,OACE,mBACE,kBAAKiB,IACL,kBAAKC,IACL,kBAAKV,GACJK,IAAwB,kBAAKM,KAKvBC,EAA6B,SAAC,GAAD,IAAGZ,EAAH,EAAGA,SAAH,OACtC,QAACN,EAAD,MACE,QAACE,EAAD,gBACCI,IAIMa,EAAoB,SAAC,GAAD,IAAGb,EAAH,EAAGA,SAAH,OAC7B,QAACN,EAAD,MACE,QAACE,EAAD,gBACCI,IAGMc,EAAwC,SAAC,GAAD,IAAGd,EAAH,EAAGA,SAAH,OACjD,QAACN,EAAD,MACE,QAACE,EAAD,iBACCI,IAIMe,EAA0D,SAAC,GAAD,IAAGf,EAAH,EAAGA,SAAUM,EAAb,EAAaA,MAAb,OACnE,wBACGA,IAAS,QAACT,EAAD,KAAaS,IACvB,QAAC,IAAD,CAAMU,SAAU,cAAehB,KAIxBiB,EAA6C,SAAC,GAAD,IAAGjB,EAAH,EAAGA,SAAH,OACtD,QAACF,EAAD,MACE,QAACD,EAAD,kCACCG,IAIMkB,EAAoF,SAAC,GAAD,IAAGlB,EAAH,EAAGA,SAAUK,EAAb,EAAaA,qBAAb,OAC7F,QAACX,EAAD,MACE,QAACE,EAAD,0BACA,QAAC,aAAD,CAAsCW,QAASF,IAC7C,QAACT,EAAD,mBACCI,GACC,sBACE,sBACE,mBACE,2BACA,oCACA,iCACCK,GAAuB,mCAAyB,MAGrD,qBAAQL,KAGV,gDAMJmB,EAAMxB,QAAH,sBACHyB,EAAazB,QAAH,sBACV0B,EAAqB1B,QAAH,sBAClB2B,EAAoB3B,QAAH,sBACjB4B,EAAsB5B,QAAH,sBAEZ6B,EAA2F,SAAC,GAKlG,IAJLxB,EAII,EAJJA,SACAS,EAGI,EAHJA,KACAgB,EAEI,EAFJA,aAEI,IADJd,qBACI,MADY,OACZ,EACEN,EAAuBZ,aAAiBD,KAC9C,OACE,QAAC2B,EAAD,MACE,QAACC,EAAD,KAAaX,IACb,QAACY,EAAD,KAAqBI,IACrB,QAACH,EAAD,KAAoBtB,GACnBK,GAAuB,QAACkB,EAAD,KAAsBZ,GAAuC,M,2IChJ5E,SAASe,IACtB,OACE,QAAC,IAAD,MACE,QAAC,IAAD,MACE,QAAC,IAAD,MACE,oCACA,wCACA,uCAEF,QAAC,KAAD,qCACA,QAAC,KAAD,MACE,QAAC,KAAD","file":"component---src-pages-api-declared-api-method-tsx-e4224e8ec2418f0d58b0.js","sourcesContent":["import * as React from 'react'\n\nexport const IncludeAvailableFromContext = React.createContext(false)\n","import styled from 'styled-components'\nimport React, { ReactNode } from 'react'\nimport { Code } from './Code'\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\n\nexport const Section = styled.section``\nexport const SectionHeading = styled.h4``\nexport const SubHeading = styled.h5``\nexport const ExampleCommonContainer = styled.section`\n  padding: 15px 30px;\n  background: lightyellow;\n`\n\nexport const Purpose: React.FC = ({ children }) => (\n    <Section>\n      <SectionHeading>Purpose</SectionHeading>\n      {children}\n    </Section>\n  )\n\nexport type ValidVersions = '1.1.0' | '1.2.0' | '1.5.0' | '1.8.0' | '2.0.0'\nexport const AvailableFrom = ({ version }: { version: ValidVersions }) => (\n    <Section>\n      <SectionHeading>Availability</SectionHeading>\n      This functionality is available from papupata version {version} onwards.\n    </Section>\n  )\n\nexport const Usage: React.FC = ({ children }) => (\n    <Section>\n      <SectionHeading>Usage</SectionHeading>\n      {children}\n    </Section>\n  )\nexport const Parameters: React.FC<{ includeAvailableFrom?: boolean; label?: string }> = ({ children, includeAvailableFrom, label }) => (\n    <Section>\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n        <SectionHeading>Parameters{label && `: ${label}`}</SectionHeading>\n        {children ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Description</th>\n                {includeAvailableFrom && <th>Introduced in</th>}\n              </tr>\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        ) : (\n          <p>There are no parameters.</p>\n        )}\n      </IncludeAvailableFromContext.Provider>\n    </Section>\n  )\n\nexport const Parameter: React.FC<{ name: string; dataType: any; availableFrom?: ValidVersions }> = ({\n  children,\n  name,\n  dataType,\n  availableFrom = '1.0.0'\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{dataType}</td>\n      <td>{children}</td>\n      {includeAvailableFrom && <td>{availableFrom}</td>}\n    </tr>\n  )\n}\n\nexport const MethodReturnType: React.FC = ({ children }) => (\n    <Section>\n      <SectionHeading>Returns</SectionHeading>\n      {children}\n    </Section>\n  )\n\nexport const Caveats: React.FC = ({ children }) => (\n    <Section>\n      <SectionHeading>Caveats</SectionHeading>\n      {children}\n    </Section>\n  )\nexport const Examples: React.FC<{ children: any }> = ({ children }) => (\n    <Section>\n      <SectionHeading>Examples</SectionHeading>\n      {children}\n    </Section>\n  )\n\nexport const Example: React.FC<{ label?: string; children: string }> = ({ children, label }) => (\n    <>\n      {label && <SubHeading>{label}</SubHeading>}\n      <Code language={'typescript'}>{children}</Code>\n    </>\n  )\n\nexport const ExampleCommon: React.FC<{ children: any }> = ({ children }) => (\n    <ExampleCommonContainer>\n      <SubHeading>Common to examples below:</SubHeading>\n      {children}\n    </ExampleCommonContainer>\n  )\n\nexport const TypeParameters: React.FC<{ children: ReactNode; includeAvailableFrom?: boolean }> = ({ children, includeAvailableFrom }) => (\n    <Section>\n      <SectionHeading>Type parameeters</SectionHeading>\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n        <SectionHeading>Parameters</SectionHeading>\n        {children ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Default value</th>\n                <th>Description</th>\n                {includeAvailableFrom ? <th>Introduced in</th> : ''}\n              </tr>\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        ) : (\n          <p>There are no parameters.</p>\n        )}\n      </IncludeAvailableFromContext.Provider>\n    </Section>\n  )\n\nconst Row = styled.tr``\nconst NameColumn = styled.td``\nconst DefaultValueColumn = styled.td``\nconst DescriptionColumn = styled.td``\nconst AvailableFromColumn = styled.td``\n\nexport const TypeParameter: React.FC<{ name: string; defaultValue?: string; availableFrom?: string }> = ({\n  children,\n  name,\n  defaultValue,\n  availableFrom = 'none'\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <Row>\n      <NameColumn>{name}</NameColumn>\n      <DefaultValueColumn>{defaultValue}</DefaultValueColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n","import '../../../prepare'\nimport IndexLayout from '../../../layouts'\nimport Page from '../../../components/Page'\nimport Container from '../../../components/Container'\nimport { Purpose, Examples, Example } from '../../../components/api-components'\n\nexport default function Method() {\n  return (\n    <IndexLayout>\n      <Page>\n        <Container>\n          <h1>API Reference</h1>\n          <h2>class DeclaredAPI</h2>\n          <h3>property method</h3>\n        </Container>\n        <Purpose>The HTTP method of the API.</Purpose>\n        <Examples>\n          <Example>\n            {`\n            import { APIDeclaration } from 'papupata'\n            const api = new APIDeclaration()\n            const myAPI = api.declareGetAPI('/get-stuff')\n              .response<string>()\n\n            // myAPI.method === 'get'\n\n          `}\n          </Example>\n        </Examples>\n      </Page>\n    </IndexLayout>\n  )\n}\n"],"sourceRoot":""}