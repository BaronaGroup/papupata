{"version":3,"sources":["webpack:///./src/components/IncludeAvailableFromContext.tsx","webpack:///./src/pages/api/APIDeclaration/configure.tsx","webpack:///./src/components/api-components.tsx","webpack:///./src/components/ToDo.tsx","webpack:///./src/components/Banner.ts","webpack:///./src/components/members-table.tsx"],"names":["IncludeAvailableFromContext","React","Configure","name","dataType","href","id","includeRequiredColumn","context","includeAvailableFrom","required","availableFrom","to","label","Section","styled","section","SectionHeading","h4","SubHeading","h5","ExampleCommonContainer","Purpose","children","AvailableFrom","version","Usage","Parameters","Provider","value","Parameter","useContext","MethodReturnType","Caveats","Examples","Example","language","ExampleCommon","TypeParameters","Row","tr","NameColumn","td","DefaultValueColumn","DescriptionColumn","AvailableFromColumn","TypeParameter","defaultValue","Container","Banner","ToDo","div","NameColumnBase","TypeColumn","DataTypeColumn","RequiredColumnStyles","RequiredColumn","MemberContext","Error","createContext","Members","MethodMember","displayName","PropertyMember","link","ExposedTypeMember"],"mappings":"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","file":"component---src-pages-api-api-declaration-configure-tsx-9e5abb69330d80c10225.js","sourcesContent":["import * as React from 'react'\n\nexport const IncludeAvailableFromContext = React.createContext(false)\n","import IndexLayout from '../../../layouts'\nimport Page from '../../../components/Page'\nimport Container from '../../../components/Container'\nimport {\n  Example,\n  ExampleCommon,\n  Examples,\n  MethodReturnType,\n  Parameter,\n  Parameters,\n  Purpose,\n  Usage\n} from '../../../components/api-components'\nimport { Members, PropertyMember } from '../../../components/members-table'\nimport { Link } from 'gatsby'\nimport { ToDo } from '../../../components/ToDo'\n\nexport default function Configure() {\n  return (\n    <IndexLayout>\n      <Page>\n        <Container>\n          <h1>API Reference</h1>\n          <h2>class APIDeclaration</h2>\n          <h3>method configure</h3>\n        </Container>\n        <Purpose>Configures papupata for implementing or calling APIs.</Purpose>\n        <Usage>\n          This method must be called before any of the declared APIs are implemented or called. Failure to having done so will cause the\n          operation to fail.\n        </Usage>\n        <Parameters>\n          <Parameter name=\"config\" dataType={<a href=\"#config\">Config</a>}>\n            Configuration. See below. Instead of an actual config null can be provided to unconfigure papupata, which can be useful to reset\n            things for tests, for example.\n          </Parameter>\n        </Parameters>\n        <MethodReturnType>Nothing</MethodReturnType>\n        <h3 id=\"config\">config object</h3>\n        <Members includeRequiredColumn={true} context=\"APIDeclaration/configure\" includeAvailableFrom={true}>\n          <PropertyMember name=\"baseURL\" dataType=\"string\" required={'Conditionally *1'}>\n            Base URL used for all API invocations. This can be an empty string, in which case the calls on the browser are made relative to\n            the root of the current host.\n          </PropertyMember>\n          <PropertyMember name=\"makeRequest\" dataType=\"Function\" required={'Conditionally *2'}>\n            <p>This function is used internally for calling APIs. The function is as follows:</p>\n            <Parameters includeAvailableFrom={true}>\n              <Parameter name=\"method\" dataType=\"string\" />\n              <Parameter name=\"url\" dataType=\"string\" />\n              <Parameter name=\"query\" dataType=\"object\" />\n              <Parameter name=\"body\" dataType=\"object\" />\n              <Parameter name=\"params\" dataType=\"object\" availableFrom=\"1.2.0\">\n                Do note that params are already baked into the URL, there is no need for the function to do that.\n              </Parameter>\n              <Parameter name=\"route\" dataType=\"object/function\">\n                This is the object/function for route being invoked. For most uses this should be completely unnecessary, but this can be\n                used to allow for special behavior for particular routes. If options have been defined on the route, you can access them\n                from route.options.\n              </Parameter>\n              <Parameter name=\"requestOptions\" dataType=\"varies\">\n                If request options are used, then they are passed as this parameter.\n              </Parameter>\n            </Parameters>\n            <MethodReturnType>\n              Promise{'<any>'}; the promise, on a successful request, should resolve with the response type of the declared request.\n              Typically this means parsing the JSON data.\n            </MethodReturnType>\n            <p>\n              Two adapters are supplied with papupata, <Link to=\"/api/fetchAdapter\">one for fetch</Link> and{' '}\n              <Link to=\"/api/requestPromiseAdapter\">one for request-promise</Link>.\n            </p>\n          </PropertyMember>\n          <PropertyMember name=\"app\" dataType=\"Express application\" required={'Conditionally *3'}>\n            Express application, on which the declared APIs will be attached. If you make sure all the api declarations are invoked as the\n            routing is being set up then using the application is fine, but if there is a chance that routes will be added later then the\n            router is the better option.\n          </PropertyMember>\n          <PropertyMember name=\"router\" dataType=\"Express router\" required={'Conditionally *3'}>\n            Express router, on which the declared APIs will be attached. The main advantage of using a router over app is that APIs can be\n            added after the whole application has been configured, assuming no middleware is added to the router itself after the routes.\n          </PropertyMember>\n          <PropertyMember name=\"routerAt\" dataType=\"string\" availableFrom=\"1.4.0\">\n            <p>\n              It often makes sense to declare APIs on top a common base URL. In practice though you might have a router set up for a\n              specific path, for example to add common middleware.\n            </p>\n            <p>\n              By setting routerAt, you explicitly indicate that the provided router will be at the given path. All routes on an API\n              declaration with routerAt MUST have the routerAt as the start of their path.\n            </p>\n          </PropertyMember>\n          <PropertyMember name=\"inherentMiddleware\" dataType=\"Function[]\" availableFrom=\"1.5.0\">\n            An array of papupata middleware applied to all routes implemented in this API declaration, that is, middleware inherent to all\n            routes of this declaration. Only relevant for implementing, not for clients.\n          </PropertyMember>\n          <PropertyMember name=\"autoImplementAllAPIs\" dataType=\"boolean\" availableFrom=\"1.5.0\">\n            <p>\n              If set to true, all declared but unimplemented routes are automatically set up to return 501 not implemented as a response to\n              requests. If there is an app or router present at the time of declaration, this happens immediately, otherwise it happens as\n              soon as an app or router is configured.\n            </p>\n            <p>\n              This two major effect; for one, attempts to call unimplemented papupata APIs do not end up going to other route handlers or\n              middleware (although with <Link to=\"/api/skipHandlingRoute\">skipHandlingRoute</Link> this behavior can be restored as needed).\n              Also, routes are implemented in the order they were defined in, not in the order they were implemented in. Usually this does\n              not make a big difference, but if you have two handlers that can match the same path, say, /api/:var and /api/fixed, the only\n              way requests ever reached fixed was if it was implemented first. With this variable set to true, it has to be declared first,\n              but the implementation order is irrelevant.\n            </p>\n            <p>It is likely that from version 2.0 onwards the default value for this setting becomes true.</p>\n          </PropertyMember>\n        </Members>\n        <div>*1: For invoking APIs or calling the getURL method on them</div>\n        <div>*2: For invoking APIs</div>\n        <div>*3: For implementing APIs exactly one of either app or router must be provided</div>\n        <Examples>\n          <ExampleCommon>\n            For all examples below, it is assumed that the API declaration happens in ./api.ts such as this:\n            <Example label=\"api.ts\">\n              {`\n            import {APIDeclaration} from 'papupata'\n            export const api = new APIDeclaration()\n            `}\n            </Example>\n          </ExampleCommon>\n          <Example label=\"Simple server configuration\">\n            {`\n            import express from 'express'\n            import {api} from './api'\n            const app = express()\n            api.configure({\n              application: app\n            })\n          `}\n          </Example>\n          <ToDo>It needs to be verified that the example below works</ToDo>\n          <Example label=\"Server with router\">\n            {`\n            import express, {Router} from 'express'\n            import {api} from './api'\n            const app = express()\n            const router = new Router()\n            app.use(router)\n            api.configure({\n              router\n            })\n          `}\n          </Example>\n          <Example label=\"Configuring browser to use fetch from the local host\">\n            {`\n            import {api} from './api'\n            import {fetchAdapter} from 'papupata/dist/main/fetch-adapter'\n            api.configure({\n              baseURL: '',\n              makeRequest: fetchAdapter\n            })\n          `}\n          </Example>\n        </Examples>\n      </Page>\n    </IndexLayout>\n  )\n}\n","import styled from 'styled-components'\nimport React, { ReactNode } from 'react'\nimport { Code } from './Code'\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\n\nexport const Section = styled.section``\nexport const SectionHeading = styled.h4``\nexport const SubHeading = styled.h5``\nexport const ExampleCommonContainer = styled.section`\n  padding: 15px 30px;\n  background: lightyellow;\n`\n\nexport const Purpose: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Purpose</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\nexport type ValidVersions = '1.1.0' | '1.2.0' | '1.5.0' | '1.8.0'\nexport const AvailableFrom = ({ version }: { version: ValidVersions }) => {\n  return (\n    <Section>\n      <SectionHeading>Availability</SectionHeading>\n      This functionality is available from papupata version {version} onwards.\n    </Section>\n  )\n}\n\nexport const Usage: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Usage</SectionHeading>\n      {children}\n    </Section>\n  )\n}\nexport const Parameters: React.FC<{ includeAvailableFrom?: boolean; label?: string }> = ({ children, includeAvailableFrom, label }) => {\n  return (\n    <Section>\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n        <SectionHeading>Parameters{label && `: ${label}`}</SectionHeading>\n        {children ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Type</th>\n                <th>Description</th>\n                {includeAvailableFrom && <th>Introduced in</th>}\n              </tr>\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        ) : (\n          <p>There are no parameters.</p>\n        )}\n      </IncludeAvailableFromContext.Provider>\n    </Section>\n  )\n}\n\nexport const Parameter: React.FC<{ name: string; dataType: any; availableFrom?: ValidVersions }> = ({\n  children,\n  name,\n  dataType,\n  availableFrom = '1.0.0'\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <tr>\n      <td>{name}</td>\n      <td>{dataType}</td>\n      <td>{children}</td>\n      {includeAvailableFrom && <td>{availableFrom}</td>}\n    </tr>\n  )\n}\n\nexport const MethodReturnType: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Returns</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\nexport const Caveats: React.FC = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Caveats</SectionHeading>\n      {children}\n    </Section>\n  )\n}\nexport const Examples: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <Section>\n      <SectionHeading>Examples</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\nexport const Example: React.FC<{ label?: string; children: string }> = ({ children, label }) => {\n  return (\n    <>\n      {label && <SubHeading>{label}</SubHeading>}\n      <Code language={'typescript'}>{children}</Code>\n    </>\n  )\n}\n\nexport const ExampleCommon: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <ExampleCommonContainer>\n      <SubHeading>Common to examples below:</SubHeading>\n      {children}\n    </ExampleCommonContainer>\n  )\n}\n\nexport const TypeParameters: React.FC<{ children: ReactNode; includeAvailableFrom?: boolean }> = ({ children, includeAvailableFrom }) => {\n  return (\n    <Section>\n      <SectionHeading>Type parameeters</SectionHeading>\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n        <SectionHeading>Parameters</SectionHeading>\n        {children ? (\n          <table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Default value</th>\n                <th>Description</th>\n                {includeAvailableFrom ? <th>Introduced in</th> : ''}\n              </tr>\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        ) : (\n          <p>There are no parameters.</p>\n        )}\n      </IncludeAvailableFromContext.Provider>\n    </Section>\n  )\n}\n\nconst Row = styled.tr``\nconst NameColumn = styled.td``\nconst DefaultValueColumn = styled.td``\nconst DescriptionColumn = styled.td``\nconst AvailableFromColumn = styled.td``\n\nexport const TypeParameter: React.FC<{ name: string; defaultValue?: string; availableFrom?: string }> = ({\n  children,\n  name,\n  defaultValue,\n  availableFrom = 'none'\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <Row>\n      <NameColumn>{name}</NameColumn>\n      <DefaultValueColumn>{defaultValue}</DefaultValueColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Banner } from './Banner'\n\nconst Container = styled(Banner)`\n  border-color: yellowgreen;\n  background-color: #ffffa7;\n  outline-color: #ffffa7;\n  margin: 20px;\n`\n\nexport const ToDo: React.FC = ({ children }) => {\n  return <Container>{children || 'This section needs more work.'}</Container>\n}\n","import styled from 'styled-components'\n\nexport const Banner = styled.div`\n  border: 2px dotted transparent;\n  padding: 10px;\n  outline: 5px solid transparent;\n`\n","import { Section, SectionHeading } from './api-components'\nimport React, { createContext, ReactNode, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\n\nconst Row = styled.tr``\nconst NameColumnBase = styled.td``\nconst TypeColumn = styled.td``\nconst DataTypeColumn = styled.td``\nconst DescriptionColumn = styled.td``\nconst RequiredColumnStyles = styled.td``\nconst AvailableFromColumn = styled.td``\n\nfunction RequiredColumn({ children }: { children: ReactNode }) {\n  const { includeRequiredColumn } = useContext(MemberContext)\n  if (!includeRequiredColumn && children) throw new Error('Being asked to show required cell, yet it does not exist')\n  return includeRequiredColumn ? <RequiredColumnStyles>{children}</RequiredColumnStyles> : null\n}\n\nconst MemberContext = createContext({ context: '', includeRequiredColumn: false })\n\nconst NameColumn: React.FC<{ name: string }> = ({ name, children }) => {\n  const { context } = useContext(MemberContext)\n  return (\n    <NameColumnBase>\n      <Link to={`/api/${context}/${name}`}>{children || name}</Link>\n    </NameColumnBase>\n  )\n}\n\nexport const Members: React.FC<{ context: string; includeRequiredColumn?: boolean; includeAvailableFrom?: boolean }> = ({\n  children,\n  context,\n  includeRequiredColumn,\n  includeAvailableFrom\n}) => {\n  return (\n    <Section>\n      <MemberContext.Provider value={{ context, includeRequiredColumn: !!includeRequiredColumn }}>\n        <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\n          <SectionHeading>Members</SectionHeading>\n          <table>\n            <thead>\n              <th>Name</th>\n              <th>Type</th>\n              <th>Data type/return type</th>\n              <th>Description</th>\n              {includeRequiredColumn && <th>Required</th>}\n              {includeAvailableFrom && <th>Introduced in</th>}\n            </thead>\n            <tbody>{children}</tbody>\n          </table>\n        </IncludeAvailableFromContext.Provider>\n      </MemberContext.Provider>\n    </Section>\n  )\n}\nexport const MethodMember: React.FC<{ name: string; dataType: any; required?: any; displayName?: any; availableFrom?: string }> = ({\n  children,\n  name,\n  dataType,\n  required,\n  displayName,\n  availableFrom\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n  return (\n    <Row>\n      <NameColumn name={name}>{displayName}</NameColumn>\n      <TypeColumn>method</TypeColumn>\n      <DataTypeColumn>{dataType}</DataTypeColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n\nexport const PropertyMember: React.FC<{ name: string; dataType: any; required?: any; availableFrom?: string; link?: boolean }> = ({\n  children,\n  name,\n  dataType,\n  required,\n  availableFrom,\n  link\n}) => {\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\n\n  return (\n    <Row>\n      {link ? <NameColumn name={name}>{name}</NameColumn> : <NameColumnBase>{name}</NameColumnBase>}\n      <TypeColumn>property</TypeColumn>\n      <DataTypeColumn>{dataType}</DataTypeColumn>\n      <DescriptionColumn>{children}</DescriptionColumn>\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\n    </Row>\n  )\n}\n\nexport const ExposedTypeMember: React.FC<{ name: string }> = ({ children, name }) => {\n  return (\n    <Row>\n      <NameColumnBase>{name}</NameColumnBase>\n      <TypeColumn>property</TypeColumn>\n      <DataTypeColumn>n/a</DataTypeColumn>\n      <DescriptionColumn>{children}. Type type itself must be accessed using the typeof operator.</DescriptionColumn>\n    </Row>\n  )\n}\n"],"sourceRoot":""}