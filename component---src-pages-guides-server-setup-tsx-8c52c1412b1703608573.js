(self.webpackChunkpapupata_docs=self.webpackChunkpapupata_docs||[]).push([[3974],{1040:function(e,t,n){"use strict";n.d(t,{P:function(){return a}});var a=n(7294).createContext(!1)},2275:function(e,t,n){"use strict";n.d(t,{Z:function(){return d}});var a,i,l=n(5761),r=n(7294),o=n(3583),s=n(3431),u=o.ZP.div(a||(a=(0,l.Z)(["\n  border-left: 4px solid #663399;\n  padding: 5px 0 5px 10px;\n"]))),p=o.ZP.div(i||(i=(0,l.Z)(["\n  display: inline-block;\n  margin-left: 10px;\n  font-size: 0.9em;\n"])));function d(e){var t=e.variants,n=e.isRecommendation,a=(0,r.useState)("2.x"),i=a[0],l=a[1],o=(0,r.useCallback)((function(e){l(e.target.value)}),[]);return(0,s.tZ)(u,null,(0,s.tZ)("select",{value:i,onChange:o},(0,s.tZ)("option",{value:"1.x"},"Papupata 1.x"),(0,s.tZ)("option",{value:"2.x"},"Papupata 2.x")),n&&(0,s.tZ)(p,null,"Older styles are still supported in later versions, just not preferred."),Object.keys(t).filter((function(e){return function(e,t){return"*"===t||t===e}(i,e)})).map((function(e){return(0,s.tZ)("div",{key:e},t[e])})))}},1724:function(e,t,n){"use strict";n.d(t,{$0:function(){return v},OT:function(){return P},ag:function(){return b},cY:function(){return y},l1:function(){return A},aE:function(){return x},d2:function(){return k},pR:function(){return C},by:function(){return R},yV:function(){return T},en:function(){return U},iT:function(){return M},Vo:function(){return F},lS:function(){return S}});var a,i,l,r,o,s,u,p,d,c=n(5761),h=n(3583),m=n(7294),Z=n(1808),f=n(1040),g=n(3431),v=h.ZP.section(a||(a=(0,c.Z)([""]))),P=h.ZP.h4(i||(i=(0,c.Z)([""]))),w=h.ZP.h5(l||(l=(0,c.Z)([""]))),I=h.ZP.section(r||(r=(0,c.Z)(["\n  padding: 15px 30px;\n  background: lightyellow;\n"]))),b=function(e){var t=e.children;return(0,g.tZ)(v,null,(0,g.tZ)(P,null,"Purpose"),t)},y=function(e){var t=e.version;return(0,g.tZ)(v,null,(0,g.tZ)(P,null,"Availability"),"This functionality is available from papupata version ",t," onwards.")},A=function(e){var t=e.children;return(0,g.tZ)(v,null,(0,g.tZ)(P,null,"Usage"),t)},x=function(e){var t=e.children,n=e.includeAvailableFrom,a=e.label;return(0,g.tZ)(v,null,(0,g.tZ)(f.P.Provider,{value:!!n},(0,g.tZ)(P,null,"Parameters",a&&": "+a),t?(0,g.tZ)("table",null,(0,g.tZ)("thead",null,(0,g.tZ)("tr",null,(0,g.tZ)("th",null,"Name"),(0,g.tZ)("th",null,"Type"),(0,g.tZ)("th",null,"Description"),n&&(0,g.tZ)("th",null,"Introduced in"))),(0,g.tZ)("tbody",null,t)):(0,g.tZ)("p",null,"There are no parameters.")))},k=function(e){var t=e.children,n=e.name,a=e.dataType,i=e.availableFrom,l=void 0===i?"1.0.0":i,r=m.useContext(f.P);return(0,g.tZ)("tr",null,(0,g.tZ)("td",null,n),(0,g.tZ)("td",null,a),(0,g.tZ)("td",null,t),r&&(0,g.tZ)("td",null,l))},C=function(e){var t=e.children;return(0,g.tZ)(v,null,(0,g.tZ)(P,null,"Returns"),t)},R=function(e){var t=e.children;return(0,g.tZ)(v,null,(0,g.tZ)(P,null,"Caveats"),t)},T=function(e){var t=e.children;return(0,g.tZ)(v,null,(0,g.tZ)(P,null,"Examples"),t)},U=function(e){var t=e.children,n=e.label;return(0,g.tZ)(m.Fragment,null,n&&(0,g.tZ)(w,null,n),(0,g.tZ)(Z.E,{language:"typescript"},t))},M=function(e){var t=e.children;return(0,g.tZ)(I,null,(0,g.tZ)(w,null,"Common to examples below:"),t)},F=function(e){var t=e.children,n=e.includeAvailableFrom;return(0,g.tZ)(v,null,(0,g.tZ)(P,null,"Type parameeters"),(0,g.tZ)(f.P.Provider,{value:!!n},(0,g.tZ)(P,null,"Parameters"),t?(0,g.tZ)("table",null,(0,g.tZ)("thead",null,(0,g.tZ)("tr",null,(0,g.tZ)("th",null,"Name"),(0,g.tZ)("th",null,"Default value"),(0,g.tZ)("th",null,"Description"),n?(0,g.tZ)("th",null,"Introduced in"):"")),(0,g.tZ)("tbody",null,t)):(0,g.tZ)("p",null,"There are no parameters.")))},q=h.ZP.tr(o||(o=(0,c.Z)([""]))),O=h.ZP.td(s||(s=(0,c.Z)([""]))),_=h.ZP.td(u||(u=(0,c.Z)([""]))),D=h.ZP.td(p||(p=(0,c.Z)([""]))),G=h.ZP.td(d||(d=(0,c.Z)([""]))),S=function(e){var t=e.children,n=e.name,a=e.defaultValue,i=e.availableFrom,l=void 0===i?"none":i,r=m.useContext(f.P);return(0,g.tZ)(q,null,(0,g.tZ)(O,null,n),(0,g.tZ)(_,null,a),(0,g.tZ)(D,null,t),r?(0,g.tZ)(G,null,l):"")}},5361:function(e,t,n){"use strict";n.d(t,{g2:function(){return p},eC:function(){return h},If:function(){return m}});var a,i,l,r=n(5761),o=(n(7294),n(1724)),s=n(3583),u=n(3431);function p(e){var t=e.children;return(0,u.tZ)(o.$0,null,(0,u.tZ)(o.OT,null,"Overview"),t)}var d=s.ZP.h4(a||(a=(0,r.Z)([""]))),c=s.ZP.h5(i||(i=(0,r.Z)(["\n  font-size: 1.1em;\n"])));function h(e){var t=e.content;return(0,u.tZ)("div",null,(0,u.tZ)(o.$0,null,(0,u.tZ)(o.OT,null,"Table of contents"),(0,u.tZ)("ul",null,t.map((function(e){return(0,u.tZ)("li",{style:{marginLeft:18*(e.level||0)},key:e.anchor},(0,u.tZ)("a",{href:"#"+e.anchor},e.heading))})))),t.map((function(e){var t=e.level?c:d;return(0,u.tZ)(o.$0,{id:e.anchor,key:e.anchor},(0,u.tZ)(t,null,e.heading),e.content)})))}var m=s.ZP.span(l||(l=(0,r.Z)(["\n  font-family: 'Consolas', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\n"])))},9056:function(e,t,n){"use strict";n.r(t);n(1879);var a=n(7294),i=n(7614),l=n(832),r=n(7100),o=n(5361),s=n(1724),u=n(5444),p=n(2275),d=n(3431);t.default=function(){return(0,d.tZ)(r.Z,null,(0,d.tZ)(i.Z,null,(0,d.tZ)(l.Z,null,(0,d.tZ)("h1",null,"Guide: setting up papupata for servers"),(0,d.tZ)(o.g2,null,"In order to start implementing APIs on the server you need to configure papupata to let it know about its environment. This guide covers the most common cases and gives pointer for less common ones."),(0,d.tZ)(o.eC,{content:[{heading:"Prerequisites",anchor:"prerequisites",content:(0,d.tZ)(a.Fragment,null,(0,d.tZ)("p",null,"Before starting this guide, should know a little bit about API declarations. See"," ",(0,d.tZ)(u.rU,{to:"/guides/declaring"},"Declaring APIs")," for more details."))},{heading:"The Basics",anchor:"basics",content:(0,d.tZ)(a.Fragment,null,(0,d.tZ)("p",null,"The one thing that is absolutely essential for implementing APIs, is providing papupata with either an express application or router, which it will declare its routes on."),(0,d.tZ)("p",null,"The configuration itself takes place using the ",(0,d.tZ)(o.If,null,"configure")," method of an API declaration."),(0,d.tZ)(s.en,null,"\n                    import express, {Router} from 'express'\n                    const app = express()\n                    const API = new APIDeclaration()\n                    API.configure({\n                      app\n                    })\n                  "),(0,d.tZ)(s.en,null,"\n                    const router = Router()\n                    app.use(router)\n                    API.configure({\n                      router\n                    })\n                  "))},{heading:"Automatic route implementation",anchor:"automatic",content:(0,d.tZ)(a.Fragment,null,(0,d.tZ)(p.Z,{isRecommendation:!0,variants:{"1.x":(0,d.tZ)(s.en,null,"\n                            API.configure({\n                              ...API.getConfig(),\n                              autoImplementAllAPIs: true\n                            })"),"2.x":(0,d.tZ)("p",null,"There is not configuration as this is enabled by default.")}}),(0,d.tZ)("p",null,"If you are going to implement all, or at least the vast majority of the APIs that have been declared using papupata with papupata, it makes sense to have papupata automatically set up all routes to return 501 Not Implemented until the routes are actually implemented."),(0,d.tZ)("p",null,"This is the default in papupata 2.x and can be turned off by explicitly setting the option to false."),(0,d.tZ)(s.en,null,"\n                    API.updateConfig({\n                      autoImplementAllAPIs: false\n                    })"),(0,d.tZ)("p",null,"Having the setting enabled it obvious what is wrong if you try to invoke an API that lacks implementation. There is a more important effect to this as well, as it means that routes are implemented in the order they were declared in, rather than the order they are implemented in. Usually this does not make a difference, but sometimes the routing can be ambiguous, with the order being the deciding factor. Consider this example:")," ",(0,d.tZ)(p.Z,{isRecommendation:!0,variants:{"1.x":(0,d.tZ)(s.en,null,"\n                          const api1 = API.declareGetAPI('/entries/all').response<any>()\n                          const api2 = API.declareGetAPI('/entries/:id').params(['id'] as const).response<any>()\n                        "),"2.x":(0,d.tZ)(s.en,null,"\n                          const api1 = API.declareGetAPI('/entries/all').response<any>()\n                          const api2 = API.declareGetAPI('/entries/:id').params({id: String}}).response<any>()\n                        ")}}),(0,d.tZ)("p",null,"It's quite obvious reading it that the intent is that /entries/all goes to api1, and, say, /entries/123 goes to api2. There is however nothing that inherently says that /entries/all shouldn't be handled by api2. Unless the"," ",(0,d.tZ)(o.If,null,"autoImplementAllAPIs")," setting is set to true, then you'd have to make sure that implementing api1 takes place before api2 is implemented. With the setting set to true though, it is enough for api1 to be declared before api2, as is the case in the example."),(0,d.tZ)("p",null,"With this setting enabled it is still possible for individual routes to fall back to regular express routing, allowing the implementation to be done in other ways. This is done by having the implementation or a middleware leading to it return ",(0,d.tZ)(o.If,null,"papupata.skipHandlingRoute")),(0,d.tZ)(s.en,null,"\n                    import {skipHandlingRoute} from 'papupata'\n                    api1.implement(() => skipHandlingRoute)\n                  "),(0,d.tZ)("p",null,"Papupata 2.x also allows you to declare your desire not to have a route be implemented using papupata in the declarations itself."),(0,d.tZ)(s.en,null,"\n                    const api3 = API.declareGetAPI('/another', {}, { disableAutoImplement: true})\n                  "))},{heading:"Base URL",anchor:"baseURL",content:(0,d.tZ)(a.Fragment,null,(0,d.tZ)(p.Z,{isRecommendation:!0,variants:{"1.x":(0,d.tZ)(s.en,null,"\n                            API.configure({\n                              ...API.getConfig(),\n                              baseURL: 'https://www.example.com'\n                            })"),"2.x":(0,d.tZ)(s.en,null,"\n                            API.updateConfig({\n                              baseURL: 'https://www.example.com'\n                            })")}}),(0,d.tZ)("p",null,"Setting up the base url is essential for clients, but it can be useful for servers as well. With a base url set up, you can call the ",(0,d.tZ)(o.If,null,"getURL")," method on the declarations, which can be useful for redirections, callback urls etc."),(0,d.tZ)("p",null,"Just for the purpose of implementing routes it is unnecessary."))},{heading:"Non-root routers",anchor:"nonroot",content:(0,d.tZ)(a.Fragment,null,(0,d.tZ)(p.Z,{isRecommendation:!0,variants:{"1.x":(0,d.tZ)(s.en,null,"\n                          API.configure({\n                            ...API.getConfig(),\n                            routerAt: '/api'\n                          })\n                          "),"2.x":(0,d.tZ)(s.en,null,"\n                            API.updateConfig({\n                              routerAt: '/api'\n                            })\n                            ")}}),(0,d.tZ)("p",null,"You might find it convenient to set up papupata implementation on an express router that is not at the root of the server. As a common example, you might want to set up the router to be under /api so that its middleware is only applied to API calls."),(0,d.tZ)("p",null,"This is a supported scenario -- all you have to do is add the ",(0,d.tZ)(o.If,null,"routerAt")," option to the configuration to tell papupata where the router is mounted at."),(0,d.tZ)("p",null,"All of the APIs in the declaration to be within the router path -- you cannot have routes at paths where they cannot be implemented"),(0,d.tZ)(s.en,null,"\n                  import express, {Router} from 'express'\n                  import {APIDeclaration} from 'papupata'\n\n                  const API = new APIDeclaration()\n                  const getOne = API.declareGetAPI('/api/getOne').response<any>()\n                  const app = express()\n                  const router = Router()\n                  router.use(authenticationMiddleware)\n                  app.use('/api', router)\n\n                  API.configure({\n                    router,\n                    routerAt: '/api'\n                  })\n                  "))},{heading:"Middleware",anchor:"middleware",content:(0,d.tZ)(a.Fragment,null,(0,d.tZ)(p.Z,{isRecommendation:!0,variants:{"1.x":(0,d.tZ)(s.en,null,"\n                          API.configure({\n                            ...API.getConfig(),\n                            inherentMiddleware: [myMiddleware1, myMiddleware2]\n                          })\n                          "),"2.x":(0,d.tZ)(s.en,null,"\n                          API.updateConfig({\n                            inherentMiddleware: [myMiddleware1, myMiddleware2]\n                          })\n                          ")}}),(0,d.tZ)("p",null,"Papupata supports middleware, which can be used on the server to process both requests and responses. For more details see ",(0,d.tZ)(u.rU,{to:"/guides/server/middleware"},"the middleware guide"),"."),(0,d.tZ)("p",null,"Papupata comes with one built-in middleware that changes how undefined responses are handled. Currently an implementation returning undefined is taken as an indication that it takes full responsibility for handling the response."),(0,d.tZ)("p",null,"In practice though, a more likely scenario is that the API has nothing to return, and having returning undefined result in HTTP 204 (no content) would be better. And that is exactly what the middleware does."),(0,d.tZ)("p",null,"Here's an overview of what it actually does:"),(0,d.tZ)("ul",null,(0,d.tZ)("li",null,"If headers have already been sent, it does nothing (this still lets you have APIs that take care of the whole response on their own)"),(0,d.tZ)("li",null,"If status was not explicitly set, it sets it to 204"),(0,d.tZ)("li",null,"It sends a response to the client with no data")),(0,d.tZ)(p.Z,{isRecommendation:!0,variants:{"1.x":(0,d.tZ)(s.en,null,"\n                            import {handleUndefinedResponsesMiddleware} from 'papupata'\n                            API.configure({\n                              ...API.getConfig(),\n                              inherentMiddleware: [handleUndefinedResponsesMiddleware]\n                            })\n\n                            api1.implement(() => {}) // results in a 204 response\n                            api2.implement((_req, res) => {res.redirect('/')}) // the redirection works as expected\n                            api3.implement((_req, res) => {res.status(400)}) // status 400, response is sent with no data\n                            api4.implement((_req, res) => {res.send('done')}) // nothing special happens\n                          "),"2.x":(0,d.tZ)(s.en,null,"\n                            import {handleUndefinedResponsesMiddleware} from 'papupata'\n                            API.updateConfig({\n                              inherentMiddleware: [handleUndefinedResponsesMiddleware]\n                            })\n\n                            api1.implement(() => {}) // results in a 204 response\n                            api2.implement((_req, res) => {res.redirect('/')}) // the redirection works as expected\n                            api3.implement((_req, res) => {res.status(400)}) // status 400, response is sent with no data\n                            api4.implement((_req, res) => {res.send('done')}) // nothing special happens\n                          ")}}))},{heading:"Conclusion",anchor:"conclusion",content:(0,d.tZ)(a.Fragment,null,(0,d.tZ)("p",null,"Now that papupata is set up to respond to requests, the next step should be actually implementing the APIs."),(0,d.tZ)("p",null,"See ",(0,d.tZ)(u.rU,{to:"/guides/server/implementing"},"implementing APIs")," for how to do exactly that."),(0,d.tZ)("p",null,"If you are concerned with how papupata interacts with your existing express APIs and middleware, you could also take a look at ",(0,d.tZ)(u.rU,{to:"/guides/server/interactingWithExpress"},"Interacting with express"),"."))}]}))))}},1879:function(e,t,n){"use strict";n(7614),n(832),n(7100)}}]);
//# sourceMappingURL=component---src-pages-guides-server-setup-tsx-8c52c1412b1703608573.js.map