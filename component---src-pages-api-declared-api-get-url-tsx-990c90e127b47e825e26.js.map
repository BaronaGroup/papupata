{"version":3,"sources":["webpack:///./src/components/IncludeAvailableFromContext.tsx","webpack:///./src/components/api-components.tsx","webpack:///./src/pages/api/DeclaredAPI/getURL.tsx"],"names":["IncludeAvailableFromContext","React","Section","styled","section","SectionHeading","h4","SubHeading","h5","ExampleCommonContainer","Purpose","children","AvailableFrom","version","Usage","Parameters","includeAvailableFrom","label","Provider","value","Parameter","name","dataType","availableFrom","useContext","MethodReturnType","Caveats","Examples","Example","language","ExampleCommon","TypeParameters","Row","tr","NameColumn","td","DefaultValueColumn","DescriptionColumn","AvailableFromColumn","TypeParameter","defaultValue","GetURL"],"mappings":"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","file":"component---src-pages-api-declared-api-get-url-tsx-990c90e127b47e825e26.js","sourcesContent":["import * as React from 'react'\n\nexport const IncludeAvailableFromContext = React.createContext(false)\n","import styled from 'styled-components'\r\nimport React, { ReactNode } from 'react'\r\nimport { Code } from './Code'\r\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\r\n\r\nexport const Section = styled.section``\r\nexport const SectionHeading = styled.h4``\r\nexport const SubHeading = styled.h5``\r\nexport const ExampleCommonContainer = styled.section`\r\n  padding: 15px 30px;\r\n  background: lightyellow;\r\n`\r\n\r\nexport const Purpose: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Purpose</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport type ValidVersions = '1.1.0' | '1.2.0' | '1.5.0'\r\nexport const AvailableFrom = ({ version }: { version: ValidVersions }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Availability</SectionHeading>\r\n      This functionality is available from papupata version {version} onwards.\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Usage: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Usage</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\nexport const Parameters: React.FC<{ includeAvailableFrom?: boolean; label?: string }> = ({ children, includeAvailableFrom, label }) => {\r\n  return (\r\n    <Section>\r\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\r\n        <SectionHeading>Parameters{label && `: ${label}`}</SectionHeading>\r\n        {children ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Description</th>\r\n                {includeAvailableFrom && <th>Introduced in</th>}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{children}</tbody>\r\n          </table>\r\n        ) : (\r\n          <p>There are no parameters.</p>\r\n        )}\r\n      </IncludeAvailableFromContext.Provider>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Parameter: React.FC<{ name: string; dataType: any; availableFrom?: ValidVersions }> = ({\r\n  children,\r\n  name,\r\n  dataType,\r\n  availableFrom = '1.0.0'\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n  return (\r\n    <tr>\r\n      <td>{name}</td>\r\n      <td>{dataType}</td>\r\n      <td>{children}</td>\r\n      {includeAvailableFrom && <td>{availableFrom}</td>}\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport const MethodReturnType: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Returns</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Caveats: React.FC = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Caveats</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\nexport const Examples: React.FC<{ children: any }> = ({ children }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Examples</SectionHeading>\r\n      {children}\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport const Example: React.FC<{ label?: string; children: string }> = ({ children, label }) => {\r\n  return (\r\n    <>\r\n      {label && <SubHeading>{label}</SubHeading>}\r\n      <Code language={'typescript'}>{children}</Code>\r\n    </>\r\n  )\r\n}\r\n\r\nexport const ExampleCommon: React.FC<{ children: any }> = ({ children }) => {\r\n  return (\r\n    <ExampleCommonContainer>\r\n      <SubHeading>Common to examples below:</SubHeading>\r\n      {children}\r\n    </ExampleCommonContainer>\r\n  )\r\n}\r\n\r\nexport const TypeParameters: React.FC<{ children: ReactNode; includeAvailableFrom?: boolean }> = ({ children, includeAvailableFrom }) => {\r\n  return (\r\n    <Section>\r\n      <SectionHeading>Type parameeters</SectionHeading>\r\n      <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\r\n        <SectionHeading>Parameters</SectionHeading>\r\n        {children ? (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Default value</th>\r\n                <th>Description</th>\r\n                {includeAvailableFrom ? <th>Introduced in</th> : ''}\r\n              </tr>\r\n            </thead>\r\n            <tbody>{children}</tbody>\r\n          </table>\r\n        ) : (\r\n          <p>There are no parameters.</p>\r\n        )}\r\n      </IncludeAvailableFromContext.Provider>\r\n    </Section>\r\n  )\r\n}\r\n\r\nconst Row = styled.tr``\r\nconst NameColumn = styled.td``\r\nconst DefaultValueColumn = styled.td``\r\nconst DescriptionColumn = styled.td``\r\nconst AvailableFromColumn = styled.td``\r\n\r\nexport const TypeParameter: React.FC<{ name: string; defaultValue?: string; availableFrom?: string }> = ({\r\n  children,\r\n  name,\r\n  defaultValue,\r\n  availableFrom = 'none'\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n  return (\r\n    <Row>\r\n      <NameColumn>{name}</NameColumn>\r\n      <DefaultValueColumn>{defaultValue}</DefaultValueColumn>\r\n      <DescriptionColumn>{children}</DescriptionColumn>\r\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\r\n    </Row>\r\n  )\r\n}\r\n","import IndexLayout from '../../../layouts'\r\nimport Page from '../../../components/Page'\r\nimport Container from '../../../components/Container'\r\nimport { Purpose, Usage, Parameter, Parameters, MethodReturnType, Examples, Example } from '../../../components/api-components'\r\n\r\nexport default function GetURL() {\r\n  return (\r\n    <IndexLayout>\r\n      <Page>\r\n        <Container>\r\n          <h1>API Reference</h1>\r\n          <h2>class DeclaredAPI</h2>\r\n          <h3>method getURL</h3>\r\n        </Container>\r\n        <Purpose>Get the URL for the API</Purpose>\r\n        <Usage>\r\n          <p>This function requires base URL to be configured in order to work.</p>\r\n\r\n          <p>\r\n            As path parameters are considered to be a part of the URL, their values must be provided to the getAPI call and they are\r\n            injected in to the URL.\r\n          </p>\r\n          <p>Query parameters are optionally included, too.</p>\r\n        </Usage>\r\n        <Parameters>\r\n          <Parameter name=\"pathAndQueryParams\" dataType=\"Object\">\r\n            Path parameters value for the API, or combination of path and query parameter values.\r\n          </Parameter>\r\n        </Parameters>\r\n        <MethodReturnType>string</MethodReturnType>\r\n        <Examples>\r\n          <Example label=\"Path only\">\r\n            {`\r\n            import { APIDeclaration } from 'papupata'\r\n            const api = new APIDeclaration()\r\n            api.configure({baseURL: 'https://example.com'})\r\n            const myAPI = api.declarePostAPI('/do-stuff/:param')\r\n              .params(['param'] as const)\r\n              .response<string>()\r\n\r\n            const URL = myAPI.getURL({param: 'value'})\r\n            // URL is now https://example.com/do-stuff/value\r\n          `}\r\n          </Example>\r\n          <Example label=\"Path and query (query omitted)\">\r\n            {`\r\n            import { APIDeclaration } from 'papupata'\r\n            const api = new APIDeclaration()\r\n            api.configure({baseURL: 'https://example.com'})\r\n            const myAPI = api.declarePostAPI('/do-stuff/:param')\r\n              .params(['param'] as const)\r\n              .query(['qval'] as const)\r\n              .response<string>()\r\n\r\n            const URL = myAPI.getURL({param: 'value'})\r\n            // URL is now https://example.com/do-stuff/value\r\n          `}\r\n          </Example>{' '}\r\n          <Example label=\"Path and query (query present)\">\r\n            {`\r\n            import { APIDeclaration } from 'papupata'\r\n            const api = new APIDeclaration()\r\n            api.configure({baseURL: 'https://example.com'})\r\n            const myAPI = api.declarePostAPI('/do-stuff/:param')\r\n              .params(['param'] as const)\r\n              .query(['qval'] as const)\r\n              .response<string>()\r\n\r\n            const URL = myAPI.getURL({param: 'value', qval: 'hello'})\r\n            // URL is now https://example.com/do-stuff/value?qval=hello\r\n          `}\r\n          </Example>\r\n        </Examples>\r\n      </Page>\r\n    </IndexLayout>\r\n  )\r\n}\r\n"],"sourceRoot":""}