{"version":3,"sources":["webpack:///./src/pages/api/DeclaredAPI/apiUrlParameters.tsx","webpack:///./src/components/members-table.tsx","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["ApiUrlParameters","version","context","includeRequiredColumn","dataType","name","required","Row","styled","tr","NameColumnBase","td","TypeColumn","DataTypeColumn","DescriptionColumn","RequiredColumnStyles","AvailableFromColumn","RequiredColumn","children","useContext","MemberContext","Error","createContext","NameColumn","to","Members","includeAvailableFrom","Provider","value","MethodMember","displayName","availableFrom","React","IncludeAvailableFromContext","PropertyMember","link","ExposedTypeMember","createHTML","url","this"],"mappings":"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","file":"component---src-pages-api-declared-api-api-url-parameters-tsx-ead2f5a66281ad917a00.js","sourcesContent":["import IndexLayout from '../../../layouts'\r\nimport Page from '../../../components/Page'\r\nimport Container from '../../../components/Container'\r\nimport { Purpose, Usage, Examples, Example, AvailableFrom } from '../../../components/api-components'\r\nimport { Members, PropertyMember } from '../../../components/members-table'\r\n\r\nexport default function ApiUrlParameters() {\r\n  return (\r\n    <IndexLayout>\r\n      <Page>\r\n        <Container>\r\n          <h1>API Reference</h1>\r\n          <h2>class DeclaredAPI</h2>\r\n          <h3>property apiUrlParameters</h3>\r\n        </Container>\r\n        <AvailableFrom version=\"1.5.0\" />\r\n        <Purpose>Exposes the path and query parameters of the api</Purpose>\r\n        <Members context=\"DeclaredAPI/apiUrlParameters\" includeRequiredColumn={true}>\r\n          <PropertyMember dataType={'string[]'} name=\"params\" required=\"false\">\r\n            Path parameters of the API\r\n          </PropertyMember>\r\n          <PropertyMember dataType={'string[]'} name=\"query\" required=\"false\">\r\n            Regular query parameters of the API\r\n          </PropertyMember>\r\n          <PropertyMember dataType={'string[]'} name=\"optionalQuery\" required=\"false\">\r\n            Optional query parameters of the API\r\n          </PropertyMember>\r\n          <PropertyMember dataType={'string[]'} name=\"boolQuery\" required=\"false\">\r\n            Boolean query parameters of the API\r\n          </PropertyMember>\r\n        </Members>\r\n      </Page>\r\n    </IndexLayout>\r\n  )\r\n}\r\n","import { Section, SectionHeading } from './api-components'\r\nimport React, { createContext, ReactNode, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\r\n\r\nconst Row = styled.tr``\r\nconst NameColumnBase = styled.td``\r\nconst TypeColumn = styled.td``\r\nconst DataTypeColumn = styled.td``\r\nconst DescriptionColumn = styled.td``\r\nconst RequiredColumnStyles = styled.td``\r\nconst AvailableFromColumn = styled.td``\r\n\r\nfunction RequiredColumn({ children }: { children: ReactNode }) {\r\n  const { includeRequiredColumn } = useContext(MemberContext)\r\n  if (!includeRequiredColumn && children) throw new Error('Being asked to show required cell, yet it does not exist')\r\n  return includeRequiredColumn ? <RequiredColumnStyles>{children}</RequiredColumnStyles> : null\r\n}\r\n\r\nconst MemberContext = createContext({ context: '', includeRequiredColumn: false })\r\n\r\nconst NameColumn: React.FC<{ name: string }> = ({ name, children }) => {\r\n  const { context } = useContext(MemberContext)\r\n  return (\r\n    <NameColumnBase>\r\n      <Link to={`/api/${context}/${name}`}>{children || name}</Link>\r\n    </NameColumnBase>\r\n  )\r\n}\r\n\r\nexport const Members: React.FC<{ context: string; includeRequiredColumn?: boolean; includeAvailableFrom?: boolean }> = ({\r\n  children,\r\n  context,\r\n  includeRequiredColumn,\r\n  includeAvailableFrom\r\n}) => {\r\n  return (\r\n    <Section>\r\n      <MemberContext.Provider value={{ context, includeRequiredColumn: !!includeRequiredColumn }}>\r\n        <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\r\n          <SectionHeading>Members</SectionHeading>\r\n          <table>\r\n            <thead>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Data type/return type</th>\r\n              <th>Description</th>\r\n              {includeRequiredColumn && <th>Required</th>}\r\n              {includeAvailableFrom && <th>Introduced in</th>}\r\n            </thead>\r\n            <tbody>{children}</tbody>\r\n          </table>\r\n        </IncludeAvailableFromContext.Provider>\r\n      </MemberContext.Provider>\r\n    </Section>\r\n  )\r\n}\r\nexport const MethodMember: React.FC<{ name: string; dataType: any; required?: any; displayName?: any; availableFrom?: string }> = ({\r\n  children,\r\n  name,\r\n  dataType,\r\n  required,\r\n  displayName,\r\n  availableFrom\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n  return (\r\n    <Row>\r\n      <NameColumn name={name}>{displayName}</NameColumn>\r\n      <TypeColumn>method</TypeColumn>\r\n      <DataTypeColumn>{dataType}</DataTypeColumn>\r\n      <DescriptionColumn>{children}</DescriptionColumn>\r\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\r\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport const PropertyMember: React.FC<{ name: string; dataType: any; required?: any; availableFrom?: string; link?: boolean }> = ({\r\n  children,\r\n  name,\r\n  dataType,\r\n  required,\r\n  availableFrom,\r\n  link\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n\r\n  return (\r\n    <Row>\r\n      {link ? <NameColumn name={name}>{name}</NameColumn> : <NameColumnBase>{name}</NameColumnBase>}\r\n      <TypeColumn>property</TypeColumn>\r\n      <DataTypeColumn>{dataType}</DataTypeColumn>\r\n      <DescriptionColumn>{children}</DescriptionColumn>\r\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\r\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport const ExposedTypeMember: React.FC<{ name: string }> = ({ children, name }) => {\r\n  return (\r\n    <Row>\r\n      <NameColumnBase>{name}</NameColumnBase>\r\n      <TypeColumn>property</TypeColumn>\r\n      <DataTypeColumn>n/a</DataTypeColumn>\r\n      <DescriptionColumn>{children}. Type type itself must be accessed using the typeof operator.</DescriptionColumn>\r\n    </Row>\r\n  )\r\n}\r\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}