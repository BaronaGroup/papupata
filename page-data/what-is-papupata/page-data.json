{"componentChunkName":"component---src-templates-page-tsx","path":"/what-is-papupata/","result":{"data":{"site":{"siteMetadata":{"title":"Papupata Documentation","description":"Documentation for the typescript library papupata, for utilizing types for AJAX requests.","author":{"name":"Tapani Haka"}}},"markdownRemark":{"html":"<p>Papupata is a typescript library that allows for declaring, implementing and calling APIs in a type safe fashion.</p>\n<p>While it is at its most powerful when used for everything, you can pick the parts you need piecemeal as well. You can use it to\ndeclare an external API, isolating the type definitions to a single well defined place, allowing the rest of code base to\nuse the API in atype safe fashion. Or you could declare the API your application implements and get rid of the untyped params\nquery and body objects.</p>\n<p>When both the client and server utilize papupata declarations, you can be certain that the data sent from the client\nis going to match the data expected by the server, and that the server responds with what the client expects.</p>\n<p>Implementing is only directly supported with express at this time.</p>","excerpt":"Papupata is a typescript library that allows for declaring, implementing and calling APIs in a type safe fashion. While it is at its mostâ€¦","frontmatter":{"title":"What is papupata"}}},"pageContext":{"slug":"/what-is-papupata/"}},"staticQueryHashes":["1963140206","2219842477"]}