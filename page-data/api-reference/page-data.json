{"componentChunkName":"component---src-templates-page-tsx","path":"/api-reference/","result":{"data":{"site":{"siteMetadata":{"title":"Papupata Documentation","description":"Documentation for the typescript library papupata, for utilizing types for AJAX requests.","author":{"name":"Tapani Haka"}}},"markdownRemark":{"html":"<h2>Primary functionality</h2>\n<p>These exported entities can be accessed directly from the main papupata library.</p>\n<h3>APIDeclaration</h3>\n<p>This class is the where almost everything happens, it is used for declaring, implementing and calling APIs.</p>\n<p><a href=\"/papupata/api/APIDeclaration\">Reference</a></p>\n<p>Methods on the API declaration can be used to create <a href=\"/papupata/api/PartiallyDeclaredAPI\">PartiallyDeclaredAPI</a>s, which in turn become <a href=\"/papupata/api/DeclaredAPI\">DeclaredAPI</a>s</p>\n<h3>convertExpressMiddleware</h3>\n<p>This function converts express middleware to papupata middleware.</p>\n<p><a href=\"/papupata/api/convertExpressMiddleware\">Reference</a></p>\n<h3>skipHandlingRoute</h3>\n<p>This special value allows for having express continue routing.</p>\n<p><a href=\"/papupata/api/skipHandlingRoute\">Reference</a></p>\n<h3>handleUndefinedResponsesMiddleware</h3>\n<p>This middleware changes how undefined API responses values are handled.</p>\n<p><a href=\"/papupata/api/handleUndefinedResponsesMiddleware\">Reference</a></p>\n<h2>Secondary functionality</h2>\n<p>These exported entities are considered support functionality can be imported from their own files.</p>\n<p><a href=\"/papupata/api/requestPromiseAdapter\">Reference</a></p>\n<h3>fetchAdapter</h3>\n<p>This adapter allows you to call the APIs using global fetch as the means for doing so.</p>\n<p><a href=\"/papupata/api/fetchAdapter\">Reference</a></p>\n<h3>requestPromiseAdapter</h3>\n<p>This adapter allows you to call the APIs using global request promsie as the means for doing so.</p>\n<p><a href=\"/papupata/api/requestPromiseAdapter\">Reference</a></p>\n<h3>supertestAdapter</h3>\n<p>This adapter allows you to call the APIs using supertest</p>\n<p><a href=\"/papupata/api/requestPromiseAdapter\">Reference</a></p>\n<h3>supertestAdapter</h3>\n<p>This adapter allows you to call the APIs using supertest</p>\n<p><a href=\"/papupata/api/supertestAdapter\">Reference</a></p>\n<h3>supertestInvoker</h3>\n<p>This adapter allows you to call the APIs using supertest while giving you access to the supertest request for making assertions.</p>\n<p><a href=\"/papupata/api/supertestInvoker\">Reference</a></p>\n<h3>invokeImplementationAdapter</h3>\n<p>This adapter allows you to call the APIs without actually running an express server, primarily in tests.</p>\n<p><a href=\"/papupata/api/invokeImplementationAdapter\">Reference</a></p>\n<h3>testInvoker</h3>\n<p>This function allows you to call the APIs without actually running an express server, primarily in tests.</p>\n<p><a href=\"/papupata/api/testInvoker\">Reference</a></p>","excerpt":"Primary functionality These exported entities can be accessed directly from the main papupata library. APIDeclaration This class is theâ€¦","frontmatter":{"title":"API Reference"}}},"pageContext":{"slug":"/api-reference/"}},"staticQueryHashes":["1963140206","2219842477"]}