(self.webpackChunkpapupata_docs=self.webpackChunkpapupata_docs||[]).push([[1819],{1040:function(n,t,e){"use strict";e.d(t,{P:function(){return l}});var l=e(7294).createContext(!1)},1724:function(n,t,e){"use strict";e.d(t,{$0:function(){return P},OT:function(){return m},ag:function(){return I},cY:function(){return T},l1:function(){return g},aE:function(){return w},d2:function(){return x},pR:function(){return R},by:function(){return D},yV:function(){return S},en:function(){return C},iT:function(){return k},Vo:function(){return F},lS:function(){return U}});var l,r,u,a,o,i,Z,p,s,c=e(6848),d=e(366),f=e(7294),h=e(1808),v=e(1040),y=e(3431),P=d.ZP.section(l||(l=(0,c.Z)([""]))),m=d.ZP.h4(r||(r=(0,c.Z)([""]))),b=d.ZP.h5(u||(u=(0,c.Z)([""]))),A=d.ZP.section(a||(a=(0,c.Z)(["\n  padding: 15px 30px;\n  background: lightyellow;\n"]))),I=function(n){var t=n.children;return(0,y.tZ)(P,null,(0,y.tZ)(m,null,"Purpose"),t)},T=function(n){var t=n.version;return(0,y.tZ)(P,null,(0,y.tZ)(m,null,"Availability"),"This functionality is available from papupata version ",t," onwards.")},g=function(n){var t=n.children;return(0,y.tZ)(P,null,(0,y.tZ)(m,null,"Usage"),t)},w=function(n){var t=n.children,e=n.includeAvailableFrom,l=n.label;return(0,y.tZ)(P,null,(0,y.tZ)(v.P.Provider,{value:!!e},(0,y.tZ)(m,null,"Parameters",l&&": "+l),t?(0,y.tZ)("table",null,(0,y.tZ)("thead",null,(0,y.tZ)("tr",null,(0,y.tZ)("th",null,"Name"),(0,y.tZ)("th",null,"Type"),(0,y.tZ)("th",null,"Description"),e&&(0,y.tZ)("th",null,"Introduced in"))),(0,y.tZ)("tbody",null,t)):(0,y.tZ)("p",null,"There are no parameters.")))},x=function(n){var t=n.children,e=n.name,l=n.dataType,r=n.availableFrom,u=void 0===r?"1.0.0":r,a=f.useContext(v.P);return(0,y.tZ)("tr",null,(0,y.tZ)("td",null,e),(0,y.tZ)("td",null,l),(0,y.tZ)("td",null,t),a&&(0,y.tZ)("td",null,u))},R=function(n){var t=n.children;return(0,y.tZ)(P,null,(0,y.tZ)(m,null,"Returns"),t)},D=function(n){var t=n.children;return(0,y.tZ)(P,null,(0,y.tZ)(m,null,"Caveats"),t)},S=function(n){var t=n.children;return(0,y.tZ)(P,null,(0,y.tZ)(m,null,"Examples"),t)},C=function(n){var t=n.children,e=n.label;return(0,y.tZ)(f.Fragment,null,e&&(0,y.tZ)(b,null,e),(0,y.tZ)(h.E,{language:"typescript"},t))},k=function(n){var t=n.children;return(0,y.tZ)(A,null,(0,y.tZ)(b,null,"Common to examples below:"),t)},F=function(n){var t=n.children,e=n.includeAvailableFrom;return(0,y.tZ)(P,null,(0,y.tZ)(m,null,"Type parameeters"),(0,y.tZ)(v.P.Provider,{value:!!e},(0,y.tZ)(m,null,"Parameters"),t?(0,y.tZ)("table",null,(0,y.tZ)("thead",null,(0,y.tZ)("tr",null,(0,y.tZ)("th",null,"Name"),(0,y.tZ)("th",null,"Default value"),(0,y.tZ)("th",null,"Description"),e?(0,y.tZ)("th",null,"Introduced in"):"")),(0,y.tZ)("tbody",null,t)):(0,y.tZ)("p",null,"There are no parameters.")))},E=d.ZP.tr(o||(o=(0,c.Z)([""]))),V=d.ZP.td(i||(i=(0,c.Z)([""]))),N=d.ZP.td(Z||(Z=(0,c.Z)([""]))),_=d.ZP.td(p||(p=(0,c.Z)([""]))),O=d.ZP.td(s||(s=(0,c.Z)([""]))),U=function(n){var t=n.children,e=n.name,l=n.defaultValue,r=n.availableFrom,u=void 0===r?"none":r,a=f.useContext(v.P);return(0,y.tZ)(E,null,(0,y.tZ)(V,null,e),(0,y.tZ)(N,null,l),(0,y.tZ)(_,null,t),a?(0,y.tZ)(O,null,u):"")}},1869:function(n,t,e){"use strict";e.r(t),e.d(t,{default:function(){return i}});e(1879);var l=e(387),r=e(7614),u=e(832),a=e(1724),o=e(3431);function i(){return(0,o.tZ)(l.Z,null,(0,o.tZ)(r.Z,null,(0,o.tZ)(u.Z,null,(0,o.tZ)("h1",null,"API Reference"),(0,o.tZ)("h2",null,"class DeclaredAPI"),(0,o.tZ)("h3",null,"exposed type ServerResponseType")),(0,o.tZ)(a.ag,null,"Represents the type returned from the API implementation."),(0,o.tZ)(a.l1,null,(0,o.tZ)("p",null,"The exposed types are used with the typeof operator. See the example below for details."),(0,o.tZ)("p",null,"Although the types are presented as fields on the API, they have no runtime value.")),(0,o.tZ)(a.yV,null,(0,o.tZ)(a.en,{label:"Implicit, same type"},"\n            import { APIDeclaration } from 'papupata'\n            const api = new APIDeclaration()\n            const myAPI = api.declarePostAPI('/do-stuff')\n              .response<string>()\n\n            type ServerResponseType = typeof myAPI['ServerResponseType']\n            // ServerResponseType is now string\n          "),(0,o.tZ)(a.en,{label:"Explicit differing type"},"\n            import { APIDeclaration } from 'papupata'\n            const api = new APIDeclaration()\n            const myAPI = api.declarePostAPI('/do-stuff')\n              .response<string, Date>()\n\n            type ServerResponseType = typeof myAPI['ServerResponseType']\n            // ServerResponseType is now Date\n          "))))}}}]);
//# sourceMappingURL=component---src-pages-api-declared-api-server-response-type-tsx-85458029e2dadfd4f693.js.map