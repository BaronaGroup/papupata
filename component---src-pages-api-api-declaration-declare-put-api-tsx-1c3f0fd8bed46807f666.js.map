{"version":3,"sources":["webpack:///./src/pages/api/APIDeclaration/declarePutAPI.tsx","webpack:///./src/components/links.tsx","webpack:///./src/utils.ts","webpack:///./src/components/DeclareAPIPage.tsx"],"names":["declarePutAPI","method","IncompleteApiDeclarationLink","to","DeclaredAPILink","ucFirst","s","toUpperCase","substr","toLowerCase","DeclareAPIPage","name","dataType"],"mappings":"0FAAA,wEAGe,SAASA,IACtB,OAAO,YAAC,IAAD,CAAgBC,OAAO,U,iCCJhC,4FAGO,SAASC,IACd,OAAO,YAAC,IAAD,CAAMC,GAAG,iCAAT,4BAGF,SAASC,IACd,OAAO,YAAC,IAAD,CAAMD,GAAG,oBAAT,iB,iCCPF,SAASE,EAAQC,GACtB,OAAOA,EAAE,GAAGC,cAAgBD,EAAEE,OAAO,GAAGC,cAD1C,mC,iCCDA,wGAQe,SAASC,EAAT,GAAwD,IAA9BT,EAA8B,EAA9BA,OACvC,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,uCACA,8CACA,uCAAmBI,YAAQJ,GAA3B,QAEF,YAAC,IAAD,iDAAmDA,EAAOM,cAA1D,WACA,YAAC,IAAD,0CACA,YAAC,IAAD,KACE,YAAC,IAAD,CAAWI,KAAK,OAAOC,SAAS,UAAhC,6DAGA,YAAC,IAAD,CAAWD,KAAK,eAAeC,SAAS,UAAxC,6MAMF,YAAC,IAAD,KACE,YAAC,IAAD,OAEF,YAAC,IAAD,KACE,YAAC,IAAD,oJAK6BP,YAAQJ,GALrC","file":"component---src-pages-api-api-declaration-declare-put-api-tsx-1c3f0fd8bed46807f666.js","sourcesContent":["import React from 'react'\r\nimport DeclareAPIPage from '../../../components/DeclareAPIPage'\r\n\r\nexport default function declarePutAPI() {\r\n  return <DeclareAPIPage method=\"put\" />\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nexport function IncompleteApiDeclarationLink() {\r\n  return <Link to=\"/api/IncompleteApiDeclaration\">IncompleteApiDeclaration</Link>\r\n}\r\n\r\nexport function DeclaredAPILink() {\r\n  return <Link to=\"/api/DeclaredAPI\">DeclaredAPI</Link>\r\n}\r\n","\r\nexport function ucFirst(s: string) {\r\n  return s[0].toUpperCase() + s.substr(1).toLowerCase()\r\n}\r\n","import React from 'react'\r\nimport { ucFirst } from '../utils'\r\nimport IndexLayout from '../layouts'\r\nimport Page from './Page'\r\nimport Container from './Container'\r\nimport { Purpose, Usage, Parameters, MethodReturnType, Parameter, Examples, Example } from './api-components'\r\nimport { IncompleteApiDeclarationLink } from './links'\r\n\r\nexport default function DeclareAPIPage({ method }: { method: string }) {\r\n  return (\r\n    <IndexLayout>\r\n      <Page>\r\n        <Container>\r\n          <h1>API Reference</h1>\r\n          <h2>class APIDeclaration</h2>\r\n          <h3>method declare{ucFirst(method)}API</h3>\r\n        </Container>\r\n        <Purpose>Used for declaring an API using the HTTP {method.toUpperCase()} method</Purpose>\r\n        <Usage>APIs can be declared at any time.</Usage>\r\n        <Parameters>\r\n          <Parameter name=\"path\" dataType=\"string\">\r\n            Path to the API under the base URL of the APIDeclaration.\r\n          </Parameter>\r\n          <Parameter name='routeOptions' dataType='varies'>\r\n            Options to the route. Type type is specified by the RouteOptions type parameter of the API declaration.\r\n\r\n            They have no inherent meaning in papupata, they are simply stored to be used by the application.\r\n          </Parameter>\r\n        </Parameters>\r\n        <MethodReturnType>\r\n          <IncompleteApiDeclarationLink />\r\n        </MethodReturnType>\r\n        <Examples>\r\n          <Example>\r\n            {`\r\n            import {APIDeclaration} from 'papupata'\r\n            const api = new APIDeclaration()\r\n\r\n            const MyAPI = api.declare${ucFirst(method)}API('/api/person')\r\n              .response<string>()\r\n          `}\r\n          </Example>\r\n        </Examples>\r\n      </Page>\r\n    </IndexLayout>\r\n  )\r\n}\r\n"],"sourceRoot":""}