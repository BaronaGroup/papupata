{"version":3,"sources":["webpack:///./src/pages/api/fetchAdapter.tsx","webpack:///./src/components/Banner.ts","webpack:///./src/components/ToDo.tsx"],"names":["FetchAdapter","Banner","styled","div","Container","ToDo","children"],"mappings":"2FAAA,4GAOe,SAASA,IACtB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,uCACA,uCAEF,YAAC,IAAD,sDACA,YAAC,IAAD,KACE,0P,wQCfH,IAAMC,E,KAASC,EAAOC,IAAV,M,wTCEnB,IAAMC,EAAYF,YAAOD,IAAPC,CAAH,KAOFG,EAAiB,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SAC/B,OAAO,YAACF,EAAD,KAAYE,GAAY","file":"component---src-pages-api-fetch-adapter-tsx-8f5df79bd07d26ad1eeb.js","sourcesContent":["import React from 'react'\r\nimport IndexLayout from '../../layouts'\r\nimport Page from '../../components/Page'\r\nimport Container from '../../components/Container'\r\nimport { Purpose } from '../../components/api-components'\r\nimport { ToDo } from '../../components/ToDo'\r\n\r\nexport default function FetchAdapter() {\r\n  return (\r\n    <IndexLayout>\r\n      <Page>\r\n        <Container>\r\n          <h1>API Reference</h1>\r\n          <h2>fetchAdapter</h2>\r\n        </Container>\r\n        <Purpose>An adapter that utilizes fetch to invoke APIs</Purpose>\r\n        <ToDo>\r\n          <p>\r\n            The adapter is not documented, and is not of all that high quality as it is and it makes various non-general assumptions. It\r\n            should serve to give you some ideas on how a proper fetch adapter might be implemented, though.\r\n          </p>\r\n        </ToDo>\r\n      </Page>\r\n    </IndexLayout>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Banner = styled.div`\r\n  border: 2px dotted transparent;\r\n  padding: 10px;\r\n  outline: 5px solid transparent;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Banner } from './Banner'\r\n\r\nconst Container = styled(Banner)`\r\n  border-color: yellowgreen;\r\n  background-color: #ffffa7;\r\n  outline-color: #ffffa7;\r\n  margin: 20px;\r\n`\r\n\r\nexport const ToDo: React.FC = ({ children }) => {\r\n  return <Container>{children || 'This section needs more work.'}</Container>\r\n}\r\n"],"sourceRoot":""}