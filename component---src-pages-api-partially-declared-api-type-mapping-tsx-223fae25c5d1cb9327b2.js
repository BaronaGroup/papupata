(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{"3KYE":function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var l=n("q1tI"),a=l.createContext(!1)},Kg6r:function(t,e,n){"use strict";n.d(e,"j",(function(){return y})),n.d(e,"k",(function(){return g})),n.d(e,"i",(function(){return T})),n.d(e,"a",(function(){return I})),n.d(e,"n",(function(){return q})),n.d(e,"h",(function(){return A})),n.d(e,"g",(function(){return N})),n.d(e,"f",(function(){return k})),n.d(e,"b",(function(){return P})),n.d(e,"e",(function(){return M})),n.d(e,"c",(function(){return D})),n.d(e,"d",(function(){return S})),n.d(e,"m",(function(){return x})),n.d(e,"l",(function(){return B}));var l,a,r,c,u,d,i,o,b,j=n("AcpX"),p=n("vOnD"),s=n("q1tI"),O=n.n(s),h=n("P+0o"),f=n("3KYE"),m=n("qKvR"),y=p.a.section(l||(l=Object(j.a)([""]))),g=p.a.h4(a||(a=Object(j.a)([""]))),v=p.a.h5(r||(r=Object(j.a)([""]))),w=p.a.section(c||(c=Object(j.a)(["\n  padding: 15px 30px;\n  background: lightyellow;\n"]))),T=function(t){var e=t.children;return Object(m.d)(y,null,Object(m.d)(g,null,"Purpose"),e)},I=function(t){var e=t.version;return Object(m.d)(y,null,Object(m.d)(g,null,"Availability"),"This functionality is available from papupata version ",e," onwards.")},q=function(t){var e=t.children;return Object(m.d)(y,null,Object(m.d)(g,null,"Usage"),e)},A=function(t){var e=t.children,n=t.includeAvailableFrom,l=t.label;return Object(m.d)(y,null,Object(m.d)(f.a.Provider,{value:!!n},Object(m.d)(g,null,"Parameters",l&&": "+l),e?Object(m.d)("table",null,Object(m.d)("thead",null,Object(m.d)("tr",null,Object(m.d)("th",null,"Name"),Object(m.d)("th",null,"Type"),Object(m.d)("th",null,"Description"),n&&Object(m.d)("th",null,"Introduced in"))),Object(m.d)("tbody",null,e)):Object(m.d)("p",null,"There are no parameters.")))},N=function(t){var e=t.children,n=t.name,l=t.dataType,a=t.availableFrom,r=void 0===a?"1.0.0":a,c=O.a.useContext(f.a);return Object(m.d)("tr",null,Object(m.d)("td",null,n),Object(m.d)("td",null,l),Object(m.d)("td",null,e),c&&Object(m.d)("td",null,r))},k=function(t){var e=t.children;return Object(m.d)(y,null,Object(m.d)(g,null,"Returns"),e)},P=function(t){var e=t.children;return Object(m.d)(y,null,Object(m.d)(g,null,"Caveats"),e)},M=function(t){var e=t.children;return Object(m.d)(y,null,Object(m.d)(g,null,"Examples"),e)},D=function(t){var e=t.children,n=t.label;return Object(m.d)(O.a.Fragment,null,n&&Object(m.d)(v,null,n),Object(m.d)(h.a,{language:"typescript"},e))},S=function(t){var e=t.children;return Object(m.d)(w,null,Object(m.d)(v,null,"Common to examples below:"),e)},x=function(t){var e=t.children,n=t.includeAvailableFrom;return Object(m.d)(y,null,Object(m.d)(g,null,"Type parameeters"),Object(m.d)(f.a.Provider,{value:!!n},Object(m.d)(g,null,"Parameters"),e?Object(m.d)("table",null,Object(m.d)("thead",null,Object(m.d)("tr",null,Object(m.d)("th",null,"Name"),Object(m.d)("th",null,"Default value"),Object(m.d)("th",null,"Description"),n?Object(m.d)("th",null,"Introduced in"):"")),Object(m.d)("tbody",null,e)):Object(m.d)("p",null,"There are no parameters.")))},E=p.a.tr(u||(u=Object(j.a)([""]))),C=p.a.td(d||(d=Object(j.a)([""]))),K=p.a.td(i||(i=Object(j.a)([""]))),F=p.a.td(o||(o=Object(j.a)([""]))),R=p.a.td(b||(b=Object(j.a)([""]))),B=function(t){var e=t.children,n=t.name,l=t.defaultValue,a=t.availableFrom,r=void 0===a?"none":a,c=O.a.useContext(f.a);return Object(m.d)(E,null,Object(m.d)(C,null,n),Object(m.d)(K,null,l),Object(m.d)(F,null,e),c?Object(m.d)(R,null,r):"")}},jqoI:function(t,e,n){"use strict";n.d(e,"c",(function(){return o})),n.d(e,"b",(function(){return p})),n.d(e,"a",(function(){return s}));var l,a,r,c=n("AcpX"),u=(n("+ego"),n("NqE+"),n("q1tI"),n("Kg6r")),d=n("vOnD"),i=n("qKvR");function o(t){var e=t.children;return Object(i.d)(u.j,null,Object(i.d)(u.k,null,"Overview"),e)}var b=d.a.h4(l||(l=Object(c.a)([""]))),j=d.a.h5(a||(a=Object(c.a)(["\n  font-size: 1.1em;\n"])));function p(t){var e=t.content;return Object(i.d)("div",null,Object(i.d)(u.j,null,Object(i.d)(u.k,null,"Table of contents"),Object(i.d)("ul",null,e.map((function(t){return Object(i.d)("li",{style:{marginLeft:18*(t.level||0)},key:t.anchor},Object(i.d)("a",{href:"#"+t.anchor},t.heading))})))),e.map((function(t){var e=t.level?j:b;return Object(i.d)(u.j,{id:t.anchor,key:t.anchor},Object(i.d)(e,null,t.heading),t.content)})))}var s=d.a.span(r||(r=Object(c.a)(["\n  font-family: 'Consolas', 'Bitstream Vera Sans Mono', 'Courier New', Courier, monospace;\n"])))},qyWZ:function(t,e,n){"use strict";n.r(e),n.d(e,"default",(function(){return o}));var l=n("Wbzz"),a=(n("q1tI"),n("Kg6r")),r=n("TBFr"),c=n("jqoI"),u=n("NqE+"),d=n("+ego"),i=n("qKvR");function o(){return Object(i.d)(d.a,null,Object(i.d)(u.a,null,Object(i.d)(r.a,null,Object(i.d)("h1",null,"API Reference"),Object(i.d)("h2",null,"class PartiallyDeclaredAPI"),Object(i.d)("h3",null,"type TypeMapping")),Object(i.d)(a.a,{version:"2.0.0"}),Object(i.d)(a.i,null,"Representing the types of values."),Object(i.d)(a.n,null,Object(i.d)("p",null,"These objects are used to provide types for query and path parameters, and from there they are also exposed via apiUrlParameters field of a declared API."),Object(i.d)("p",null,"TypeMapping is an object, that is essentially a collection of key-value pairs where the key stands for the name of the parameter and the value stands for the type, and when applicable, any other constraints put on the field."),Object(i.d)("p",null,"For additional information you might want to look at the ",Object(i.d)(l.a,{to:"/guide/declaring/typeMapping"},"TypeMapping guide")),Object(i.d)(a.c,null,"const typeMapping = { fieldName: String}")),Object(i.d)("h5",null,"Valid types and constraints"),Object(i.d)("table",null,Object(i.d)("thead",null,Object(i.d)("tr",null,Object(i.d)("th",null,"Value"),Object(i.d)("th",null,"Imported from"),Object(i.d)("th",null,"Description"))),Object(i.d)("tbody",null,Object(i.d)("tr",null,Object(i.d)("td",null,"String"),Object(i.d)("td",null,Object(i.d)(b,null)),Object(i.d)("td",null,"Any string, not constraints.")),Object(i.d)("tr",null,Object(i.d)("td",null,"StringMatching"),Object(i.d)("td",null,Object(i.d)(a.c,null,"import { StringMatching } from 'papupata/queryTypes'")),Object(i.d)("td",null,Object(i.d)("p",null,"A string that must match a given regular expression. Do note that the regex is NOT checked with typescript, so from its point of view any string will do."),Object(i.d)(a.c,null,"const typeMapping = { fieldName: StringMatching(/^hello/) }"),Object(i.d)("p",null,'It can be identified as being an object with a "type" field that has the value you can import as regexStringToken from papupata/queryTypes.'))),Object(i.d)("tr",null,Object(i.d)("td",null,"StringEnum"),Object(i.d)("td",null,Object(i.d)(a.c,null,"import { StringEnum } from 'papupata/queryTypes'")),Object(i.d)("td",null,Object(i.d)("p",null,"A string that must be one of the provided options. Do note that the ",Object(i.d)(c.a,null,"as const")," seen in the example is required in order to have typescript check the values being entered."),Object(i.d)(a.c,null,"const typeMapping = { fieldName: StringEnum(['alpha', 'beta', 'gamma'] as const) }"),Object(i.d)("p",null,'It can be identified as being an object with a "type" field that has the value you can import as stringEnumToken from papupata/queryTypes.'))),Object(i.d)("tr",null,Object(i.d)("td",null,"Number"),Object(i.d)("td",null,Object(i.d)(b,null)),Object(i.d)("td",null,"Any number, negative numbers, decimal numbers, NaN and Infinity are all allowed.")),Object(i.d)("tr",null,Object(i.d)("td",null,"Integer"),Object(i.d)("td",null,Object(i.d)(a.c,null,"import { Integer } from 'papupata/queryTypes'")),Object(i.d)("td",null,Object(i.d)("p",null,"An integer number. Negative number are allowed, Infinity and NaN are not. Do note that these constraints are NOT checked with typescript, so it appears to just accept a number."),Object(i.d)("p",null,'It can be identified as being an object with a "type" field that has the value you can import as integerToken from papupata/queryTypes.'))),Object(i.d)("tr",null,Object(i.d)("td",null,"Boolean"),Object(i.d)("td",null,Object(i.d)(b,null)),Object(i.d)("td",null,"Accepts the strings ",Object(i.d)(c.a,null,"true")," and ",Object(i.d)(c.a,null,"false")," to convert to their boolean counterparts. Empty strings becomes false as well.")),Object(i.d)("tr",null,Object(i.d)("td",null,"Date"),Object(i.d)("td",null,Object(i.d)(b,null)),Object(i.d)("td",null,"The value of the parameter is passed to the constructor of Date to produce a date. Invalid dates are rejected.")),Object(i.d)("tr",null,Object(i.d)("td",null,"Array"),Object(i.d)("td",null,Object(i.d)(b,null)),Object(i.d)("td",null,Object(i.d)("p",null,"An array of one entry that is one of the types specified above indicates an array of that type. Not applicable to path parameters. An array parameter is never strictly required -- it being missing results in an empty array."),Object(i.d)(a.c,null,"const typeMapping = { fieldName: [String]} // an array of strings"))))),Object(i.d)(a.e,null,Object(i.d)(a.c,null,"\n            import { APIDeclaration } from 'papupata'\n            import { StringMatching } from 'papupata/queryTypes'\n\n            const api = new APIDeclaration()\n            const myAPI = api.declarePostAPI('/do-stuff/:id')\n              .params({\n                id: StringMatching(/^[0-9a-f]{24}$/)\n              })\n              .query({\n                name: String,\n                age: Number\n              })\n              .optionalQuery({\n                wantsMarketingEmail: Boolean\n              })\n              .response<string>()\n          "))))}function b(){return Object(i.d)("span",null,"Not applicable")}}}]);
//# sourceMappingURL=component---src-pages-api-partially-declared-api-type-mapping-tsx-223fae25c5d1cb9327b2.js.map