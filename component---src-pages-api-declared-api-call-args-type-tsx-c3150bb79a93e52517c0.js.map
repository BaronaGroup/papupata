{"version":3,"sources":["webpack:///./src/pages/api/DeclaredAPI/CallArgsType.tsx"],"names":["CallArgsType","label"],"mappings":"2FAAA,8FAKe,SAASA,IACtB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,uCACA,2CACA,oDAEF,YAAC,IAAD,0JAIA,YAAC,IAAD,KACE,gHACA,4GAEF,YAAC,IAAD,KACE,YAAC,IAAD,CAASC,MAAM,eAAf,saAaA,YAAC,IAAD,CAASA,MAAM,mBAAf","file":"component---src-pages-api-declared-api-call-args-type-tsx-c3150bb79a93e52517c0.js","sourcesContent":["import IndexLayout from '../../../layouts'\r\nimport Page from '../../../components/Page'\r\nimport Container from '../../../components/Container'\r\nimport { Purpose, Usage, Examples, Example } from '../../../components/api-components'\r\n\r\nexport default function CallArgsType() {\r\n  return (\r\n    <IndexLayout>\r\n      <Page>\r\n        <Container>\r\n          <h1>API Reference</h1>\r\n          <h2>class DeclaredAPI</h2>\r\n          <h3>exposed type CallArgsType</h3>\r\n        </Container>\r\n        <Purpose>\r\n          Represents the type of arguments to API invocation. This exists to help you create functions that return parts or all of a\r\n          requests's parameters.\r\n        </Purpose>\r\n        <Usage>\r\n          <p>The exposed types are used with the typeof operator. See the example below for details.</p>\r\n          <p>Although the types are presented as fields on the API, they have no runtime value.</p>\r\n        </Usage>\r\n        <Examples>\r\n          <Example label=\"Basic usage\">\r\n            {`\r\n            import { APIDeclaration } from 'papupata'\r\n            const api = new APIDeclaration()\r\n            const myAPI = api.declarePostAPI('/do-stuff')\r\n              .query(['q'] as const)\r\n              .body<{key: string}>\r\n              .response<string>()\r\n\r\n            type CallArgsType = typeof myAPI['CallArgsType']\r\n            // CallArgsType is now {key: string, q: string}            \r\n          `}\r\n          </Example>\r\n          <Example label=\"Practical usage\">{`\r\n            await myAPI(getRequestParams())\r\n\r\n            function getRequestParams(): typeof myAPI['CallArgsType']  {\r\n              // Now typescript will complain because we do not return everything it needs\r\n            }\r\n          `}</Example>\r\n        </Examples>\r\n      </Page>\r\n    </IndexLayout>\r\n  )\r\n}\r\n"],"sourceRoot":""}