(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{457:function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return s}));t(1);var r=t(431),a=t(430),c=t(128),o=t(432),l=t(473),u=t(470),d=t(476),i=t(0);function s(){return Object(i.d)(r.a,null,Object(i.d)(a.a,null,Object(i.d)(c.a,null,Object(i.d)("h1",null,"API Reference"),Object(i.d)("h2",null,"interface IncompleteApiDeclaration")),Object(i.d)(o.i,null,"Used for defining the parameters and response types of an API."),Object(i.d)(o.n,null,Object(i.d)("p",null,'Technically there is nothing called "IncompleteApiDeclaration" in the code base. This is simply a representation of what is returned when declaring the API.'),Object(i.d)("p",null,"There is, out of necessity, a somewhat odd restriction. Although you can skip any parts you do not need, the method calls have to take place in a specific order. This is necessary to avoid a combinatorial expolosion of types as the API is being declared. Luckily Typescript is perfectly aware of which methods are available and when. In brief, the order of declarations must be params, query, optional query, bool query, body and finally response."),Object(i.d)("p",null,"The API declaration is done by invoking the methods exposed here in chain-like fashion. Once response is declared, you have a fully declared API which can then be implemented or called.")),Object(i.d)(l.b,{context:"IncompleteAPIDeclaration"},Object(i.d)(l.c,{name:"params",dataType:Object(i.d)(u.b,null)},"Declare URL/path parameters for the API."),Object(i.d)(l.c,{name:"query",dataType:Object(i.d)(u.b,null)},"Declare URL/path required string query parameters for the API."),Object(i.d)(l.c,{name:"optionalQuery",dataType:Object(i.d)(u.b,null)},"Declare URL/path optional query parameters for the API."),Object(i.d)(l.c,{name:"queryBool",dataType:Object(i.d)(u.b,null)},Object(i.d)(d.a,null),"Declare URL/path optional query parameters for the API."),Object(i.d)(l.c,{name:"body",dataType:Object(i.d)(u.b,null)},"Declare body type. At this time the body must be an object."),Object(i.d)(l.c,{name:"body",dataType:Object(i.d)(u.a,null)},"Declare response type and conclude the declaration of an API.")),Object(i.d)(o.e,null,Object(i.d)(o.c,null,"\n            import { APIDeclaration } from 'papupata'\n            const api = new APIDeclaration()\n            const myAPI = api.declarePostAPI('/do-stuff/:pathParam')\n              .params(['pathParam'] as const)\n              .query(['queryParam'] as const)\n              .optionalQuery(['opt'] as const)\n              .queryBool(['boolValue'] as const)\n              .body<{name: string}>()\n              .response<string>()\n          "))))}},470:function(e,n,t){"use strict";t.d(n,"b",(function(){return c})),t.d(n,"a",(function(){return o}));t(1);var r=t(48),a=t(0);function c(){return Object(a.d)(r.a,{to:"/api/IncompleteApiDeclaration"},"IncompleteApiDeclaration")}function o(){return Object(a.d)(r.a,{to:"/api/DeclaredAPI"},"DeclaredAPI")}},471:function(e,n,t){"use strict";function r(){var e=function(e,n){n||(n=e.slice(0));return e.raw=n,e}(["\n  border: 2px dotted transparent;\n  padding: 10px;\n  outline: 5px solid transparent;\n"]);return r=function(){return e},e}t.d(n,"a",(function(){return a}));var a=t(5).a.div(r())},473:function(e,n,t){"use strict";t.d(n,"b",(function(){return P})),t.d(n,"c",(function(){return w})),t.d(n,"d",(function(){return D})),t.d(n,"a",(function(){return T}));t(22);var r=t(432),a=t(1),c=t(5),o=t(48),l=t(0);function u(){var e=f([""]);return u=function(){return e},e}function d(){var e=f([""]);return d=function(){return e},e}function i(){var e=f([""]);return i=function(){return e},e}function s(){var e=f([""]);return s=function(){return e},e}function b(){var e=f([""]);return b=function(){return e},e}function p(){var e=f([""]);return p=function(){return e},e}function f(e,n){return n||(n=e.slice(0)),e.raw=n,e}var h=c.a.tr(p()),j=c.a.td(b()),O=c.a.td(s()),y=c.a.td(i()),m=c.a.td(d()),v=c.a.td(u()),A=Object(a.createContext)({context:""}),I=function(e){var n=e.name,t=e.children,r=Object(a.useContext)(A).context;return Object(l.d)(j,null,Object(l.d)(o.a,{to:"/api/"+r+"/"+n},t||n))},P=function(e){var n=e.children,t=e.context,a=e.includeRequiredColumn;return Object(l.d)(r.j,null,Object(l.d)(A.Provider,{value:{context:t}},Object(l.d)(r.k,null,"Members"),Object(l.d)("table",null,Object(l.d)("thead",null,Object(l.d)("th",null,"Name"),Object(l.d)("th",null,"Type"),Object(l.d)("th",null,"Data type/return type"),Object(l.d)("th",null,"Description"),a&&Object(l.d)("th",null,"Required")),Object(l.d)("tbody",null,n))))},w=function(e){var n=e.children,t=e.name,r=e.dataType,a=e.required,c=e.displayName;return Object(l.d)(h,null,Object(l.d)(I,{name:t},c),Object(l.d)(O,null,"method"),Object(l.d)(y,null,r),Object(l.d)(m,null,n),void 0!==a&&Object(l.d)(v,null,!0===a?"Yes":!1===a?"No":a))},D=function(e){var n=e.children,t=e.name,r=e.dataType,a=e.required;return Object(l.d)(h,null,Object(l.d)(j,null,t),Object(l.d)(O,null,"property"),Object(l.d)(y,null,r),Object(l.d)(m,null,n),void 0!==a&&Object(l.d)(v,null,!0===a?"Yes":!1===a?"No":a))},T=function(e){var n=e.children,t=e.name;return Object(l.d)(h,null,Object(l.d)(j,null,t),Object(l.d)(O,null,"property"),Object(l.d)(y,null,"n/a"),Object(l.d)(m,null,n,". Type type itself must be accessed using the typeof operator."))}},476:function(e,n,t){"use strict";t.d(n,"a",(function(){return u}));t(1);var r=t(5),a=t(471),c=t(0);function o(){var e=function(e,n){n||(n=e.slice(0));return e.raw=n,e}(["\n  border-color: yellowgreen;\n  background-color: #ffd892;\n  outline-color: #ffd892;\n  margin: 20px;\n"]);return o=function(){return e},e}var l=Object(r.a)(a.a)(o()),u=function(e){var n=e.children;return Object(c.d)(l,null,n||"Beware! There is a good chance this will be changed before 1.0 release!")}}}]);
//# sourceMappingURL=component---src-pages-api-incomplete-api-declaration-tsx-d4c9dae050267c52c50e.js.map