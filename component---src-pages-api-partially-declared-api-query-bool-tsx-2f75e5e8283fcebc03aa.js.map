{"version":3,"sources":["webpack:///./src/pages/api/PartiallyDeclaredAPI/queryBool.tsx","webpack:///./src/components/links.tsx","webpack:///./src/components/Banner.ts","webpack:///./src/components/MightChange.tsx"],"names":["QueryBool","name","dataType","label","IncompleteApiDeclarationLink","to","DeclaredAPILink","Banner","styled","div","Container","MightChange","children"],"mappings":"2FAAA,gHAOe,SAASA,IACtB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,uCACA,wDACA,2CAEF,YAAC,IAAD,MACA,YAAC,IAAD,qDACA,YAAC,IAAD,KACE,6FAEF,YAAC,IAAD,KACE,YAAC,IAAD,CAAWC,KAAK,qBAAqBC,SAAS,sBAC5C,uIACA,2NAMJ,YAAC,IAAD,KACE,YAAC,IAAD,OAEF,YAAC,IAAD,sLAIA,YAAC,IAAD,KACE,YAAC,IAAD,CAASC,MAAM,eAAf,4QASA,YAAC,IAAD,CAASA,MAAM,uBAAf,uIAMA,YAAC,IAAD,CAASA,MAAM,2BAAf,gQ,iCCrDV,4FAGO,SAASC,IACd,OAAO,YAAC,IAAD,CAAMC,GAAG,6BAAT,wBAGF,SAASC,IACd,OAAO,YAAC,IAAD,CAAMD,GAAG,oBAAT,iB,wQCNF,IAAME,E,KAASC,EAAOC,IAAV,M,wTCEnB,IAAMC,EAAYF,YAAOD,IAAPC,CAAH,KAOFG,EAAwB,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACtC,OAAO,YAACF,EAAD,KAAYE,GAAY","file":"component---src-pages-api-partially-declared-api-query-bool-tsx-2f75e5e8283fcebc03aa.js","sourcesContent":["import IndexLayout from '../../../layouts'\r\nimport Page from '../../../components/Page'\r\nimport Container from '../../../components/Container'\r\nimport { Purpose, Usage, Parameter, Parameters, MethodReturnType, Examples, Example, Caveats } from '../../../components/api-components'\r\nimport { IncompleteApiDeclarationLink } from '../../../components/links'\r\nimport { MightChange } from '../../../components/MightChange'\r\n\r\nexport default function QueryBool() {\r\n  return (\r\n    <IndexLayout>\r\n      <Page>\r\n        <Container>\r\n          <h1>API Reference</h1>\r\n          <h2>class IncompleteAPIDeclaration</h2>\r\n          <h3>method queryBool</h3>\r\n        </Container>\r\n        <MightChange />\r\n        <Purpose>Declares boolean query parameters for an API</Purpose>\r\n        <Usage>\r\n          <p>Path params and other query parameters may be defined before query.</p>\r\n        </Usage>\r\n        <Parameters>\r\n          <Parameter name=\"booleanQueryParams\" dataType=\"Const string array\">\r\n            <p>Names of the query parameters. See the example below for the recommended way to set up the const string array.</p>\r\n            <p>\r\n              At typescript level a regular string array is not treated as an error at declaration time, but using is NOT correct.\r\n              Unfortunately we have not come up with a way to prevent this kind of usage.\r\n            </p>\r\n          </Parameter>\r\n        </Parameters>\r\n        <MethodReturnType>\r\n          <IncompleteApiDeclarationLink />\r\n        </MethodReturnType>\r\n        <Caveats>\r\n          This feature is intented mainly to be used for papupata-to-papupata communications. The string \"true\" stands for true values on\r\n          the server, all other values stand for false.\r\n        </Caveats>\r\n        <Examples>\r\n          <Example label=\"Declaration\">\r\n            {`\r\n            import { APIDeclaration } from 'papupata'\r\n            const api = new APIDeclaration()\r\n            const myAPI = api.declarePostAPI('/do-stuff')\r\n              .queryBool(['query1', 'query2'] as const)\r\n              .response<string>()\r\n          `}\r\n          </Example>\r\n          <Example label=\"Usage in invocation\">\r\n            {`\r\n            await myAPI({query1: true, query2: false})\r\n            // Invokes URL /do-stuff?query1=true&query2=false\r\n          `}\r\n          </Example>\r\n          <Example label=\"Usage in implementation\">\r\n            {`\r\n            myAPI.implement(req => {\r\n              const {query1, query2} = req.query\r\n              return query1 + query2 // would return truefalse in the example. They come in as booleans, not strings.\r\n            })            \r\n          `}\r\n          </Example>\r\n        </Examples>\r\n      </Page>\r\n    </IndexLayout>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nexport function IncompleteApiDeclarationLink() {\r\n  return <Link to=\"/api/PartiallyDeclaredAPI\">PartiallyDeclaredAPI</Link>\r\n}\r\n\r\nexport function DeclaredAPILink() {\r\n  return <Link to=\"/api/DeclaredAPI\">DeclaredAPI</Link>\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const Banner = styled.div`\r\n  border: 2px dotted transparent;\r\n  padding: 10px;\r\n  outline: 5px solid transparent;\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Banner } from './Banner'\r\n\r\nconst Container = styled(Banner)`\r\n  border-color: yellowgreen;\r\n  background-color: #ffd892;\r\n  outline-color: #ffd892;\r\n  margin: 20px;\r\n`\r\n\r\nexport const MightChange: React.FC = ({ children }) => {\r\n  return <Container>{children || 'Beware! There is a good chance this will be changed before 1.0 release!'}</Container>\r\n}\r\n"],"sourceRoot":""}