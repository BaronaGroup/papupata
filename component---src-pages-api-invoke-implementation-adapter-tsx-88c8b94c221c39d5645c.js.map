{"version":3,"sources":["webpack:///./src/pages/api/invokeImplementationAdapter.tsx","webpack:///./src/components/guides.tsx","webpack:///./node_modules/core-js/modules/es6.string.anchor.js","webpack:///./src/components/members-table.tsx","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["Mock","version","name","dataType","OptionsTable","context","includeRequiredColumn","required","Overview","children","Level0","styled","h4","Level1","h5","GuideContent","content","map","child","style","marginLeft","level","key","anchor","href","heading","Heading","id","FixedFont","span","createHTML","this","Row","tr","NameColumnBase","td","TypeColumn","DataTypeColumn","DescriptionColumn","RequiredColumnStyles","AvailableFromColumn","RequiredColumn","useContext","MemberContext","Error","createContext","NameColumn","to","Members","includeAvailableFrom","Provider","value","MethodMember","displayName","availableFrom","React","IncludeAvailableFromContext","PropertyMember","link","ExposedTypeMember","url"],"mappings":"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","file":"component---src-pages-api-invoke-implementation-adapter-tsx-88c8b94c221c39d5645c.js","sourcesContent":["import IndexLayout from '../../layouts'\r\nimport Page from '../../components/Page'\r\nimport Container from '../../components/Container'\r\nimport { Purpose, Usage, Parameter, Parameters, MethodReturnType, Examples, Example, AvailableFrom } from '../../components/api-components'\r\nimport { Link } from 'gatsby'\r\nimport * as React from 'react'\r\nimport { FixedFont } from '../../components/guides'\r\nimport { Members, MethodMember, PropertyMember } from '../../components/members-table'\r\n\r\nexport default function Mock() {\r\n  return (\r\n    <IndexLayout>\r\n      <Page>\r\n        <Container>\r\n          <h1>API Reference</h1>\r\n          <h2>module invokeImplementationAdapter</h2>\r\n          <h3>Default export createInvokeImplementationAdapter</h3>\r\n        </Container>\r\n        <Purpose>This module allows you to use invoke implemented APIs with no express server. This is primarily used for testing.</Purpose>\r\n        <AvailableFrom version={'1.5.0'} />\r\n        <Usage>\r\n          <Example>{`\r\n            import createInvokeImplementationAdapter from 'papupata/dist/main/invokeImplementationAdapter'\r\n          `}</Example>\r\n          <p>\r\n            Call the function with any options you wish and use the returned value as the <FixedFont>makeRequest</FixedFont> of the\r\n            APIDeclaration. As always, a base url needs to be set up to make calls, but its value is ultimately irrelevant when using this\r\n            adapter.\r\n          </p>\r\n        </Usage>\r\n        <Parameters>\r\n          <Parameter name=\"options\" dataType=\"Object?\"><OptionsTable /></Parameter>\r\n        </Parameters>\r\n        <MethodReturnType>Papupata MakeRequestAdapter</MethodReturnType>\r\n        <Examples>\r\n          <Example>{`\r\n            import { APIDeclaration } from 'papupata'\r\n            import createInvokeImplementationAdapter from 'papupata/dist/main/invokeImplementationAdapter'\r\n            import express from 'express'\r\n            \r\n            const app = express()\r\n            const request = supertest(app)\r\n            const API = new APIDeclaration()\r\n            API.configure({\r\n              app,\r\n              baseURL: '',\r\n              makeRequest: createInvokeImplementationAdapter()\r\n            })\r\n\r\n          `}</Example>\r\n        </Examples>\r\n      </Page>\r\n    </IndexLayout>\r\n  )\r\n}\r\n\r\nexport function OptionsTable() {\r\n  return (\r\n    <Members context=\"options\" includeRequiredColumn={true}>\r\n      <MethodMember name=\"createRequest\" dataType=\"(requestBase) => Request\" required={false}>\r\n        <p>\r\n          This function is used to create the request passed to the API as if it was the express request. Its sole parameter is a very\r\n          minimal version of the request, which you may use as a template.\r\n        </p>\r\n        <p>This method can be used to add any necessary fields to the request.</p>\r\n        <Example>{`\r\n           const createRequest = base => ({...base, headers: { 'content-type': 'text/html' }})\r\n       `}</Example>\r\n      </MethodMember>\r\n      <MethodMember name=\"assertResponse\" dataType=\"(response) => void\" required={false}>\r\n        <p>\r\n          This function is called once the response is complete. It is passed a mock express response, allowing for making assertions to\r\n          whatever it may contain.\r\n        </p>\r\n        <Example>{`\r\n           const assertResponse = res => expect(res.statusCode).toEqual(400)\r\n       `}</Example>\r\n      </MethodMember>\r\n      <PropertyMember name=\"withMiddleware\" dataType=\"boolean\" required={false}>\r\n        <p>By default, and if explicitly set to false only the API implementation is called and all middleware is ignored.</p>\r\n        <p>If set to true, any express and papupata middleware on the route is run as normal for the requests.</p>\r\n      </PropertyMember>\r\n    </Members>\r\n  )\r\n}\r\n","import React, { ReactNode } from 'react'\nimport { Section, SectionHeading } from './api-components'\nimport styled from 'styled-components'\n\nexport function Overview({ children }: { children: ReactNode }) {\n  return (\n    <Section>\n      <SectionHeading>Overview</SectionHeading>\n      {children}\n    </Section>\n  )\n}\n\ninterface GuidePart {\n  heading: ReactNode\n  anchor: string\n  content: ReactNode\n  level?: number\n}\n\nconst Level0 = styled.h4``\nconst Level1= styled.h5`\n  font-size: 1.1em;\n`\n\nexport function GuideContent({ content }: { content: GuidePart[] }) {\n  return (\n    <div>\n      <Section>\n        <SectionHeading>Table of contents</SectionHeading>\n        <ul>\n          {content.map(child => (\n            <li style={{ marginLeft: 18 * (child.level || 0) }} key={child.anchor}>\n              <a href={`#${child.anchor}`}>{child.heading}</a>\n            </li>\n          ))}\n        </ul>\n      </Section>\n      {content.map(child => {\n        const Heading = !child.level ? Level0 : Level1\n        return (\n          <Section id={child.anchor} key={child.anchor}>\n            <Heading>{child.heading}</Heading>\n            {child.content}\n          </Section>\n        )\n      })}\n    </div>\n  )\n}\n\nexport const FixedFont = styled.span`\n  font-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace\n`\n","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n","import { Section, SectionHeading } from './api-components'\r\nimport React, { createContext, ReactNode, useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'gatsby'\r\nimport { IncludeAvailableFromContext } from './IncludeAvailableFromContext'\r\n\r\nconst Row = styled.tr``\r\nconst NameColumnBase = styled.td``\r\nconst TypeColumn = styled.td``\r\nconst DataTypeColumn = styled.td``\r\nconst DescriptionColumn = styled.td``\r\nconst RequiredColumnStyles = styled.td``\r\nconst AvailableFromColumn = styled.td``\r\n\r\nfunction RequiredColumn({ children }: { children: ReactNode }) {\r\n  const { includeRequiredColumn } = useContext(MemberContext)\r\n  if (!includeRequiredColumn && children) throw new Error('Being asked to show required cell, yet it does not exist')\r\n  return includeRequiredColumn ? <RequiredColumnStyles>{children}</RequiredColumnStyles> : null\r\n}\r\n\r\nconst MemberContext = createContext({ context: '', includeRequiredColumn: false })\r\n\r\nconst NameColumn: React.FC<{ name: string }> = ({ name, children }) => {\r\n  const { context } = useContext(MemberContext)\r\n  return (\r\n    <NameColumnBase>\r\n      <Link to={`/api/${context}/${name}`}>{children || name}</Link>\r\n    </NameColumnBase>\r\n  )\r\n}\r\n\r\nexport const Members: React.FC<{ context: string; includeRequiredColumn?: boolean; includeAvailableFrom?: boolean }> = ({\r\n  children,\r\n  context,\r\n  includeRequiredColumn,\r\n  includeAvailableFrom\r\n}) => {\r\n  return (\r\n    <Section>\r\n      <MemberContext.Provider value={{ context, includeRequiredColumn: !!includeRequiredColumn }}>\r\n        <IncludeAvailableFromContext.Provider value={!!includeAvailableFrom}>\r\n          <SectionHeading>Members</SectionHeading>\r\n          <table>\r\n            <thead>\r\n              <th>Name</th>\r\n              <th>Type</th>\r\n              <th>Data type/return type</th>\r\n              <th>Description</th>\r\n              {includeRequiredColumn && <th>Required</th>}\r\n              {includeAvailableFrom && <th>Introduced in</th>}\r\n            </thead>\r\n            <tbody>{children}</tbody>\r\n          </table>\r\n        </IncludeAvailableFromContext.Provider>\r\n      </MemberContext.Provider>\r\n    </Section>\r\n  )\r\n}\r\nexport const MethodMember: React.FC<{ name: string; dataType: any; required?: any; displayName?: any; availableFrom?: string }> = ({\r\n  children,\r\n  name,\r\n  dataType,\r\n  required,\r\n  displayName,\r\n  availableFrom\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n  return (\r\n    <Row>\r\n      <NameColumn name={name}>{displayName}</NameColumn>\r\n      <TypeColumn>method</TypeColumn>\r\n      <DataTypeColumn>{dataType}</DataTypeColumn>\r\n      <DescriptionColumn>{children}</DescriptionColumn>\r\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\r\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport const PropertyMember: React.FC<{ name: string; dataType: any; required?: any; availableFrom?: string; link?: boolean }> = ({\r\n  children,\r\n  name,\r\n  dataType,\r\n  required,\r\n  availableFrom,\r\n  link\r\n}) => {\r\n  const includeAvailableFrom = React.useContext(IncludeAvailableFromContext)\r\n\r\n  return (\r\n    <Row>\r\n      {link ? <NameColumn name={name}>{name}</NameColumn> : <NameColumnBase>{name}</NameColumnBase>}\r\n      <TypeColumn>property</TypeColumn>\r\n      <DataTypeColumn>{dataType}</DataTypeColumn>\r\n      <DescriptionColumn>{children}</DescriptionColumn>\r\n      <RequiredColumn>{required === true ? 'Yes' : required === false ? 'No' : required}</RequiredColumn>\r\n      {includeAvailableFrom ? <AvailableFromColumn>{availableFrom}</AvailableFromColumn> : ''}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport const ExposedTypeMember: React.FC<{ name: string }> = ({ children, name }) => {\r\n  return (\r\n    <Row>\r\n      <NameColumnBase>{name}</NameColumnBase>\r\n      <TypeColumn>property</TypeColumn>\r\n      <DataTypeColumn>n/a</DataTypeColumn>\r\n      <DescriptionColumn>{children}. Type type itself must be accessed using the typeof operator.</DescriptionColumn>\r\n    </Row>\r\n  )\r\n}\r\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}